ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CapSense_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	CapSense_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	CapSense_Enable, %function
  24              	CapSense_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense.c"
   1:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:.\Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense.c **** *
   5:.\Generated_Source\PSoC5/CapSense.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC5/CapSense.c **** *  component.
   8:.\Generated_Source\PSoC5/CapSense.c **** *
   9:.\Generated_Source\PSoC5/CapSense.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense.c **** *
  11:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense.c **** 
  18:.\Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:.\Generated_Source\PSoC5/CapSense.c **** 
  20:.\Generated_Source\PSoC5/CapSense.c **** 
  21:.\Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  22:.\Generated_Source\PSoC5/CapSense.c ****             
  23:.\Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  24:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  25:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  26:.\Generated_Source\PSoC5/CapSense.c **** 
  27:.\Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  28:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  29:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
  30:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  31:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 2


  32:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  33:.\Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  34:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  35:.\Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  36:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  37:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  38:.\Generated_Source\PSoC5/CapSense.c ****         
  39:.\Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  40:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  41:.\Generated_Source\PSoC5/CapSense.c **** 
  42:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  43:.\Generated_Source\PSoC5/CapSense.c **** 0x7Fu, };
  44:.\Generated_Source\PSoC5/CapSense.c **** 
  45:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  46:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  47:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  48:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e0__LS__PC, 
  49:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e1__LS__PC, 
  50:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e2__LS__PC, 
  51:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e3__LS__PC, 
  52:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e4__LS__PC, 
  53:.\Generated_Source\PSoC5/CapSense.c **** };
  54:.\Generated_Source\PSoC5/CapSense.c **** 
  55:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  56:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  57:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  58:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__PORT, 
  59:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__PORT, 
  60:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__PORT, 
  61:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__PORT, 
  62:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__PORT, 
  63:.\Generated_Source\PSoC5/CapSense.c **** };
  64:.\Generated_Source\PSoC5/CapSense.c **** 
  65:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  66:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
  67:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
  68:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__MASK,
  69:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__MASK,
  70:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__MASK,
  71:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__MASK,
  72:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__MASK,
  73:.\Generated_Source\PSoC5/CapSense.c **** };
  74:.\Generated_Source\PSoC5/CapSense.c **** 
  75:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  76:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  77:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  78:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  79:.\Generated_Source\PSoC5/CapSense.c **** };
  80:.\Generated_Source\PSoC5/CapSense.c **** 
  81:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  82:.\Generated_Source\PSoC5/CapSense.c ****     200u,200u,200u,200u,200u,200u,200u,
  83:.\Generated_Source\PSoC5/CapSense.c **** };
  84:.\Generated_Source\PSoC5/CapSense.c **** 
  85:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  86:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  87:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  88:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 3


  89:.\Generated_Source\PSoC5/CapSense.c **** };
  90:.\Generated_Source\PSoC5/CapSense.c **** 
  91:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  92:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  93:.\Generated_Source\PSoC5/CapSense.c ****     1u, /* Button0__BTN */
  94:.\Generated_Source\PSoC5/CapSense.c ****     2u, /* Button1__BTN */
  95:.\Generated_Source\PSoC5/CapSense.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
  96:.\Generated_Source\PSoC5/CapSense.c ****     
  97:.\Generated_Source\PSoC5/CapSense.c **** };
  98:.\Generated_Source\PSoC5/CapSense.c **** 
  99:.\Generated_Source\PSoC5/CapSense.c **** 
 100:.\Generated_Source\PSoC5/CapSense.c **** 
 101:.\Generated_Source\PSoC5/CapSense.c **** 
 102:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 104:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 105:.\Generated_Source\PSoC5/CapSense.c **** *
 106:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 107:.\Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 108:.\Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 109:.\Generated_Source\PSoC5/CapSense.c **** *
 110:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 111:.\Generated_Source\PSoC5/CapSense.c **** *  None
 112:.\Generated_Source\PSoC5/CapSense.c **** *
 113:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 114:.\Generated_Source\PSoC5/CapSense.c **** *  None
 115:.\Generated_Source\PSoC5/CapSense.c **** *
 116:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 117:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 118:.\Generated_Source\PSoC5/CapSense.c **** {
 119:.\Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 120:.\Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 121:.\Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 122:.\Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 123:.\Generated_Source\PSoC5/CapSense.c ****         
 124:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 125:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 126:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 127:.\Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 128:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 129:.\Generated_Source\PSoC5/CapSense.c ****            */
 130:.\Generated_Source\PSoC5/CapSense.c ****     
 131:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 132:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 133:.\Generated_Source\PSoC5/CapSense.c **** 
 134:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 135:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 136:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 137:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 138:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 139:.\Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 140:.\Generated_Source\PSoC5/CapSense.c ****                                                
 141:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 142:.\Generated_Source\PSoC5/CapSense.c ****     #else
 143:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 144:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 145:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 4


 146:.\Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 147:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 148:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 149:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 150:.\Generated_Source\PSoC5/CapSense.c **** 
 151:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 152:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 153:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 154:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 155:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 156:.\Generated_Source\PSoC5/CapSense.c ****         
 157:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 158:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 159:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 160:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 161:.\Generated_Source\PSoC5/CapSense.c ****         
 162:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 163:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 164:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 165:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 166:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 167:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 168:.\Generated_Source\PSoC5/CapSense.c ****         
 169:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 170:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 171:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 172:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 173:.\Generated_Source\PSoC5/CapSense.c ****                 
 174:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 175:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 176:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 177:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 178:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 179:.\Generated_Source\PSoC5/CapSense.c ****         
 180:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 181:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 182:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 183:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 184:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 185:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 186:.\Generated_Source\PSoC5/CapSense.c ****         
 187:.\Generated_Source\PSoC5/CapSense.c ****     #else
 188:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 189:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 190:.\Generated_Source\PSoC5/CapSense.c ****     
 191:.\Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 192:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 193:.\Generated_Source\PSoC5/CapSense.c ****     
 194:.\Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 195:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 196:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 197:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 198:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 199:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 200:.\Generated_Source\PSoC5/CapSense.c ****         
 201:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 202:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 5


 203:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 204:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 205:.\Generated_Source\PSoC5/CapSense.c ****     
 206:.\Generated_Source\PSoC5/CapSense.c ****     #else
 207:.\Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 208:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 209:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 210:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 211:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 212:.\Generated_Source\PSoC5/CapSense.c ****         
 213:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 214:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 215:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 216:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 217:.\Generated_Source\PSoC5/CapSense.c ****         
 218:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 219:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 220:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 221:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 222:.\Generated_Source\PSoC5/CapSense.c ****         
 223:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 224:.\Generated_Source\PSoC5/CapSense.c ****     
 225:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 226:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 227:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 228:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 229:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 230:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 231:.\Generated_Source\PSoC5/CapSense.c ****             
 232:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 233:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 234:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 235:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 236:.\Generated_Source\PSoC5/CapSense.c ****            
 237:.\Generated_Source\PSoC5/CapSense.c ****         #else
 238:.\Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 239:.\Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 240:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 241:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 242:.\Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 243:.\Generated_Source\PSoC5/CapSense.c ****             
 244:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 245:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 246:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 247:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 248:.\Generated_Source\PSoC5/CapSense.c ****             
 249:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 250:.\Generated_Source\PSoC5/CapSense.c ****             
 251:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 252:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 253:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 254:.\Generated_Source\PSoC5/CapSense.c ****             
 255:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 256:.\Generated_Source\PSoC5/CapSense.c ****     
 257:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 258:.\Generated_Source\PSoC5/CapSense.c ****     
 259:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 6


 260:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 261:.\Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 262:.\Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 263:.\Generated_Source\PSoC5/CapSense.c ****     
 264:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 265:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 266:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 267:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 268:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 269:.\Generated_Source\PSoC5/CapSense.c ****     
 270:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 271:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 272:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 273:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 274:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 275:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 276:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 277:.\Generated_Source\PSoC5/CapSense.c ****     
 278:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 279:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 280:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 281:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 282:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 283:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 284:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 285:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 286:.\Generated_Source\PSoC5/CapSense.c ****     
 287:.\Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 288:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 289:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 290:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 291:.\Generated_Source\PSoC5/CapSense.c ****     
 292:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 293:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 294:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 295:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 296:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 297:.\Generated_Source\PSoC5/CapSense.c ****     
 298:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 299:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 300:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 301:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 302:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 303:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 304:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 305:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 306:.\Generated_Source\PSoC5/CapSense.c ****     
 307:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 308:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 309:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 310:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 311:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 312:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 313:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 314:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 315:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 316:.\Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 7


 317:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 318:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 319:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 320:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 321:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 322:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 323:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 324:.\Generated_Source\PSoC5/CapSense.c **** }
 325:.\Generated_Source\PSoC5/CapSense.c **** 
 326:.\Generated_Source\PSoC5/CapSense.c **** 
 327:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 328:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 329:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 330:.\Generated_Source\PSoC5/CapSense.c **** *
 331:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 332:.\Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 333:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 334:.\Generated_Source\PSoC5/CapSense.c **** *
 335:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 336:.\Generated_Source\PSoC5/CapSense.c **** *  None
 337:.\Generated_Source\PSoC5/CapSense.c **** *
 338:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 339:.\Generated_Source\PSoC5/CapSense.c **** *  None
 340:.\Generated_Source\PSoC5/CapSense.c **** *
 341:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 342:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 343:.\Generated_Source\PSoC5/CapSense.c **** {
  27              		.loc 1 343 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
 344:.\Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 345:.\Generated_Source\PSoC5/CapSense.c ****     
 346:.\Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  35              		.loc 1 346 0
  36 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  37              	.LVL0:
  38 0006 0446     		mov	r4, r0
  39              	.LVL1:
 347:.\Generated_Source\PSoC5/CapSense.c ****     
 348:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 349:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 350:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 351:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 352:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 353:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 354:.\Generated_Source\PSoC5/CapSense.c ****         
 355:.\Generated_Source\PSoC5/CapSense.c ****     #else
 356:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 357:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 358:.\Generated_Source\PSoC5/CapSense.c ****     
 359:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 360:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 8


  40              		.loc 1 360 0
  41 0008 134B     		ldr	r3, .L2
  42 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  43 000c 42F02002 		orr	r2, r2, #32
  44 0010 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC5/CapSense.c ****     
 362:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 363:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 364:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 365:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 366:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 367:.\Generated_Source\PSoC5/CapSense.c ****         
 368:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 369:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 370:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 371:.\Generated_Source\PSoC5/CapSense.c ****         
 372:.\Generated_Source\PSoC5/CapSense.c ****     #else
 373:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 374:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 375:.\Generated_Source\PSoC5/CapSense.c ****         
 376:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 377:.\Generated_Source\PSoC5/CapSense.c ****     
 378:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 379:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 380:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 381:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 382:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 383:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 384:.\Generated_Source\PSoC5/CapSense.c ****             
 385:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 386:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 387:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 388:.\Generated_Source\PSoC5/CapSense.c ****            
 389:.\Generated_Source\PSoC5/CapSense.c ****         #else
 390:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 391:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 392:.\Generated_Source\PSoC5/CapSense.c ****         
 393:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 394:.\Generated_Source\PSoC5/CapSense.c ****     
 395:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 396:.\Generated_Source\PSoC5/CapSense.c ****     
 397:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 398:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 399:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  45              		.loc 1 399 0
  46 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  47              	.LVL2:
 400:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 401:.\Generated_Source\PSoC5/CapSense.c ****     
 402:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 403:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  48              		.loc 1 403 0
  49 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  50              	.LVL3:
 404:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 405:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  51              		.loc 1 405 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 9


  52 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  53              	.LVL4:
 406:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 407:.\Generated_Source\PSoC5/CapSense.c ****     
 408:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 409:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 410:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 411:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 412:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 413:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 414:.\Generated_Source\PSoC5/CapSense.c ****     
 415:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 416:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 417:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 418:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 419:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 420:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 421:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 422:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 423:.\Generated_Source\PSoC5/CapSense.c ****     #else
 424:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 425:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  54              		.loc 1 425 0
  55 001e 0F4B     		ldr	r3, .L2+4
  56 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  57 0022 42F01002 		orr	r2, r2, #16
  58 0026 1A70     		strb	r2, [r3]
 426:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  59              		.loc 1 426 0
  60 0028 103B     		subs	r3, r3, #16
  61 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  62 002c 42F01002 		orr	r2, r2, #16
  63 0030 1A70     		strb	r2, [r3]
 427:.\Generated_Source\PSoC5/CapSense.c ****         
 428:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 429:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 430:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 431:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 432:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 433:.\Generated_Source\PSoC5/CapSense.c ****     
 434:.\Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 435:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 436:.\Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 437:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 438:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 439:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 440:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 441:.\Generated_Source\PSoC5/CapSense.c ****         
 442:.\Generated_Source\PSoC5/CapSense.c ****     #else
 443:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 444:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  64              		.loc 1 444 0
  65 0032 03F5A653 		add	r3, r3, #5312
  66 0036 0533     		adds	r3, r3, #5
  67 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  68 003a 42F00102 		orr	r2, r2, #1
  69 003e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 10


 445:.\Generated_Source\PSoC5/CapSense.c ****         
 446:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 447:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 448:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 449:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 450:.\Generated_Source\PSoC5/CapSense.c ****     
 451:.\Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  70              		.loc 1 451 0
  71 0040 2046     		mov	r0, r4
  72 0042 FFF7FEFF 		bl	CyExitCriticalSection
  73              	.LVL5:
 452:.\Generated_Source\PSoC5/CapSense.c ****     
 453:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 454:.\Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  74              		.loc 1 454 0
  75 0046 0222     		movs	r2, #2
  76 0048 054B     		ldr	r3, .L2+8
  77 004a 1A60     		str	r2, [r3]
 455:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 456:.\Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 457:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 458:.\Generated_Source\PSoC5/CapSense.c ****     
 459:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 460:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  78              		.loc 1 460 0
  79 004c 054B     		ldr	r3, .L2+12
  80 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  81 0050 42F08002 		orr	r2, r2, #128
  82 0054 1A70     		strb	r2, [r3]
  83 0056 10BD     		pop	{r4, pc}
  84              	.LVL6:
  85              	.L3:
  86              		.align	2
  87              	.L2:
  88 0058 95640040 		.word	1073767573
  89 005c BB430040 		.word	1073759163
  90 0060 00E100E0 		.word	-536813312
  91 0064 77640040 		.word	1073767543
  92              		.cfi_endproc
  93              	.LFE1:
  94              		.size	CapSense_Enable, .-CapSense_Enable
  95              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  96              		.align	2
  97              		.global	CapSense_FindNextSensor
  98              		.thumb
  99              		.thumb_func
 100              		.type	CapSense_FindNextSensor, %function
 101              	CapSense_FindNextSensor:
 102              	.LFB4:
 461:.\Generated_Source\PSoC5/CapSense.c **** }
 462:.\Generated_Source\PSoC5/CapSense.c **** 
 463:.\Generated_Source\PSoC5/CapSense.c **** 
 464:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 466:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 467:.\Generated_Source\PSoC5/CapSense.c **** *
 468:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 11


 469:.\Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 470:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 471:.\Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 472:.\Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 473:.\Generated_Source\PSoC5/CapSense.c **** *
 474:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 475:.\Generated_Source\PSoC5/CapSense.c **** *  None
 476:.\Generated_Source\PSoC5/CapSense.c **** *
 477:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 478:.\Generated_Source\PSoC5/CapSense.c **** *  None
 479:.\Generated_Source\PSoC5/CapSense.c **** *
 480:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 481:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 482:.\Generated_Source\PSoC5/CapSense.c **** *  first function call.
 483:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 484:.\Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 485:.\Generated_Source\PSoC5/CapSense.c **** *
 486:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 487:.\Generated_Source\PSoC5/CapSense.c **** *  No
 488:.\Generated_Source\PSoC5/CapSense.c **** *
 489:.\Generated_Source\PSoC5/CapSense.c **** * Note:
 490:.\Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 491:.\Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 492:.\Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 493:.\Generated_Source\PSoC5/CapSense.c **** *
 494:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 495:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 496:.\Generated_Source\PSoC5/CapSense.c **** {
 497:.\Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 498:.\Generated_Source\PSoC5/CapSense.c ****     {
 499:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 500:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 501:.\Generated_Source\PSoC5/CapSense.c ****     }
 502:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 503:.\Generated_Source\PSoC5/CapSense.c ****     
 504:.\Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 505:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 506:.\Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 507:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 508:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 509:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 510:.\Generated_Source\PSoC5/CapSense.c **** }
 511:.\Generated_Source\PSoC5/CapSense.c **** 
 512:.\Generated_Source\PSoC5/CapSense.c **** 
 513:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 514:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 515:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 516:.\Generated_Source\PSoC5/CapSense.c **** *
 517:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 518:.\Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 519:.\Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 520:.\Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 521:.\Generated_Source\PSoC5/CapSense.c **** *
 522:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 523:.\Generated_Source\PSoC5/CapSense.c **** *  None
 524:.\Generated_Source\PSoC5/CapSense.c **** *
 525:.\Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 12


 526:.\Generated_Source\PSoC5/CapSense.c **** *  None
 527:.\Generated_Source\PSoC5/CapSense.c **** *
 528:.\Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 529:.\Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 530:.\Generated_Source\PSoC5/CapSense.c **** *
 531:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 532:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 533:.\Generated_Source\PSoC5/CapSense.c **** {
 534:.\Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 535:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 536:.\Generated_Source\PSoC5/CapSense.c ****     
 537:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 538:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 539:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 540:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 541:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 542:.\Generated_Source\PSoC5/CapSense.c ****     
 543:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 544:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 545:.\Generated_Source\PSoC5/CapSense.c ****     
 546:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 547:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 548:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 549:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 550:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 551:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 552:.\Generated_Source\PSoC5/CapSense.c ****         
 553:.\Generated_Source\PSoC5/CapSense.c ****     #else
 554:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 555:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 556:.\Generated_Source\PSoC5/CapSense.c ****     
 557:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 558:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 559:.\Generated_Source\PSoC5/CapSense.c ****     
 560:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 561:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 562:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 563:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 564:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 565:.\Generated_Source\PSoC5/CapSense.c **** 
 566:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 567:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 568:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 569:.\Generated_Source\PSoC5/CapSense.c **** 
 570:.\Generated_Source\PSoC5/CapSense.c ****     #else
 571:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 572:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 573:.\Generated_Source\PSoC5/CapSense.c ****         
 574:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 575:.\Generated_Source\PSoC5/CapSense.c ****     
 576:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 577:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 578:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 579:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 580:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 581:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 582:.\Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 13


 583:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 584:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 585:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 586:.\Generated_Source\PSoC5/CapSense.c ****            
 587:.\Generated_Source\PSoC5/CapSense.c ****         #else
 588:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 589:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 590:.\Generated_Source\PSoC5/CapSense.c ****         
 591:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 592:.\Generated_Source\PSoC5/CapSense.c ****     
 593:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 594:.\Generated_Source\PSoC5/CapSense.c ****     
 595:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 596:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 597:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 598:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 599:.\Generated_Source\PSoC5/CapSense.c ****     
 600:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 601:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 602:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 603:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 604:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 605:.\Generated_Source\PSoC5/CapSense.c ****     
 606:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 607:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 608:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 609:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 610:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 611:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 612:.\Generated_Source\PSoC5/CapSense.c ****     
 613:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 614:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 615:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 616:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 617:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 618:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 619:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 620:.\Generated_Source\PSoC5/CapSense.c **** 
 621:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 622:.\Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 623:.\Generated_Source\PSoC5/CapSense.c ****     #else
 624:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 625:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 626:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 627:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 628:.\Generated_Source\PSoC5/CapSense.c ****         
 629:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 630:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 631:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 632:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 633:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 634:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 635:.\Generated_Source\PSoC5/CapSense.c ****     
 636:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 637:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 638:.\Generated_Source\PSoC5/CapSense.c **** }
 639:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 14


 640:.\Generated_Source\PSoC5/CapSense.c **** 
 641:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 642:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 643:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 644:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 645:.\Generated_Source\PSoC5/CapSense.c ****     *
 646:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 647:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 648:.\Generated_Source\PSoC5/CapSense.c ****     *
 649:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 650:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 651:.\Generated_Source\PSoC5/CapSense.c ****     *
 652:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 653:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 654:.\Generated_Source\PSoC5/CapSense.c ****     *
 655:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 656:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 657:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 658:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 659:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 660:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 661:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 662:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 663:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 664:.\Generated_Source\PSoC5/CapSense.c ****     *
 665:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 666:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 667:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 668:.\Generated_Source\PSoC5/CapSense.c ****     *
 669:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 670:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 671:.\Generated_Source\PSoC5/CapSense.c ****     {
 103              		.loc 1 671 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL7:
 109 0000 10B4     		push	{r4}
 110              		.cfi_def_cfa_offset 4
 111              		.cfi_offset 4, -4
 672:.\Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 673:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 674:.\Generated_Source\PSoC5/CapSense.c ****         
 675:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 676:.\Generated_Source\PSoC5/CapSense.c ****         do
 677:.\Generated_Source\PSoC5/CapSense.c ****         {
 678:.\Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 679:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 680:.\Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 681:.\Generated_Source\PSoC5/CapSense.c ****             {
 682:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 683:.\Generated_Source\PSoC5/CapSense.c ****             }
 684:.\Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 685:.\Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 112              		.loc 1 685 0
 113 0002 0124     		movs	r4, #1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 15


 686:.\Generated_Source\PSoC5/CapSense.c ****         }    
 687:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 114              		.loc 1 687 0
 115 0004 0749     		ldr	r1, .L9
 116              	.LVL8:
 117              	.L6:
 679:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 118              		.loc 1 679 0
 119 0006 0130     		adds	r0, r0, #1
 120              	.LVL9:
 121 0008 C0B2     		uxtb	r0, r0
 122              	.LVL10:
 680:.\Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 123              		.loc 1 680 0
 124 000a 0728     		cmp	r0, #7
 125 000c 07D0     		beq	.L5
 684:.\Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 126              		.loc 1 684 0
 127 000e C308     		lsrs	r3, r0, #3
 685:.\Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 128              		.loc 1 685 0
 129 0010 00F00702 		and	r2, r0, #7
 130 0014 04FA02F2 		lsl	r2, r4, r2
 131              	.LVL11:
 132              		.loc 1 687 0
 133 0018 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 134 001a 1A42     		tst	r2, r3
 135 001c F3D0     		beq	.L6
 136              	.LVL12:
 137              	.L5:
 688:.\Generated_Source\PSoC5/CapSense.c ****         
 689:.\Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 690:.\Generated_Source\PSoC5/CapSense.c ****     }
 138              		.loc 1 690 0
 139 001e 5DF8044B 		ldr	r4, [sp], #4
 140 0022 7047     		bx	lr
 141              	.L10:
 142              		.align	2
 143              	.L9:
 144 0024 00000000 		.word	.LANCHOR0
 145              		.cfi_endproc
 146              	.LFE4:
 147              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 148              		.section	.text.CapSense_IsBusy,"ax",%progbits
 149              		.align	2
 150              		.global	CapSense_IsBusy
 151              		.thumb
 152              		.thumb_func
 153              		.type	CapSense_IsBusy, %function
 154              	CapSense_IsBusy:
 155              	.LFB8:
 691:.\Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 692:.\Generated_Source\PSoC5/CapSense.c ****  
 693:.\Generated_Source\PSoC5/CapSense.c ****  
 694:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 695:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 696:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 16


 697:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 698:.\Generated_Source\PSoC5/CapSense.c ****     *
 699:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 700:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 701:.\Generated_Source\PSoC5/CapSense.c ****     *  
 702:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 703:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 704:.\Generated_Source\PSoC5/CapSense.c ****     *
 705:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 706:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 707:.\Generated_Source\PSoC5/CapSense.c ****     *
 708:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 709:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 710:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 711:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 712:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 713:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 714:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 715:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 716:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 717:.\Generated_Source\PSoC5/CapSense.c ****     *
 718:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 719:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 720:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 721:.\Generated_Source\PSoC5/CapSense.c ****     *
 722:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 723:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 724:.\Generated_Source\PSoC5/CapSense.c ****     {
 725:.\Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 726:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 727:.\Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 728:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 729:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 730:.\Generated_Source\PSoC5/CapSense.c ****         
 731:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 732:.\Generated_Source\PSoC5/CapSense.c ****         do
 733:.\Generated_Source\PSoC5/CapSense.c ****         {
 734:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 735:.\Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 736:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 737:.\Generated_Source\PSoC5/CapSense.c ****             {
 738:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 739:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 740:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 741:.\Generated_Source\PSoC5/CapSense.c ****             }
 742:.\Generated_Source\PSoC5/CapSense.c ****             
 743:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 744:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 745:.\Generated_Source\PSoC5/CapSense.c ****         }
 746:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 747:.\Generated_Source\PSoC5/CapSense.c ****         
 748:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 749:.\Generated_Source\PSoC5/CapSense.c ****         do
 750:.\Generated_Source\PSoC5/CapSense.c ****         {
 751:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 752:.\Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 753:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 17


 754:.\Generated_Source\PSoC5/CapSense.c ****             {
 755:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 756:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 757:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 758:.\Generated_Source\PSoC5/CapSense.c ****             }
 759:.\Generated_Source\PSoC5/CapSense.c ****             
 760:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 761:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 762:.\Generated_Source\PSoC5/CapSense.c ****         } 
 763:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 764:.\Generated_Source\PSoC5/CapSense.c ****         
 765:.\Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 766:.\Generated_Source\PSoC5/CapSense.c ****         
 767:.\Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 768:.\Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 769:.\Generated_Source\PSoC5/CapSense.c ****         {
 770:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 771:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 772:.\Generated_Source\PSoC5/CapSense.c ****             
 773:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 774:.\Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 775:.\Generated_Source\PSoC5/CapSense.c ****         }
 776:.\Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 777:.\Generated_Source\PSoC5/CapSense.c ****         {
 778:.\Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 779:.\Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 780:.\Generated_Source\PSoC5/CapSense.c ****            
 781:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 782:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 783:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 784:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 785:.\Generated_Source\PSoC5/CapSense.c ****         }
 786:.\Generated_Source\PSoC5/CapSense.c ****         else
 787:.\Generated_Source\PSoC5/CapSense.c ****         {
 788:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 789:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 790:.\Generated_Source\PSoC5/CapSense.c ****             
 791:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 792:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 793:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 794:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 795:.\Generated_Source\PSoC5/CapSense.c ****         }
 796:.\Generated_Source\PSoC5/CapSense.c ****         
 797:.\Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 798:.\Generated_Source\PSoC5/CapSense.c ****     }
 799:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 800:.\Generated_Source\PSoC5/CapSense.c **** 
 801:.\Generated_Source\PSoC5/CapSense.c **** 
 802:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 803:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 804:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 805:.\Generated_Source\PSoC5/CapSense.c **** *
 806:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 807:.\Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 808:.\Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 809:.\Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 810:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 18


 811:.\Generated_Source\PSoC5/CapSense.c **** *
 812:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 813:.\Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 814:.\Generated_Source\PSoC5/CapSense.c **** *
 815:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 816:.\Generated_Source\PSoC5/CapSense.c **** *  None
 817:.\Generated_Source\PSoC5/CapSense.c **** *
 818:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 819:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 820:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 821:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 822:.\Generated_Source\PSoC5/CapSense.c **** *
 823:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 824:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 825:.\Generated_Source\PSoC5/CapSense.c **** {
 826:.\Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 827:.\Generated_Source\PSoC5/CapSense.c ****     
 828:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 829:.\Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 830:.\Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 831:.\Generated_Source\PSoC5/CapSense.c ****         
 832:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 833:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 834:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 835:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 836:.\Generated_Source\PSoC5/CapSense.c ****         
 837:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 838:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 839:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 840:.\Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 841:.\Generated_Source\PSoC5/CapSense.c ****         #else
 842:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 843:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 844:.\Generated_Source\PSoC5/CapSense.c **** 
 845:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 846:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 847:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 848:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 849:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 850:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 851:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 852:.\Generated_Source\PSoC5/CapSense.c ****                */
 853:.\Generated_Source\PSoC5/CapSense.c **** 
 854:.\Generated_Source\PSoC5/CapSense.c ****     #else
 855:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 856:.\Generated_Source\PSoC5/CapSense.c ****         {
 857:.\Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 858:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 859:.\Generated_Source\PSoC5/CapSense.c ****             
 860:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 861:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 862:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 863:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 864:.\Generated_Source\PSoC5/CapSense.c ****             
 865:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 866:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 867:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 19


 868:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 869:.\Generated_Source\PSoC5/CapSense.c ****             #else
 870:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 871:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 872:.\Generated_Source\PSoC5/CapSense.c ****         }
 873:.\Generated_Source\PSoC5/CapSense.c ****         
 874:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 875:.\Generated_Source\PSoC5/CapSense.c ****         {
 876:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 877:.\Generated_Source\PSoC5/CapSense.c ****         
 878:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 879:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 880:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 881:.\Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 882:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 883:.\Generated_Source\PSoC5/CapSense.c ****             
 884:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 885:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 886:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 887:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 888:.\Generated_Source\PSoC5/CapSense.c ****             #else
 889:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 890:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 891:.\Generated_Source\PSoC5/CapSense.c ****         }
 892:.\Generated_Source\PSoC5/CapSense.c **** 
 893:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 894:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 895:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 896:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 897:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 898:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 899:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 900:.\Generated_Source\PSoC5/CapSense.c ****                */
 901:.\Generated_Source\PSoC5/CapSense.c **** 
 902:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 903:.\Generated_Source\PSoC5/CapSense.c **** }
 904:.\Generated_Source\PSoC5/CapSense.c **** 
 905:.\Generated_Source\PSoC5/CapSense.c **** 
 906:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 907:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 908:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 909:.\Generated_Source\PSoC5/CapSense.c **** *
 910:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 911:.\Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 912:.\Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 913:.\Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 914:.\Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 915:.\Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 916:.\Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 917:.\Generated_Source\PSoC5/CapSense.c **** *
 918:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 919:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 920:.\Generated_Source\PSoC5/CapSense.c **** *
 921:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 922:.\Generated_Source\PSoC5/CapSense.c **** *  None
 923:.\Generated_Source\PSoC5/CapSense.c **** *
 924:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 20


 925:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 926:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 927:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 928:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 929:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 930:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 931:.\Generated_Source\PSoC5/CapSense.c **** *
 932:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 933:.\Generated_Source\PSoC5/CapSense.c **** *  No
 934:.\Generated_Source\PSoC5/CapSense.c **** *
 935:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 936:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 937:.\Generated_Source\PSoC5/CapSense.c **** {
 938:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 939:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 940:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 941:.\Generated_Source\PSoC5/CapSense.c ****     
 942:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 943:.\Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 944:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 945:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 946:.\Generated_Source\PSoC5/CapSense.c ****         
 947:.\Generated_Source\PSoC5/CapSense.c ****     #else
 948:.\Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 949:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 950:.\Generated_Source\PSoC5/CapSense.c ****         {
 951:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 952:.\Generated_Source\PSoC5/CapSense.c ****         }
 953:.\Generated_Source\PSoC5/CapSense.c ****         else
 954:.\Generated_Source\PSoC5/CapSense.c ****         {
 955:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 956:.\Generated_Source\PSoC5/CapSense.c ****         }
 957:.\Generated_Source\PSoC5/CapSense.c ****         
 958:.\Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 959:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 960:.\Generated_Source\PSoC5/CapSense.c ****         {
 961:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 962:.\Generated_Source\PSoC5/CapSense.c ****         }
 963:.\Generated_Source\PSoC5/CapSense.c ****         else
 964:.\Generated_Source\PSoC5/CapSense.c ****         {
 965:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 966:.\Generated_Source\PSoC5/CapSense.c ****         }
 967:.\Generated_Source\PSoC5/CapSense.c ****         
 968:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 969:.\Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 970:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 971:.\Generated_Source\PSoC5/CapSense.c ****         {
 972:.\Generated_Source\PSoC5/CapSense.c ****         
 973:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 974:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 975:.\Generated_Source\PSoC5/CapSense.c ****         }
 976:.\Generated_Source\PSoC5/CapSense.c ****         
 977:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 978:.\Generated_Source\PSoC5/CapSense.c **** }
 979:.\Generated_Source\PSoC5/CapSense.c **** 
 980:.\Generated_Source\PSoC5/CapSense.c **** 
 981:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 21


 982:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 983:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 984:.\Generated_Source\PSoC5/CapSense.c **** *
 985:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 986:.\Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 987:.\Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 988:.\Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 989:.\Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 990:.\Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 991:.\Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 992:.\Generated_Source\PSoC5/CapSense.c **** *
 993:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 994:.\Generated_Source\PSoC5/CapSense.c **** *  None
 995:.\Generated_Source\PSoC5/CapSense.c **** *
 996:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 997:.\Generated_Source\PSoC5/CapSense.c **** *  None
 998:.\Generated_Source\PSoC5/CapSense.c **** *
 999:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1000:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1001:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1002:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1003:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1004:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1005:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1006:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1007:.\Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1008:.\Generated_Source\PSoC5/CapSense.c **** *
1009:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1010:.\Generated_Source\PSoC5/CapSense.c **** *  No
1011:.\Generated_Source\PSoC5/CapSense.c **** *
1012:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1013:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1014:.\Generated_Source\PSoC5/CapSense.c **** {
1015:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1016:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
1017:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
1018:.\Generated_Source\PSoC5/CapSense.c ****     
1019:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1020:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1021:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1022:.\Generated_Source\PSoC5/CapSense.c **** 
1023:.\Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1024:.\Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1025:.\Generated_Source\PSoC5/CapSense.c ****         {
1026:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1027:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1028:.\Generated_Source\PSoC5/CapSense.c ****         }
1029:.\Generated_Source\PSoC5/CapSense.c ****         
1030:.\Generated_Source\PSoC5/CapSense.c ****     #else
1031:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1032:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1033:.\Generated_Source\PSoC5/CapSense.c ****         
1034:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1035:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1036:.\Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1037:.\Generated_Source\PSoC5/CapSense.c ****         {
1038:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 22


1039:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1040:.\Generated_Source\PSoC5/CapSense.c ****         }
1041:.\Generated_Source\PSoC5/CapSense.c ****         
1042:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1043:.\Generated_Source\PSoC5/CapSense.c **** }
1044:.\Generated_Source\PSoC5/CapSense.c **** 
1045:.\Generated_Source\PSoC5/CapSense.c **** 
1046:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1047:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1048:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1049:.\Generated_Source\PSoC5/CapSense.c **** *
1050:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1051:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1052:.\Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1053:.\Generated_Source\PSoC5/CapSense.c **** *
1054:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1055:.\Generated_Source\PSoC5/CapSense.c **** *  None
1056:.\Generated_Source\PSoC5/CapSense.c **** *
1057:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1058:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1059:.\Generated_Source\PSoC5/CapSense.c **** *  completed.
1060:.\Generated_Source\PSoC5/CapSense.c **** *
1061:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1062:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1063:.\Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1064:.\Generated_Source\PSoC5/CapSense.c **** *
1065:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1067:.\Generated_Source\PSoC5/CapSense.c **** {
 156              		.loc 1 1067 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
1068:.\Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 161              		.loc 1 1068 0
 162 0000 024B     		ldr	r3, .L12
 163 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1069:.\Generated_Source\PSoC5/CapSense.c **** }
 164              		.loc 1 1069 0
 165 0004 00F00100 		and	r0, r0, #1
 166 0008 7047     		bx	lr
 167              	.L13:
 168 000a 00BF     		.align	2
 169              	.L12:
 170 000c 00000000 		.word	CapSense_csv
 171              		.cfi_endproc
 172              	.LFE8:
 173              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 174              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 175              		.align	2
 176              		.global	CapSense_ReadSensorRaw
 177              		.thumb
 178              		.thumb_func
 179              		.type	CapSense_ReadSensorRaw, %function
 180              	CapSense_ReadSensorRaw:
 181              	.LFB9:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 23


1070:.\Generated_Source\PSoC5/CapSense.c **** 
1071:.\Generated_Source\PSoC5/CapSense.c **** 
1072:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1074:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1075:.\Generated_Source\PSoC5/CapSense.c **** *
1076:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1077:.\Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1078:.\Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1079:.\Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1080:.\Generated_Source\PSoC5/CapSense.c **** *
1081:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1082:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1083:.\Generated_Source\PSoC5/CapSense.c **** *
1084:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1085:.\Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1086:.\Generated_Source\PSoC5/CapSense.c **** *
1087:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1088:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1089:.\Generated_Source\PSoC5/CapSense.c **** *
1090:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1091:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1092:.\Generated_Source\PSoC5/CapSense.c **** {
 182              		.loc 1 1092 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 187              	.LVL13:
1093:.\Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1094:.\Generated_Source\PSoC5/CapSense.c **** }
 188              		.loc 1 1094 0
 189 0000 014B     		ldr	r3, .L15
 190 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 191              	.LVL14:
 192 0006 7047     		bx	lr
 193              	.L16:
 194              		.align	2
 195              	.L15:
 196 0008 00000000 		.word	CapSense_sensorRaw
 197              		.cfi_endproc
 198              	.LFE9:
 199              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 200              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 201              		.align	2
 202              		.global	CapSense_EnableSensor
 203              		.thumb
 204              		.thumb_func
 205              		.type	CapSense_EnableSensor, %function
 206              	CapSense_EnableSensor:
 207              	.LFB11:
1095:.\Generated_Source\PSoC5/CapSense.c **** 
1096:.\Generated_Source\PSoC5/CapSense.c **** 
1097:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1098:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1099:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1100:.\Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 24


1101:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1102:.\Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1103:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1104:.\Generated_Source\PSoC5/CapSense.c **** *
1105:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1106:.\Generated_Source\PSoC5/CapSense.c **** *  None
1107:.\Generated_Source\PSoC5/CapSense.c **** *
1108:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1109:.\Generated_Source\PSoC5/CapSense.c **** *  None
1110:.\Generated_Source\PSoC5/CapSense.c **** *
1111:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1112:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1113:.\Generated_Source\PSoC5/CapSense.c **** {
1114:.\Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1115:.\Generated_Source\PSoC5/CapSense.c ****    
1116:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1117:.\Generated_Source\PSoC5/CapSense.c ****     {
1118:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1119:.\Generated_Source\PSoC5/CapSense.c ****     }
1120:.\Generated_Source\PSoC5/CapSense.c **** }
1121:.\Generated_Source\PSoC5/CapSense.c **** 
1122:.\Generated_Source\PSoC5/CapSense.c **** 
1123:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1124:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1125:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1126:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1127:.\Generated_Source\PSoC5/CapSense.c ****     *
1128:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1129:.\Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1130:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1131:.\Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1132:.\Generated_Source\PSoC5/CapSense.c ****     *
1133:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1134:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1135:.\Generated_Source\PSoC5/CapSense.c ****     *
1136:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1137:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1138:.\Generated_Source\PSoC5/CapSense.c ****     *
1139:.\Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1140:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1141:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1142:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1143:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1144:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1145:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1146:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1147:.\Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1148:.\Generated_Source\PSoC5/CapSense.c ****     *
1149:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1150:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1151:.\Generated_Source\PSoC5/CapSense.c ****     {
1152:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1153:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1154:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1155:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1156:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1157:.\Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 25


1158:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1159:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1160:.\Generated_Source\PSoC5/CapSense.c ****         {
1161:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1162:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1163:.\Generated_Source\PSoC5/CapSense.c ****         }
1164:.\Generated_Source\PSoC5/CapSense.c ****         else
1165:.\Generated_Source\PSoC5/CapSense.c ****         {
1166:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1167:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1168:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1169:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1170:.\Generated_Source\PSoC5/CapSense.c ****                         
1171:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1172:.\Generated_Source\PSoC5/CapSense.c ****             {
1173:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1174:.\Generated_Source\PSoC5/CapSense.c ****             }
1175:.\Generated_Source\PSoC5/CapSense.c ****         } 
1176:.\Generated_Source\PSoC5/CapSense.c ****     }
1177:.\Generated_Source\PSoC5/CapSense.c ****     
1178:.\Generated_Source\PSoC5/CapSense.c ****     
1179:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1180:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1181:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1182:.\Generated_Source\PSoC5/CapSense.c ****     *
1183:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1184:.\Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1185:.\Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1186:.\Generated_Source\PSoC5/CapSense.c ****     *
1187:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1188:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1189:.\Generated_Source\PSoC5/CapSense.c ****     *
1190:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1191:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1192:.\Generated_Source\PSoC5/CapSense.c ****     *
1193:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1194:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1195:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1196:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1197:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1198:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1199:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1200:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1201:.\Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1202:.\Generated_Source\PSoC5/CapSense.c ****     *
1203:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1204:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1205:.\Generated_Source\PSoC5/CapSense.c ****     {
1206:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1207:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1208:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1209:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1210:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1211:.\Generated_Source\PSoC5/CapSense.c ****         
1212:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1213:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1214:.\Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 26


1215:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1216:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1217:.\Generated_Source\PSoC5/CapSense.c ****         }
1218:.\Generated_Source\PSoC5/CapSense.c ****         else
1219:.\Generated_Source\PSoC5/CapSense.c ****         {
1220:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1221:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1222:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1223:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1224:.\Generated_Source\PSoC5/CapSense.c ****                         
1225:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1226:.\Generated_Source\PSoC5/CapSense.c ****             {
1227:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1228:.\Generated_Source\PSoC5/CapSense.c ****             }
1229:.\Generated_Source\PSoC5/CapSense.c ****         } 
1230:.\Generated_Source\PSoC5/CapSense.c ****     }
1231:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1232:.\Generated_Source\PSoC5/CapSense.c **** 
1233:.\Generated_Source\PSoC5/CapSense.c **** 
1234:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1235:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1236:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1237:.\Generated_Source\PSoC5/CapSense.c **** *
1238:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1239:.\Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1240:.\Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1241:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1242:.\Generated_Source\PSoC5/CapSense.c **** *
1243:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1244:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1245:.\Generated_Source\PSoC5/CapSense.c **** *
1246:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1247:.\Generated_Source\PSoC5/CapSense.c **** *  None
1248:.\Generated_Source\PSoC5/CapSense.c **** *
1249:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1250:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1251:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1252:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1253:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1254:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1255:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1256:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1257:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1258:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1259:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1260:.\Generated_Source\PSoC5/CapSense.c **** *
1261:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1262:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1263:.\Generated_Source\PSoC5/CapSense.c **** {
 208              		.loc 1 1263 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL15:
 213 0000 10B5     		push	{r4, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 4, -8
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 27


 216              		.cfi_offset 14, -4
1264:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 217              		.loc 1 1264 0
 218 0002 0B4B     		ldr	r3, .L20
 219 0004 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 220              	.LVL16:
1265:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 221              		.loc 1 1265 0
 222 0006 1918     		adds	r1, r3, r0
 223              	.LVL17:
 224 0008 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 225              	.LVL18:
1266:.\Generated_Source\PSoC5/CapSense.c ****     
1267:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1268:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1269:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1270:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1271:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1272:.\Generated_Source\PSoC5/CapSense.c ****             */
1273:.\Generated_Source\PSoC5/CapSense.c ****     
1274:.\Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1275:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 226              		.loc 1 1275 0
 227 000a 03EB8003 		add	r3, r3, r0, lsl #2
 228              	.LVL19:
 229 000e 1B69     		ldr	r3, [r3, #16]
 230 0010 0924     		movs	r4, #9
 231 0012 1C70     		strb	r4, [r3]
1276:.\Generated_Source\PSoC5/CapSense.c ****     
1277:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1278:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 232              		.loc 1 1278 0
 233 0014 0F2A     		cmp	r2, #15
 234 0016 00D1     		bne	.L18
1279:.\Generated_Source\PSoC5/CapSense.c **** 	{
1280:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 235              		.loc 1 1280 0
 236 0018 0722     		movs	r2, #7
 237              	.L18:
 238              	.LVL20:
1281:.\Generated_Source\PSoC5/CapSense.c **** 	}
1282:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 239              		.loc 1 1282 0
 240 001a 054B     		ldr	r3, .L20
 241              	.LVL21:
 242 001c 03EB8202 		add	r2, r3, r2, lsl #2
 243              	.LVL22:
 244 0020 D36A     		ldr	r3, [r2, #44]
 245              	.LVL23:
 246 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 247 0024 0A43     		orrs	r2, r2, r1
 248 0026 1A70     		strb	r2, [r3]
1283:.\Generated_Source\PSoC5/CapSense.c ****     
1284:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1285:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1286:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1287:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 28


1288:.\Generated_Source\PSoC5/CapSense.c ****         #else
1289:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 249              		.loc 1 1289 0
 250 0028 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 251              	.LVL24:
 252 002c 10BD     		pop	{r4, pc}
 253              	.L21:
 254 002e 00BF     		.align	2
 255              	.L20:
 256 0030 00000000 		.word	.LANCHOR1
 257              		.cfi_endproc
 258              	.LFE11:
 259              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 260              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 261              		.align	2
 262              		.global	CapSense_DisableSensor
 263              		.thumb
 264              		.thumb_func
 265              		.type	CapSense_DisableSensor, %function
 266              	CapSense_DisableSensor:
 267              	.LFB12:
1290:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1291:.\Generated_Source\PSoC5/CapSense.c ****                 
1292:.\Generated_Source\PSoC5/CapSense.c ****     #else
1293:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1294:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1295:.\Generated_Source\PSoC5/CapSense.c ****             {
1296:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1297:.\Generated_Source\PSoC5/CapSense.c ****             } 
1298:.\Generated_Source\PSoC5/CapSense.c ****             else
1299:.\Generated_Source\PSoC5/CapSense.c ****             {
1300:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1301:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1302:.\Generated_Source\PSoC5/CapSense.c ****             }
1303:.\Generated_Source\PSoC5/CapSense.c ****             
1304:.\Generated_Source\PSoC5/CapSense.c ****         #else
1305:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1306:.\Generated_Source\PSoC5/CapSense.c ****             {
1307:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1308:.\Generated_Source\PSoC5/CapSense.c ****             } 
1309:.\Generated_Source\PSoC5/CapSense.c ****             else
1310:.\Generated_Source\PSoC5/CapSense.c ****             {
1311:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1312:.\Generated_Source\PSoC5/CapSense.c ****             }
1313:.\Generated_Source\PSoC5/CapSense.c ****             
1314:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1315:.\Generated_Source\PSoC5/CapSense.c ****         
1316:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1317:.\Generated_Source\PSoC5/CapSense.c **** }
1318:.\Generated_Source\PSoC5/CapSense.c **** 
1319:.\Generated_Source\PSoC5/CapSense.c **** 
1320:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1321:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1322:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1323:.\Generated_Source\PSoC5/CapSense.c **** *
1324:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1325:.\Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 29


1326:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1327:.\Generated_Source\PSoC5/CapSense.c **** *
1328:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1329:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1330:.\Generated_Source\PSoC5/CapSense.c **** *
1331:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1332:.\Generated_Source\PSoC5/CapSense.c **** *  None
1333:.\Generated_Source\PSoC5/CapSense.c **** *
1334:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1335:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1336:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1337:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1338:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1339:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1340:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1341:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1342:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1343:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1344:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1345:.\Generated_Source\PSoC5/CapSense.c **** *
1346:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1347:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1348:.\Generated_Source\PSoC5/CapSense.c **** {
 268              		.loc 1 1348 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL25:
 273 0000 70B5     		push	{r4, r5, r6, lr}
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 4, -16
 276              		.cfi_offset 5, -12
 277              		.cfi_offset 6, -8
 278              		.cfi_offset 14, -4
 279 0002 0446     		mov	r4, r0
1349:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 280              		.loc 1 1349 0
 281 0004 0B4B     		ldr	r3, .L25
 282 0006 1D5C     		ldrb	r5, [r3, r0]	@ zero_extendqisi2
 283              	.LVL26:
1350:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 284              		.loc 1 1350 0
 285 0008 0344     		add	r3, r3, r0
 286              	.LVL27:
 287 000a 1E7A     		ldrb	r6, [r3, #8]	@ zero_extendqisi2
 288              	.LVL28:
1351:.\Generated_Source\PSoC5/CapSense.c ****     
1352:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1353:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1354:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1355:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1356:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1357:.\Generated_Source\PSoC5/CapSense.c ****             */
1358:.\Generated_Source\PSoC5/CapSense.c ****     
1359:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1360:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1361:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 30


1362:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1363:.\Generated_Source\PSoC5/CapSense.c ****         #else
1364:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 289              		.loc 1 1364 0
 290 000c FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 291              	.LVL29:
1365:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1366:.\Generated_Source\PSoC5/CapSense.c ****                 
1367:.\Generated_Source\PSoC5/CapSense.c ****     #else
1368:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1369:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1370:.\Generated_Source\PSoC5/CapSense.c ****             {
1371:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1372:.\Generated_Source\PSoC5/CapSense.c ****             } 
1373:.\Generated_Source\PSoC5/CapSense.c ****             else
1374:.\Generated_Source\PSoC5/CapSense.c ****             {
1375:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1376:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1377:.\Generated_Source\PSoC5/CapSense.c ****             }
1378:.\Generated_Source\PSoC5/CapSense.c ****             
1379:.\Generated_Source\PSoC5/CapSense.c ****         #else
1380:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1381:.\Generated_Source\PSoC5/CapSense.c ****             {
1382:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1383:.\Generated_Source\PSoC5/CapSense.c ****             } 
1384:.\Generated_Source\PSoC5/CapSense.c ****             else
1385:.\Generated_Source\PSoC5/CapSense.c ****             {
1386:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1387:.\Generated_Source\PSoC5/CapSense.c ****             }
1388:.\Generated_Source\PSoC5/CapSense.c ****             
1389:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1390:.\Generated_Source\PSoC5/CapSense.c ****         
1391:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1392:.\Generated_Source\PSoC5/CapSense.c ****     
1393:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1394:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 292              		.loc 1 1394 0
 293 0010 0F2D     		cmp	r5, #15
 294 0012 00D1     		bne	.L23
1395:.\Generated_Source\PSoC5/CapSense.c **** 	{
1396:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 295              		.loc 1 1396 0
 296 0014 0725     		movs	r5, #7
 297              	.L23:
 298              	.LVL30:
1397:.\Generated_Source\PSoC5/CapSense.c **** 	}
1398:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 299              		.loc 1 1398 0
 300 0016 074B     		ldr	r3, .L25
 301              	.LVL31:
 302 0018 03EB8505 		add	r5, r3, r5, lsl #2
 303              	.LVL32:
 304 001c EA6A     		ldr	r2, [r5, #44]
 305 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 306 0020 21EA0606 		bic	r6, r1, r6
 307 0024 1670     		strb	r6, [r2]
1399:.\Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 31


1400:.\Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1401:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1402:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 308              		.loc 1 1402 0
 309 0026 03EB8404 		add	r4, r3, r4, lsl #2
 310              	.LVL33:
 311 002a 2369     		ldr	r3, [r4, #16]
 312 002c 0822     		movs	r2, #8
 313 002e 1A70     		strb	r2, [r3]
 314 0030 70BD     		pop	{r4, r5, r6, pc}
 315              	.L26:
 316 0032 00BF     		.align	2
 317              	.L25:
 318 0034 00000000 		.word	.LANCHOR1
 319              		.cfi_endproc
 320              	.LFE12:
 321              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 322              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 323              		.align	2
 324              		.global	CapSense_ClearSensors
 325              		.thumb
 326              		.thumb_func
 327              		.type	CapSense_ClearSensors, %function
 328              	CapSense_ClearSensors:
 329              	.LFB10:
1113:.\Generated_Source\PSoC5/CapSense.c **** {
 330              		.loc 1 1113 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 10B5     		push	{r4, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 14, -4
 338              	.LVL34:
1116:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 339              		.loc 1 1116 0
 340 0002 0024     		movs	r4, #0
 341 0004 04E0     		b	.L28
 342              	.LVL35:
 343              	.L29:
1118:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 344              		.loc 1 1118 0 discriminator 2
 345 0006 2046     		mov	r0, r4
 346 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 347              	.LVL36:
1116:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 348              		.loc 1 1116 0 discriminator 2
 349 000c 0134     		adds	r4, r4, #1
 350              	.LVL37:
 351 000e E4B2     		uxtb	r4, r4
 352              	.LVL38:
 353              	.L28:
1116:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 354              		.loc 1 1116 0 is_stmt 0 discriminator 1
 355 0010 062C     		cmp	r4, #6
 356 0012 F8D9     		bls	.L29
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 32


1120:.\Generated_Source\PSoC5/CapSense.c **** }
 357              		.loc 1 1120 0 is_stmt 1
 358 0014 10BD     		pop	{r4, pc}
 359              		.cfi_endproc
 360              	.LFE10:
 361              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 362 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 363              		.align	2
 364              		.global	CapSense_Stop
 365              		.thumb
 366              		.thumb_func
 367              		.type	CapSense_Stop, %function
 368              	CapSense_Stop:
 369              	.LFB3:
 533:.\Generated_Source\PSoC5/CapSense.c **** {
 370              		.loc 1 533 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 10B5     		push	{r4, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 535:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 378              		.loc 1 535 0
 379 0002 154C     		ldr	r4, .L31
 380 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 381 0006 03F0FD03 		and	r3, r3, #253
 382 000a 2370     		strb	r3, [r4]
 538:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 383              		.loc 1 538 0
 384 000c 0222     		movs	r2, #2
 385 000e 134B     		ldr	r3, .L31+4
 386 0010 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 387              		.loc 1 544 0
 388 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 389              	.LVL39:
 558:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 390              		.loc 1 558 0
 391 0016 124B     		ldr	r3, .L31+8
 392 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 393 001a 02F0DF02 		and	r2, r2, #223
 394 001e 1A70     		strb	r2, [r3]
 597:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 395              		.loc 1 597 0
 396 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 397              	.LVL40:
 601:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 398              		.loc 1 601 0
 399 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 400              	.LVL41:
 603:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 401              		.loc 1 603 0
 402 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 403              	.LVL42:
 625:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 33


 404              		.loc 1 625 0
 405 002c 0D4B     		ldr	r3, .L31+12
 406 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 407 0030 02F0FE02 		and	r2, r2, #254
 408 0034 1A70     		strb	r2, [r3]
 626:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 409              		.loc 1 626 0
 410 0036 A3F5A653 		sub	r3, r3, #5312
 411 003a 053B     		subs	r3, r3, #5
 412 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 413 003e 02F0EF02 		and	r2, r2, #239
 414 0042 1A70     		strb	r2, [r3]
 627:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 415              		.loc 1 627 0
 416 0044 1033     		adds	r3, r3, #16
 417 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 418 0048 02F0EF02 		and	r2, r2, #239
 419 004c 1A70     		strb	r2, [r3]
 637:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 420              		.loc 1 637 0
 421 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 422 0050 03F07F03 		and	r3, r3, #127
 423 0054 2370     		strb	r3, [r4]
 424 0056 10BD     		pop	{r4, pc}
 425              	.L32:
 426              		.align	2
 427              	.L31:
 428 0058 77640040 		.word	1073767543
 429 005c 80E100E0 		.word	-536813184
 430 0060 95640040 		.word	1073767573
 431 0064 70580040 		.word	1073764464
 432              		.cfi_endproc
 433              	.LFE3:
 434              		.size	CapSense_Stop, .-CapSense_Stop
 435              		.section	.text.CapSense_PostScan,"ax",%progbits
 436              		.align	2
 437              		.global	CapSense_PostScan
 438              		.thumb
 439              		.thumb_func
 440              		.type	CapSense_PostScan, %function
 441              	CapSense_PostScan:
 442              	.LFB14:
1403:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1404:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1405:.\Generated_Source\PSoC5/CapSense.c ****     #else
1406:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1407:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1408:.\Generated_Source\PSoC5/CapSense.c **** }
1409:.\Generated_Source\PSoC5/CapSense.c **** 
1410:.\Generated_Source\PSoC5/CapSense.c **** 
1411:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1412:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1413:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1414:.\Generated_Source\PSoC5/CapSense.c **** *
1415:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1416:.\Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1417:.\Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 34


1418:.\Generated_Source\PSoC5/CapSense.c **** *
1419:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1420:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1421:.\Generated_Source\PSoC5/CapSense.c **** *
1422:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1423:.\Generated_Source\PSoC5/CapSense.c **** *  None
1424:.\Generated_Source\PSoC5/CapSense.c **** *
1425:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1426:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1427:.\Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1428:.\Generated_Source\PSoC5/CapSense.c **** *  resistor.
1429:.\Generated_Source\PSoC5/CapSense.c **** *
1430:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1431:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1432:.\Generated_Source\PSoC5/CapSense.c **** {
1433:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1434:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1435:.\Generated_Source\PSoC5/CapSense.c ****     
1436:.\Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1437:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1438:.\Generated_Source\PSoC5/CapSense.c **** 
1439:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1440:.\Generated_Source\PSoC5/CapSense.c ****     
1441:.\Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1442:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1443:.\Generated_Source\PSoC5/CapSense.c ****         
1444:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1445:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1446:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1447:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1448:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1449:.\Generated_Source\PSoC5/CapSense.c ****             #else
1450:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1451:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1452:.\Generated_Source\PSoC5/CapSense.c **** 
1453:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1454:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1455:.\Generated_Source\PSoC5/CapSense.c ****             
1456:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1457:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1458:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1459:.\Generated_Source\PSoC5/CapSense.c ****             
1460:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1461:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1462:.\Generated_Source\PSoC5/CapSense.c ****                 
1463:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1464:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1465:.\Generated_Source\PSoC5/CapSense.c ****             
1466:.\Generated_Source\PSoC5/CapSense.c ****         #else
1467:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1468:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1469:.\Generated_Source\PSoC5/CapSense.c ****             
1470:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1471:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1472:.\Generated_Source\PSoC5/CapSense.c ****              
1473:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1474:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 35


1475:.\Generated_Source\PSoC5/CapSense.c ****         
1476:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1477:.\Generated_Source\PSoC5/CapSense.c ****         
1478:.\Generated_Source\PSoC5/CapSense.c ****     #else
1479:.\Generated_Source\PSoC5/CapSense.c **** 
1480:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1481:.\Generated_Source\PSoC5/CapSense.c ****         {
1482:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1483:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1484:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1485:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1486:.\Generated_Source\PSoC5/CapSense.c ****                 #else
1487:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1488:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1489:.\Generated_Source\PSoC5/CapSense.c ****                 
1490:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1491:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1492:.\Generated_Source\PSoC5/CapSense.c ****                 
1493:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1494:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1495:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1496:.\Generated_Source\PSoC5/CapSense.c ****                 
1497:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1498:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1499:.\Generated_Source\PSoC5/CapSense.c ****                     
1500:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1501:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1502:.\Generated_Source\PSoC5/CapSense.c ****                 
1503:.\Generated_Source\PSoC5/CapSense.c ****             #else
1504:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1505:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1506:.\Generated_Source\PSoC5/CapSense.c ****                 
1507:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1508:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1509:.\Generated_Source\PSoC5/CapSense.c ****                     
1510:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1511:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1512:.\Generated_Source\PSoC5/CapSense.c ****             
1513:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1514:.\Generated_Source\PSoC5/CapSense.c ****             
1515:.\Generated_Source\PSoC5/CapSense.c ****         }
1516:.\Generated_Source\PSoC5/CapSense.c ****         
1517:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1518:.\Generated_Source\PSoC5/CapSense.c ****         {
1519:.\Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1520:.\Generated_Source\PSoC5/CapSense.c ****             
1521:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1522:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1523:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1524:.\Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1525:.\Generated_Source\PSoC5/CapSense.c ****                 #else 
1526:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1527:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1528:.\Generated_Source\PSoC5/CapSense.c ****                 
1529:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1530:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1531:.\Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 36


1532:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1533:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1534:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1535:.\Generated_Source\PSoC5/CapSense.c ****                 
1536:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1537:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1538:.\Generated_Source\PSoC5/CapSense.c ****                     
1539:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1540:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1541:.\Generated_Source\PSoC5/CapSense.c ****                 
1542:.\Generated_Source\PSoC5/CapSense.c ****             #else
1543:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1544:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1545:.\Generated_Source\PSoC5/CapSense.c ****                 
1546:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1547:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1548:.\Generated_Source\PSoC5/CapSense.c ****                 
1549:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1550:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1551:.\Generated_Source\PSoC5/CapSense.c ****             
1552:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1553:.\Generated_Source\PSoC5/CapSense.c ****         }
1554:.\Generated_Source\PSoC5/CapSense.c ****     
1555:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1556:.\Generated_Source\PSoC5/CapSense.c ****     
1557:.\Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1558:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1559:.\Generated_Source\PSoC5/CapSense.c ****     
1560:.\Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1561:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1562:.\Generated_Source\PSoC5/CapSense.c **** 
1563:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1564:.\Generated_Source\PSoC5/CapSense.c **** }
1565:.\Generated_Source\PSoC5/CapSense.c **** 
1566:.\Generated_Source\PSoC5/CapSense.c **** 
1567:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1568:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1569:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1570:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1571:.\Generated_Source\PSoC5/CapSense.c ****     *
1572:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1573:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1574:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1575:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1576:.\Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1577:.\Generated_Source\PSoC5/CapSense.c ****     *
1578:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1579:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1580:.\Generated_Source\PSoC5/CapSense.c ****     *
1581:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1582:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1583:.\Generated_Source\PSoC5/CapSense.c ****     *
1584:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1585:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1586:.\Generated_Source\PSoC5/CapSense.c ****     *
1587:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1588:.\Generated_Source\PSoC5/CapSense.c ****     *  No
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 37


1589:.\Generated_Source\PSoC5/CapSense.c ****     *
1590:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1591:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1592:.\Generated_Source\PSoC5/CapSense.c ****     {
 443              		.loc 1 1592 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              	.LVL43:
 448 0000 10B5     		push	{r4, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 4, -8
 451              		.cfi_offset 14, -4
1593:.\Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1594:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 452              		.loc 1 1594 0
 453 0002 0E4B     		ldr	r3, .L34
 454 0004 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 455 0006 01F0FC01 		and	r1, r1, #252
 456 000a 1970     		strb	r1, [r3]
1595:.\Generated_Source\PSoC5/CapSense.c ****         
1596:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1597:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1598:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1599:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1600:.\Generated_Source\PSoC5/CapSense.c ****         #else
1601:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 457              		.loc 1 1601 0
 458 000c 653B     		subs	r3, r3, #101
 459 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 460 0010 0902     		lsls	r1, r1, #8
 461 0012 0B4B     		ldr	r3, .L34+4
 462 0014 23F81010 		strh	r1, [r3, r0, lsl #1]	@ movhi
1602:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 463              		.loc 1 1602 0
 464 0018 0A4C     		ldr	r4, .L34+8
 465 001a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 466 001c 2143     		orrs	r1, r1, r4
1603:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 467              		.loc 1 1603 0
 468 001e C943     		mvns	r1, r1
 469 0020 23F81010 		strh	r1, [r3, r0, lsl #1]	@ movhi
1604:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1605:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1606:.\Generated_Source\PSoC5/CapSense.c ****         
1607:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1608:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 470              		.loc 1 1608 0
 471 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 472              	.LVL44:
1609:.\Generated_Source\PSoC5/CapSense.c ****         
1610:.\Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1611:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1612:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 473              		.loc 1 1612 0
 474 0028 0020     		movs	r0, #0
 475 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 38


 476              	.LVL45:
1613:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1614:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1615:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1616:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1617:.\Generated_Source\PSoC5/CapSense.c ****         #else
1618:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1619:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1620:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1621:.\Generated_Source\PSoC5/CapSense.c ****             
1622:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1623:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1624:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1625:.\Generated_Source\PSoC5/CapSense.c ****         #else
1626:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 477              		.loc 1 1626 0
 478 002e 064B     		ldr	r3, .L34+12
 479 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 480 0032 42F00102 		orr	r2, r2, #1
 481 0036 1A70     		strb	r2, [r3]
 482 0038 10BD     		pop	{r4, pc}
 483              	.L35:
 484 003a 00BF     		.align	2
 485              	.L34:
 486 003c 77640040 		.word	1073767543
 487 0040 00000000 		.word	CapSense_sensorRaw
 488 0044 02640040 		.word	1073767426
 489 0048 70580040 		.word	1073764464
 490              		.cfi_endproc
 491              	.LFE14:
 492              		.size	CapSense_PostScan, .-CapSense_PostScan
 493              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 494              		.align	2
 495              		.global	CapSense_SetPrescaler
 496              		.thumb
 497              		.thumb_func
 498              		.type	CapSense_SetPrescaler, %function
 499              	CapSense_SetPrescaler:
 500              	.LFB15:
1627:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1628:.\Generated_Source\PSoC5/CapSense.c ****     }
1629:.\Generated_Source\PSoC5/CapSense.c ****     
1630:.\Generated_Source\PSoC5/CapSense.c **** #else
1631:.\Generated_Source\PSoC5/CapSense.c **** 
1632:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1633:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1634:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1635:.\Generated_Source\PSoC5/CapSense.c ****     *
1636:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1637:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1638:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1639:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1640:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1641:.\Generated_Source\PSoC5/CapSense.c ****     *
1642:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1643:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1644:.\Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 39


1645:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1646:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1647:.\Generated_Source\PSoC5/CapSense.c ****     *
1648:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1649:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1650:.\Generated_Source\PSoC5/CapSense.c ****     *
1651:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1652:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1653:.\Generated_Source\PSoC5/CapSense.c ****     *
1654:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1655:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1656:.\Generated_Source\PSoC5/CapSense.c ****     {
1657:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1658:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1659:.\Generated_Source\PSoC5/CapSense.c ****         {
1660:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1661:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1662:.\Generated_Source\PSoC5/CapSense.c ****         }
1663:.\Generated_Source\PSoC5/CapSense.c ****         
1664:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1665:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1666:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1667:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1668:.\Generated_Source\PSoC5/CapSense.c ****         #else
1669:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1670:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1671:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1672:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1673:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1674:.\Generated_Source\PSoC5/CapSense.c ****         
1675:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1676:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1677:.\Generated_Source\PSoC5/CapSense.c ****         
1678:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1679:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1680:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1681:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1682:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1683:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1684:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1685:.\Generated_Source\PSoC5/CapSense.c ****         #else
1686:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1687:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1688:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1689:.\Generated_Source\PSoC5/CapSense.c ****         
1690:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1691:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1692:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1693:.\Generated_Source\PSoC5/CapSense.c ****         #else
1694:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1695:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1696:.\Generated_Source\PSoC5/CapSense.c ****     }
1697:.\Generated_Source\PSoC5/CapSense.c ****     
1698:.\Generated_Source\PSoC5/CapSense.c ****     
1699:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1700:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1701:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 40


1702:.\Generated_Source\PSoC5/CapSense.c ****     *
1703:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1704:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1705:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1706:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1707:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1708:.\Generated_Source\PSoC5/CapSense.c ****     *
1709:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1710:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1711:.\Generated_Source\PSoC5/CapSense.c ****     *
1712:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1713:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1714:.\Generated_Source\PSoC5/CapSense.c ****     *
1715:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1716:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1717:.\Generated_Source\PSoC5/CapSense.c ****     *
1718:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1719:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1720:.\Generated_Source\PSoC5/CapSense.c ****     *
1721:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1722:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1723:.\Generated_Source\PSoC5/CapSense.c ****     {
1724:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1725:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1726:.\Generated_Source\PSoC5/CapSense.c ****         {
1727:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1728:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1729:.\Generated_Source\PSoC5/CapSense.c ****         }
1730:.\Generated_Source\PSoC5/CapSense.c ****         
1731:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1732:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1733:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1734:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1735:.\Generated_Source\PSoC5/CapSense.c ****         #else
1736:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1737:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1738:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1739:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1740:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1741:.\Generated_Source\PSoC5/CapSense.c ****         
1742:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1743:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1744:.\Generated_Source\PSoC5/CapSense.c ****         
1745:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1746:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1747:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1748:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1749:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1750:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1751:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1752:.\Generated_Source\PSoC5/CapSense.c ****         #else
1753:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1754:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1755:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1756:.\Generated_Source\PSoC5/CapSense.c **** 
1757:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1758:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 41


1759:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1760:.\Generated_Source\PSoC5/CapSense.c ****         #else
1761:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1762:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1763:.\Generated_Source\PSoC5/CapSense.c ****     }
1764:.\Generated_Source\PSoC5/CapSense.c ****     
1765:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1766:.\Generated_Source\PSoC5/CapSense.c **** 
1767:.\Generated_Source\PSoC5/CapSense.c **** 
1768:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1769:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1770:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1771:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1772:.\Generated_Source\PSoC5/CapSense.c ****     *
1773:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1774:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1775:.\Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1776:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1777:.\Generated_Source\PSoC5/CapSense.c ****     *
1778:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1779:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1780:.\Generated_Source\PSoC5/CapSense.c ****     *
1781:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1782:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1783:.\Generated_Source\PSoC5/CapSense.c ****     *
1784:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1785:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1786:.\Generated_Source\PSoC5/CapSense.c ****     {
1787:.\Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1788:.\Generated_Source\PSoC5/CapSense.c ****         
1789:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1790:.\Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1791:.\Generated_Source\PSoC5/CapSense.c ****         {
1792:.\Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1793:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1794:.\Generated_Source\PSoC5/CapSense.c ****         }
1795:.\Generated_Source\PSoC5/CapSense.c ****     }
1796:.\Generated_Source\PSoC5/CapSense.c ****     
1797:.\Generated_Source\PSoC5/CapSense.c ****     
1798:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1799:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1800:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1801:.\Generated_Source\PSoC5/CapSense.c ****     *
1802:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1803:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1804:.\Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1805:.\Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1806:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1807:.\Generated_Source\PSoC5/CapSense.c ****     * 
1808:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1809:.\Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1810:.\Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1811:.\Generated_Source\PSoC5/CapSense.c ****     *
1812:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1813:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1814:.\Generated_Source\PSoC5/CapSense.c ****     *
1815:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 42


1816:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1817:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1818:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1819:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1820:.\Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1821:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1822:.\Generated_Source\PSoC5/CapSense.c ****     *
1823:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1824:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1825:.\Generated_Source\PSoC5/CapSense.c ****     *
1826:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1827:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1828:.\Generated_Source\PSoC5/CapSense.c ****     {
1829:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1830:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1831:.\Generated_Source\PSoC5/CapSense.c ****             
1832:.\Generated_Source\PSoC5/CapSense.c ****         #else
1833:.\Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1834:.\Generated_Source\PSoC5/CapSense.c ****             {
1835:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1836:.\Generated_Source\PSoC5/CapSense.c ****             }
1837:.\Generated_Source\PSoC5/CapSense.c ****             else
1838:.\Generated_Source\PSoC5/CapSense.c ****             {
1839:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1840:.\Generated_Source\PSoC5/CapSense.c ****             }
1841:.\Generated_Source\PSoC5/CapSense.c ****     
1842:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1843:.\Generated_Source\PSoC5/CapSense.c ****     }
1844:.\Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1845:.\Generated_Source\PSoC5/CapSense.c **** 
1846:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1847:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1848:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1849:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1850:.\Generated_Source\PSoC5/CapSense.c ****     *
1851:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1852:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1853:.\Generated_Source\PSoC5/CapSense.c ****     *
1854:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1855:.\Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1856:.\Generated_Source\PSoC5/CapSense.c ****     *
1857:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1858:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1859:.\Generated_Source\PSoC5/CapSense.c ****     *
1860:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1861:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1862:.\Generated_Source\PSoC5/CapSense.c ****     {
 501              		.loc 1 1862 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506              	.LVL46:
1863:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1864:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1865:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 507              		.loc 1 1865 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 43


 508 0000 024B     		ldr	r3, .L37
 509 0002 1870     		strb	r0, [r3]
1866:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 510              		.loc 1 1866 0
 511 0004 4008     		lsrs	r0, r0, #1
 512              	.LVL47:
 513 0006 1033     		adds	r3, r3, #16
 514              	.LVL48:
 515 0008 1870     		strb	r0, [r3]
 516              	.LVL49:
 517 000a 7047     		bx	lr
 518              	.L38:
 519              		.align	2
 520              	.L37:
 521 000c 24640040 		.word	1073767460
 522              		.cfi_endproc
 523              	.LFE15:
 524              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 525              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 526              		.align	2
 527              		.global	CapSense_SetScanSlotSettings
 528              		.thumb
 529              		.thumb_func
 530              		.type	CapSense_SetScanSlotSettings, %function
 531              	CapSense_SetScanSlotSettings:
 532              	.LFB5:
 825:.\Generated_Source\PSoC5/CapSense.c **** {
 533              		.loc 1 825 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              	.LVL50:
 538 0000 70B5     		push	{r4, r5, r6, lr}
 539              		.cfi_def_cfa_offset 16
 540              		.cfi_offset 4, -16
 541              		.cfi_offset 5, -12
 542              		.cfi_offset 6, -8
 543              		.cfi_offset 14, -4
 544 0002 0446     		mov	r4, r0
 830:.\Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 545              		.loc 1 830 0
 546 0004 084B     		ldr	r3, .L40
 547 0006 0344     		add	r3, r3, r0
 548 0008 93F84C60 		ldrb	r6, [r3, #76]	@ zero_extendqisi2
 549              	.LVL51:
 834:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 550              		.loc 1 834 0
 551 000c 074D     		ldr	r5, .L40+4
 552 000e 2B18     		adds	r3, r5, r0
 553              	.LVL52:
 554 0010 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 555              	.LVL53:
 556 0012 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 557              	.LVL54:
 842:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 558              		.loc 1 842 0
 559 0016 3544     		add	r5, r5, r6
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 44


 560 0018 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 561 001a 054B     		ldr	r3, .L40+8
 562 001c 1A70     		strb	r2, [r3]
 847:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 563              		.loc 1 847 0
 564 001e 054B     		ldr	r3, .L40+12
 565 0020 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 566 0022 FFF7FEFF 		bl	CapSense_SetPrescaler
 567              	.LVL55:
 568 0026 70BD     		pop	{r4, r5, r6, pc}
 569              	.LVL56:
 570              	.L41:
 571              		.align	2
 572              	.L40:
 573 0028 00000000 		.word	.LANCHOR1
 574 002c 00000000 		.word	.LANCHOR0
 575 0030 55640040 		.word	1073767509
 576 0034 00000000 		.word	CapSense_analogSwitchDivider
 577              		.cfi_endproc
 578              	.LFE5:
 579              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 580              		.section	.text.CapSense_PreScan,"ax",%progbits
 581              		.align	2
 582              		.global	CapSense_PreScan
 583              		.thumb
 584              		.thumb_func
 585              		.type	CapSense_PreScan, %function
 586              	CapSense_PreScan:
 587              	.LFB13:
1432:.\Generated_Source\PSoC5/CapSense.c **** {
 588              		.loc 1 1432 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              	.LVL57:
 593 0000 38B5     		push	{r3, r4, r5, lr}
 594              		.cfi_def_cfa_offset 16
 595              		.cfi_offset 3, -16
 596              		.cfi_offset 4, -12
 597              		.cfi_offset 5, -8
 598              		.cfi_offset 14, -4
 599 0002 0546     		mov	r5, r0
1434:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 600              		.loc 1 1434 0
 601 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 602              	.LVL58:
1442:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 603              		.loc 1 1442 0
 604 0008 084C     		ldr	r4, .L43
 605 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 606 000c 43F00103 		orr	r3, r3, #1
 607 0010 2370     		strb	r3, [r4]
1450:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 608              		.loc 1 1450 0
 609 0012 074B     		ldr	r3, .L43+4
 610 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 611 0016 02F0FE02 		and	r2, r2, #254
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 45


 612 001a 1A70     		strb	r2, [r3]
1454:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
 613              		.loc 1 1454 0
 614 001c 2846     		mov	r0, r5
 615 001e FFF7FEFF 		bl	CapSense_EnableSensor
 616              	.LVL59:
1558:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 617              		.loc 1 1558 0
 618 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 619 0024 43F00203 		orr	r3, r3, #2
 620 0028 2370     		strb	r3, [r4]
 621 002a 38BD     		pop	{r3, r4, r5, pc}
 622              	.L44:
 623              		.align	2
 624              	.L43:
 625 002c 77640040 		.word	1073767543
 626 0030 70580040 		.word	1073764464
 627              		.cfi_endproc
 628              	.LFE13:
 629              		.size	CapSense_PreScan, .-CapSense_PreScan
 630              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 631              		.align	2
 632              		.global	CapSense_ScanSensor
 633              		.thumb
 634              		.thumb_func
 635              		.type	CapSense_ScanSensor, %function
 636              	CapSense_ScanSensor:
 637              	.LFB6:
 937:.\Generated_Source\PSoC5/CapSense.c **** {
 638              		.loc 1 937 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              	.LVL60:
 643 0000 08B5     		push	{r3, lr}
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 939:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 647              		.loc 1 939 0
 648 0002 054B     		ldr	r3, .L46
 649 0004 0022     		movs	r2, #0
 650 0006 1A70     		strb	r2, [r3]
 940:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 651              		.loc 1 940 0
 652 0008 044A     		ldr	r2, .L46+4
 653 000a 1070     		strb	r0, [r2]
 944:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 654              		.loc 1 944 0
 655 000c 8122     		movs	r2, #129
 656 000e 1A70     		strb	r2, [r3]
 945:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 657              		.loc 1 945 0
 658 0010 FFF7FEFF 		bl	CapSense_PreScan
 659              	.LVL61:
 660 0014 08BD     		pop	{r3, pc}
 661              	.L47:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 46


 662 0016 00BF     		.align	2
 663              	.L46:
 664 0018 00000000 		.word	CapSense_csv
 665 001c 00000000 		.word	CapSense_sensorIndex
 666              		.cfi_endproc
 667              	.LFE6:
 668              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 669              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 670              		.align	2
 671              		.global	CapSense_ScanEnabledWidgets
 672              		.thumb
 673              		.thumb_func
 674              		.type	CapSense_ScanEnabledWidgets, %function
 675              	CapSense_ScanEnabledWidgets:
 676              	.LFB7:
1014:.\Generated_Source\PSoC5/CapSense.c **** {
 677              		.loc 1 1014 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681 0000 10B5     		push	{r4, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 4, -8
 684              		.cfi_offset 14, -4
1016:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 685              		.loc 1 1016 0
 686 0002 0022     		movs	r2, #0
 687 0004 0A4B     		ldr	r3, .L50
 688 0006 1A70     		strb	r2, [r3]
1017:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 689              		.loc 1 1017 0
 690 0008 0A4C     		ldr	r4, .L50+4
 691 000a FF23     		movs	r3, #255
 692 000c 2370     		strb	r3, [r4]
1021:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
 693              		.loc 1 1021 0
 694 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 695 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 696              	.LVL62:
 697 0014 2070     		strb	r0, [r4]
1024:.\Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 698              		.loc 1 1024 0
 699 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 700 0018 DBB2     		uxtb	r3, r3
 701 001a 062B     		cmp	r3, #6
 702 001c 07D8     		bhi	.L48
1026:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 703              		.loc 1 1026 0
 704 001e 044B     		ldr	r3, .L50
 705 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 706 0022 42F00102 		orr	r2, r2, #1
 707 0026 1A70     		strb	r2, [r3]
1027:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 708              		.loc 1 1027 0
 709 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 710 002a FFF7FEFF 		bl	CapSense_PreScan
 711              	.LVL63:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 47


 712              	.L48:
 713 002e 10BD     		pop	{r4, pc}
 714              	.L51:
 715              		.align	2
 716              	.L50:
 717 0030 00000000 		.word	CapSense_csv
 718 0034 00000000 		.word	CapSense_sensorIndex
 719              		.cfi_endproc
 720              	.LFE7:
 721              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 722              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 723              		.align	2
 724              		.global	CapSense_GetPrescaler
 725              		.thumb
 726              		.thumb_func
 727              		.type	CapSense_GetPrescaler, %function
 728              	CapSense_GetPrescaler:
 729              	.LFB16:
1867:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1868:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1869:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1870:.\Generated_Source\PSoC5/CapSense.c ****         #else
1871:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1872:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1873:.\Generated_Source\PSoC5/CapSense.c ****     }
1874:.\Generated_Source\PSoC5/CapSense.c **** 
1875:.\Generated_Source\PSoC5/CapSense.c **** 
1876:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1877:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1878:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1879:.\Generated_Source\PSoC5/CapSense.c ****     *
1880:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1881:.\Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1882:.\Generated_Source\PSoC5/CapSense.c ****     *
1883:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1884:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1885:.\Generated_Source\PSoC5/CapSense.c ****     *
1886:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1887:.\Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1888:.\Generated_Source\PSoC5/CapSense.c ****     *
1889:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1890:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1891:.\Generated_Source\PSoC5/CapSense.c ****     {
 730              		.loc 1 1891 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL64:
1892:.\Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1893:.\Generated_Source\PSoC5/CapSense.c **** 
1894:.\Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1895:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1896:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 736              		.loc 1 1896 0
 737 0000 014B     		ldr	r3, .L53
 738 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 48


 739              	.LVL65:
1897:.\Generated_Source\PSoC5/CapSense.c ****             
1898:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1899:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1900:.\Generated_Source\PSoC5/CapSense.c ****             
1901:.\Generated_Source\PSoC5/CapSense.c ****         #else
1902:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1903:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1904:.\Generated_Source\PSoC5/CapSense.c ****         
1905:.\Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1906:.\Generated_Source\PSoC5/CapSense.c ****     }
 740              		.loc 1 1906 0
 741 0004 7047     		bx	lr
 742              	.L54:
 743 0006 00BF     		.align	2
 744              	.L53:
 745 0008 24640040 		.word	1073767460
 746              		.cfi_endproc
 747              	.LFE16:
 748              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 749              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 750              		.align	2
 751              		.global	CapSense_SetScanSpeed
 752              		.thumb
 753              		.thumb_func
 754              		.type	CapSense_SetScanSpeed, %function
 755              	CapSense_SetScanSpeed:
 756              	.LFB17:
1907:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1908:.\Generated_Source\PSoC5/CapSense.c **** 
1909:.\Generated_Source\PSoC5/CapSense.c **** 
1910:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1911:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1912:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1913:.\Generated_Source\PSoC5/CapSense.c **** *
1914:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1915:.\Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1916:.\Generated_Source\PSoC5/CapSense.c **** *
1917:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1918:.\Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1919:.\Generated_Source\PSoC5/CapSense.c **** *
1920:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1921:.\Generated_Source\PSoC5/CapSense.c **** *  None
1922:.\Generated_Source\PSoC5/CapSense.c **** *
1923:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1924:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1925:.\Generated_Source\PSoC5/CapSense.c **** {
 757              		.loc 1 1925 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762              	.LVL66:
1926:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 763              		.loc 1 1926 0
 764 0000 014B     		ldr	r3, .L56
 765 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 49


 766 0004 7047     		bx	lr
 767              	.L57:
 768 0006 00BF     		.align	2
 769              	.L56:
 770 0008 85640040 		.word	1073767557
 771              		.cfi_endproc
 772              	.LFE17:
 773              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 774              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 775              		.align	2
 776              		.global	CapSense_SetAnalogSwitchesSource
 777              		.thumb
 778              		.thumb_func
 779              		.type	CapSense_SetAnalogSwitchesSource, %function
 780              	CapSense_SetAnalogSwitchesSource:
 781              	.LFB18:
1927:.\Generated_Source\PSoC5/CapSense.c **** }
1928:.\Generated_Source\PSoC5/CapSense.c **** 
1929:.\Generated_Source\PSoC5/CapSense.c **** 
1930:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1931:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1932:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1933:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1934:.\Generated_Source\PSoC5/CapSense.c ****     *
1935:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1936:.\Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1937:.\Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1938:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1939:.\Generated_Source\PSoC5/CapSense.c ****     *
1940:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1941:.\Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1942:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1943:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1944:.\Generated_Source\PSoC5/CapSense.c ****     *
1945:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1946:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1947:.\Generated_Source\PSoC5/CapSense.c ****     *
1948:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1949:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1950:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1951:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1952:.\Generated_Source\PSoC5/CapSense.c ****                       
1953:.\Generated_Source\PSoC5/CapSense.c ****     {
 782              		.loc 1 1953 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787              	.LVL67:
1954:.\Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 788              		.loc 1 1954 0
 789 0000 0128     		cmp	r0, #1
 790 0002 05D1     		bne	.L59
1955:.\Generated_Source\PSoC5/CapSense.c ****         {
1956:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 791              		.loc 1 1956 0
 792 0004 054B     		ldr	r3, .L61
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 50


 793 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 794 0008 02F0EF02 		and	r2, r2, #239
 795 000c 1A70     		strb	r2, [r3]
 796 000e 7047     		bx	lr
 797              	.L59:
1957:.\Generated_Source\PSoC5/CapSense.c ****         }
1958:.\Generated_Source\PSoC5/CapSense.c ****         else
1959:.\Generated_Source\PSoC5/CapSense.c ****         {
1960:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 798              		.loc 1 1960 0
 799 0010 024B     		ldr	r3, .L61
 800 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 801 0014 42F01002 		orr	r2, r2, #16
 802 0018 1A70     		strb	r2, [r3]
 803 001a 7047     		bx	lr
 804              	.L62:
 805              		.align	2
 806              	.L61:
 807 001c 77640040 		.word	1073767543
 808              		.cfi_endproc
 809              	.LFE18:
 810              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 811              		.section	.text.CapSense_Init,"ax",%progbits
 812              		.align	2
 813              		.global	CapSense_Init
 814              		.thumb
 815              		.thumb_func
 816              		.type	CapSense_Init, %function
 817              	CapSense_Init:
 818              	.LFB0:
 118:.\Generated_Source\PSoC5/CapSense.c **** {
 819              		.loc 1 118 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823 0000 38B5     		push	{r3, r4, r5, lr}
 824              		.cfi_def_cfa_offset 16
 825              		.cfi_offset 3, -16
 826              		.cfi_offset 4, -12
 827              		.cfi_offset 5, -8
 828              		.cfi_offset 14, -4
 132:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 829              		.loc 1 132 0
 830 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 831              	.LVL68:
 148:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 832              		.loc 1 148 0
 833 0006 0220     		movs	r0, #2
 834 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 835              	.LVL69:
 164:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 836              		.loc 1 164 0
 837 000c FFF7FEFF 		bl	CyEnterCriticalSection
 838              	.LVL70:
 165:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 839              		.loc 1 165 0
 840 0010 2E4B     		ldr	r3, .L64
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 51


 841 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 842 0014 42F00302 		orr	r2, r2, #3
 843 0018 1A70     		strb	r2, [r3]
 166:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 844              		.loc 1 166 0
 845 001a 0133     		adds	r3, r3, #1
 846 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 847 001e 42F00302 		orr	r2, r2, #3
 848 0022 1A70     		strb	r2, [r3]
 167:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 849              		.loc 1 167 0
 850 0024 FFF7FEFF 		bl	CyExitCriticalSection
 851              	.LVL71:
 170:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 852              		.loc 1 170 0
 853 0028 4FF43442 		mov	r2, #46080
 854 002c 284B     		ldr	r3, .L64+4
 855 002e 1A80     		strh	r2, [r3]	@ movhi
 172:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 856              		.loc 1 172 0
 857 0030 4FF6FF75 		movw	r5, #65535
 858 0034 2033     		adds	r3, r3, #32
 859 0036 1D80     		strh	r5, [r3]	@ movhi
 192:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 860              		.loc 1 192 0
 861 0038 0724     		movs	r4, #7
 862 003a 3F33     		adds	r3, r3, #63
 863 003c 1C70     		strb	r4, [r3]
 208:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 864              		.loc 1 208 0
 865 003e FFF7FEFF 		bl	CyEnterCriticalSection
 866              	.LVL72:
 209:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 867              		.loc 1 209 0
 868 0042 244B     		ldr	r3, .L64+8
 869 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 870 0046 42F00302 		orr	r2, r2, #3
 871 004a 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 872              		.loc 1 210 0
 873 004c 033B     		subs	r3, r3, #3
 874 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 875 0050 42F00302 		orr	r2, r2, #3
 876 0054 1A70     		strb	r2, [r3]
 211:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 877              		.loc 1 211 0
 878 0056 FFF7FEFF 		bl	CyExitCriticalSection
 879              	.LVL73:
 214:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 880              		.loc 1 214 0
 881 005a FF23     		movs	r3, #255
 882 005c 1E4A     		ldr	r2, .L64+12
 883 005e 1570     		strb	r5, [r2]
 215:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 884              		.loc 1 215 0
 885 0060 2032     		adds	r2, r2, #32
 886 0062 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 52


 216:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 887              		.loc 1 216 0
 888 0064 403A     		subs	r2, r2, #64
 889 0066 1370     		strb	r3, [r2]
 219:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 890              		.loc 1 219 0
 891 0068 1D32     		adds	r2, r2, #29
 892 006a 1370     		strb	r3, [r2]
 220:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 893              		.loc 1 220 0
 894 006c 3032     		adds	r2, r2, #48
 895 006e 1370     		strb	r3, [r2]
 221:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 896              		.loc 1 221 0
 897 0070 103A     		subs	r2, r2, #16
 898 0072 1370     		strb	r3, [r2]
 260:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 899              		.loc 1 260 0
 900 0074 0222     		movs	r2, #2
 901 0076 03F1E023 		add	r3, r3, #-536813568
 902 007a 8133     		adds	r3, r3, #129
 903 007c 1A60     		str	r2, [r3]
 261:.\Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 904              		.loc 1 261 0
 905 007e 0120     		movs	r0, #1
 906 0080 1649     		ldr	r1, .L64+16
 907 0082 FFF7FEFF 		bl	CyIntSetVector
 908              	.LVL74:
 262:.\Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 909              		.loc 1 262 0
 910 0086 0120     		movs	r0, #1
 911 0088 2146     		mov	r1, r4
 912 008a FFF7FEFF 		bl	CyIntSetPriority
 913              	.LVL75:
 271:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 914              		.loc 1 271 0
 915 008e FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 916              	.LVL76:
 272:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 917              		.loc 1 272 0
 918 0092 2046     		mov	r0, r4
 919 0094 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 920              	.LVL77:
 273:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 921              		.loc 1 273 0
 922 0098 0820     		movs	r0, #8
 923 009a FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 924              	.LVL78:
 275:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 925              		.loc 1 275 0
 926 009e 0920     		movs	r0, #9
 927 00a0 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 928              	.LVL79:
 293:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 929              		.loc 1 293 0
 930 00a4 0E4B     		ldr	r3, .L64+20
 931 00a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 53


 932 00a8 42F00402 		orr	r2, r2, #4
 933 00ac 1A70     		strb	r2, [r3]
 299:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 934              		.loc 1 299 0
 935 00ae FFF7FEFF 		bl	CapSense_CompCH0_Init
 936              	.LVL80:
 301:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 937              		.loc 1 301 0
 938 00b2 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 939              	.LVL81:
 302:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 940              		.loc 1 302 0
 941 00b6 0020     		movs	r0, #0
 942 00b8 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 943              	.LVL82:
 303:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 944              		.loc 1 303 0
 945 00bc 0420     		movs	r0, #4
 946 00be FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 947              	.LVL83:
 304:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 948              		.loc 1 304 0
 949 00c2 0020     		movs	r0, #0
 950 00c4 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 951              	.LVL84:
 952 00c8 38BD     		pop	{r3, r4, r5, pc}
 953              	.L65:
 954 00ca 00BF     		.align	2
 955              	.L64:
 956 00cc 96640040 		.word	1073767574
 957 00d0 26640040 		.word	1073767462
 958 00d4 95640040 		.word	1073767573
 959 00d8 25640040 		.word	1073767461
 960 00dc 00000000 		.word	CapSense_IsrCH0_ISR
 961 00e0 77640040 		.word	1073767543
 962              		.cfi_endproc
 963              	.LFE0:
 964              		.size	CapSense_Init, .-CapSense_Init
 965              		.section	.text.CapSense_Start,"ax",%progbits
 966              		.align	2
 967              		.global	CapSense_Start
 968              		.thumb
 969              		.thumb_func
 970              		.type	CapSense_Start, %function
 971              	CapSense_Start:
 972              	.LFB2:
 496:.\Generated_Source\PSoC5/CapSense.c **** {
 973              		.loc 1 496 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977 0000 08B5     		push	{r3, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 3, -8
 980              		.cfi_offset 14, -4
 497:.\Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 981              		.loc 1 497 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 54


 982 0002 084B     		ldr	r3, .L68
 983 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 0006 23B9     		cbnz	r3, .L67
 499:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 985              		.loc 1 499 0
 986 0008 FFF7FEFF 		bl	CapSense_Init
 987              	.LVL85:
 500:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 988              		.loc 1 500 0
 989 000c 0122     		movs	r2, #1
 990 000e 054B     		ldr	r3, .L68
 991 0010 1A70     		strb	r2, [r3]
 992              	.L67:
 502:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 993              		.loc 1 502 0
 994 0012 FFF7FEFF 		bl	CapSense_Enable
 995              	.LVL86:
 507:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 996              		.loc 1 507 0
 997 0016 FFF7FEFF 		bl	CapSense_AutoTune
 998              	.LVL87:
 508:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 999              		.loc 1 508 0
 1000 001a 0122     		movs	r2, #1
 1001 001c 024B     		ldr	r3, .L68+4
 1002 001e DA73     		strb	r2, [r3, #15]
 1003 0020 08BD     		pop	{r3, pc}
 1004              	.L69:
 1005 0022 00BF     		.align	2
 1006              	.L68:
 1007 0024 00000000 		.word	.LANCHOR2
 1008 0028 00000000 		.word	.LANCHOR0
 1009              		.cfi_endproc
 1010              	.LFE2:
 1011              		.size	CapSense_Start, .-CapSense_Start
 1012              		.global	CapSense_widgetNumber
 1013              		.comm	CapSense_analogSwitchDivider,7,4
 1014              		.global	CapSense_widgetResolution
 1015              		.global	CapSense_idacSettings
 1016              		.global	CapSense_csTable
 1017              		.global	CapSense_maskTable
 1018              		.global	CapSense_portTable
 1019              		.global	CapSense_pcTable
 1020              		.global	CapSense_sensorEnableMask
 1021              		.comm	CapSense_sensorRaw,14,4
 1022              		.global	CapSense_lowLevelTuningDone
 1023              		.comm	CapSense_sensorIndex,1,1
 1024              		.comm	CapSense_csv,1,1
 1025              		.section	.rodata
 1026              		.align	2
 1027              		.set	.LANCHOR1,. + 0
 1028              		.type	CapSense_portTable, %object
 1029              		.size	CapSense_portTable, 7
 1030              	CapSense_portTable:
 1031 0000 05       		.byte	5
 1032 0001 05       		.byte	5
 1033 0002 05       		.byte	5
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 55


 1034 0003 05       		.byte	5
 1035 0004 05       		.byte	5
 1036 0005 05       		.byte	5
 1037 0006 05       		.byte	5
 1038 0007 00       		.space	1
 1039              		.type	CapSense_maskTable, %object
 1040              		.size	CapSense_maskTable, 7
 1041              	CapSense_maskTable:
 1042 0008 20       		.byte	32
 1043 0009 40       		.byte	64
 1044 000a 01       		.byte	1
 1045 000b 02       		.byte	2
 1046 000c 04       		.byte	4
 1047 000d 08       		.byte	8
 1048 000e 10       		.byte	16
 1049 000f 00       		.space	1
 1050              		.type	CapSense_pcTable, %object
 1051              		.size	CapSense_pcTable, 28
 1052              	CapSense_pcTable:
 1053 0010 2D500040 		.word	1073762349
 1054 0014 2E500040 		.word	1073762350
 1055 0018 28500040 		.word	1073762344
 1056 001c 29500040 		.word	1073762345
 1057 0020 2A500040 		.word	1073762346
 1058 0024 2B500040 		.word	1073762347
 1059 0028 2C500040 		.word	1073762348
 1060              		.type	CapSense_csTable, %object
 1061              		.size	CapSense_csTable, 32
 1062              	CapSense_csTable:
 1063 002c 06520040 		.word	1073762822
 1064 0030 0E520040 		.word	1073762830
 1065 0034 16520040 		.word	1073762838
 1066 0038 1E520040 		.word	1073762846
 1067 003c 26520040 		.word	1073762854
 1068 0040 2E520040 		.word	1073762862
 1069 0044 36520040 		.word	1073762870
 1070 0048 7E520040 		.word	1073762942
 1071              		.type	CapSense_widgetNumber, %object
 1072              		.size	CapSense_widgetNumber, 7
 1073              	CapSense_widgetNumber:
 1074 004c 01       		.byte	1
 1075 004d 02       		.byte	2
 1076 004e 00       		.byte	0
 1077 004f 00       		.byte	0
 1078 0050 00       		.byte	0
 1079 0051 00       		.byte	0
 1080 0052 00       		.byte	0
 1081 0053 00       		.data
 1082              		.align	2
 1083              		.set	.LANCHOR0,. + 0
 1084              		.type	CapSense_sensorEnableMask, %object
 1085              		.size	CapSense_sensorEnableMask, 1
 1086              	CapSense_sensorEnableMask:
 1087 0000 7F       		.byte	127
 1088 0001 000000   		.space	3
 1089              		.type	CapSense_idacSettings, %object
 1090              		.size	CapSense_idacSettings, 7
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 56


 1091              	CapSense_idacSettings:
 1092 0004 C8       		.byte	-56
 1093 0005 C8       		.byte	-56
 1094 0006 C8       		.byte	-56
 1095 0007 C8       		.byte	-56
 1096 0008 C8       		.byte	-56
 1097 0009 C8       		.byte	-56
 1098 000a C8       		.byte	-56
 1099 000b 00       		.space	1
 1100              		.type	CapSense_widgetResolution, %object
 1101              		.size	CapSense_widgetResolution, 3
 1102              	CapSense_widgetResolution:
 1103 000c 03       		.byte	3
 1104 000d 03       		.byte	3
 1105 000e 03       		.byte	3
 1106              		.type	CapSense_lowLevelTuningDone, %object
 1107              		.size	CapSense_lowLevelTuningDone, 1
 1108              	CapSense_lowLevelTuningDone:
 1109 000f 01       		.byte	1
 1110              		.bss
 1111              		.set	.LANCHOR2,. + 0
 1112              		.type	CapSense_initVar, %object
 1113              		.size	CapSense_initVar, 1
 1114              	CapSense_initVar:
 1115 0000 00       		.space	1
 1116              		.text
 1117              	.Letext0:
 1118              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1119              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1120              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1121              		.file 5 ".\\Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1122              		.file 6 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1123              		.file 7 ".\\Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1124              		.file 8 ".\\Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1125              		.file 9 ".\\Generated_Source\\PSoC5\\CapSense.h"
 1126              		.section	.debug_info,"",%progbits
 1127              	.Ldebug_info0:
 1128 0000 51080000 		.4byte	0x851
 1129 0004 0400     		.2byte	0x4
 1130 0006 00000000 		.4byte	.Ldebug_abbrev0
 1131 000a 04       		.byte	0x4
 1132 000b 01       		.uleb128 0x1
 1133 000c 42000000 		.4byte	.LASF79
 1134 0010 01       		.byte	0x1
 1135 0011 4B060000 		.4byte	.LASF80
 1136 0015 D2030000 		.4byte	.LASF81
 1137 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1138 001d 00000000 		.4byte	0
 1139 0021 00000000 		.4byte	.Ldebug_line0
 1140 0025 02       		.uleb128 0x2
 1141 0026 01       		.byte	0x1
 1142 0027 06       		.byte	0x6
 1143 0028 82010000 		.4byte	.LASF0
 1144 002c 02       		.uleb128 0x2
 1145 002d 01       		.byte	0x1
 1146 002e 08       		.byte	0x8
 1147 002f C8040000 		.4byte	.LASF1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 57


 1148 0033 02       		.uleb128 0x2
 1149 0034 02       		.byte	0x2
 1150 0035 05       		.byte	0x5
 1151 0036 06050000 		.4byte	.LASF2
 1152 003a 02       		.uleb128 0x2
 1153 003b 02       		.byte	0x2
 1154 003c 07       		.byte	0x7
 1155 003d 3D030000 		.4byte	.LASF3
 1156 0041 02       		.uleb128 0x2
 1157 0042 04       		.byte	0x4
 1158 0043 05       		.byte	0x5
 1159 0044 AF010000 		.4byte	.LASF4
 1160 0048 02       		.uleb128 0x2
 1161 0049 04       		.byte	0x4
 1162 004a 07       		.byte	0x7
 1163 004b D6020000 		.4byte	.LASF5
 1164 004f 02       		.uleb128 0x2
 1165 0050 08       		.byte	0x8
 1166 0051 05       		.byte	0x5
 1167 0052 74010000 		.4byte	.LASF6
 1168 0056 02       		.uleb128 0x2
 1169 0057 08       		.byte	0x8
 1170 0058 07       		.byte	0x7
 1171 0059 1F010000 		.4byte	.LASF7
 1172 005d 03       		.uleb128 0x3
 1173 005e 04       		.byte	0x4
 1174 005f 05       		.byte	0x5
 1175 0060 696E7400 		.ascii	"int\000"
 1176 0064 02       		.uleb128 0x2
 1177 0065 04       		.byte	0x4
 1178 0066 07       		.byte	0x7
 1179 0067 99020000 		.4byte	.LASF8
 1180 006b 04       		.uleb128 0x4
 1181 006c BE010000 		.4byte	.LASF9
 1182 0070 02       		.byte	0x2
 1183 0071 B4       		.byte	0xb4
 1184 0072 2C000000 		.4byte	0x2c
 1185 0076 04       		.uleb128 0x4
 1186 0077 00000000 		.4byte	.LASF10
 1187 007b 02       		.byte	0x2
 1188 007c B5       		.byte	0xb5
 1189 007d 3A000000 		.4byte	0x3a
 1190 0081 04       		.uleb128 0x4
 1191 0082 3A020000 		.4byte	.LASF11
 1192 0086 02       		.byte	0x2
 1193 0087 B6       		.byte	0xb6
 1194 0088 48000000 		.4byte	0x48
 1195 008c 02       		.uleb128 0x2
 1196 008d 04       		.byte	0x4
 1197 008e 04       		.byte	0x4
 1198 008f 9B040000 		.4byte	.LASF12
 1199 0093 02       		.uleb128 0x2
 1200 0094 08       		.byte	0x8
 1201 0095 04       		.byte	0x4
 1202 0096 DA010000 		.4byte	.LASF13
 1203 009a 02       		.uleb128 0x2
 1204 009b 01       		.byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 58


 1205 009c 08       		.byte	0x8
 1206 009d 4A050000 		.4byte	.LASF14
 1207 00a1 05       		.uleb128 0x5
 1208 00a2 AB040000 		.4byte	.LASF15
 1209 00a6 02       		.byte	0x2
 1210 00a7 5E01     		.2byte	0x15e
 1211 00a9 AD000000 		.4byte	0xad
 1212 00ad 06       		.uleb128 0x6
 1213 00ae 6B000000 		.4byte	0x6b
 1214 00b2 05       		.uleb128 0x5
 1215 00b3 B8010000 		.4byte	.LASF16
 1216 00b7 02       		.byte	0x2
 1217 00b8 5F01     		.2byte	0x15f
 1218 00ba BE000000 		.4byte	0xbe
 1219 00be 06       		.uleb128 0x6
 1220 00bf 76000000 		.4byte	0x76
 1221 00c3 05       		.uleb128 0x5
 1222 00c4 AF030000 		.4byte	.LASF17
 1223 00c8 02       		.byte	0x2
 1224 00c9 6001     		.2byte	0x160
 1225 00cb CF000000 		.4byte	0xcf
 1226 00cf 06       		.uleb128 0x6
 1227 00d0 81000000 		.4byte	0x81
 1228 00d4 05       		.uleb128 0x5
 1229 00d5 4F050000 		.4byte	.LASF18
 1230 00d9 02       		.byte	0x2
 1231 00da 7001     		.2byte	0x170
 1232 00dc E0000000 		.4byte	0xe0
 1233 00e0 07       		.uleb128 0x7
 1234 00e1 04       		.byte	0x4
 1235 00e2 E6000000 		.4byte	0xe6
 1236 00e6 08       		.uleb128 0x8
 1237 00e7 02       		.uleb128 0x2
 1238 00e8 04       		.byte	0x4
 1239 00e9 07       		.byte	0x7
 1240 00ea 1E040000 		.4byte	.LASF19
 1241 00ee 09       		.uleb128 0x9
 1242 00ef 4E010000 		.4byte	.LASF26
 1243 00f3 01       		.byte	0x1
 1244 00f4 5601     		.2byte	0x156
 1245 00f6 00000000 		.4byte	.LFB1
 1246 00fa 68000000 		.4byte	.LFE1-.LFB1
 1247 00fe 01       		.uleb128 0x1
 1248 00ff 9C       		.byte	0x9c
 1249 0100 49010000 		.4byte	0x149
 1250 0104 0A       		.uleb128 0xa
 1251 0105 A8050000 		.4byte	.LASF20
 1252 0109 01       		.byte	0x1
 1253 010a 5801     		.2byte	0x158
 1254 010c 6B000000 		.4byte	0x6b
 1255 0110 00000000 		.4byte	.LLST0
 1256 0114 0B       		.uleb128 0xb
 1257 0115 06000000 		.4byte	.LVL0
 1258 0119 6C070000 		.4byte	0x76c
 1259 011d 0B       		.uleb128 0xb
 1260 011e 16000000 		.4byte	.LVL2
 1261 0122 77070000 		.4byte	0x777
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 59


 1262 0126 0B       		.uleb128 0xb
 1263 0127 1A000000 		.4byte	.LVL3
 1264 012b 7E070000 		.4byte	0x77e
 1265 012f 0B       		.uleb128 0xb
 1266 0130 1E000000 		.4byte	.LVL4
 1267 0134 85070000 		.4byte	0x785
 1268 0138 0C       		.uleb128 0xc
 1269 0139 46000000 		.4byte	.LVL5
 1270 013d 8C070000 		.4byte	0x78c
 1271 0141 0D       		.uleb128 0xd
 1272 0142 01       		.uleb128 0x1
 1273 0143 50       		.byte	0x50
 1274 0144 02       		.uleb128 0x2
 1275 0145 74       		.byte	0x74
 1276 0146 00       		.sleb128 0
 1277 0147 00       		.byte	0
 1278 0148 00       		.byte	0
 1279 0149 0E       		.uleb128 0xe
 1280 014a B0040000 		.4byte	.LASF22
 1281 014e 01       		.byte	0x1
 1282 014f 9E02     		.2byte	0x29e
 1283 0151 6B000000 		.4byte	0x6b
 1284 0155 00000000 		.4byte	.LFB4
 1285 0159 28000000 		.4byte	.LFE4-.LFB4
 1286 015d 01       		.uleb128 0x1
 1287 015e 9C       		.byte	0x9c
 1288 015f 92010000 		.4byte	0x192
 1289 0163 0F       		.uleb128 0xf
 1290 0164 16010000 		.4byte	.LASF24
 1291 0168 01       		.byte	0x1
 1292 0169 9E02     		.2byte	0x29e
 1293 016b 6B000000 		.4byte	0x6b
 1294 016f 1E000000 		.4byte	.LLST1
 1295 0173 10       		.uleb128 0x10
 1296 0174 706F7300 		.ascii	"pos\000"
 1297 0178 01       		.byte	0x1
 1298 0179 A002     		.2byte	0x2a0
 1299 017b 6B000000 		.4byte	0x6b
 1300 017f 01       		.uleb128 0x1
 1301 0180 53       		.byte	0x53
 1302 0181 0A       		.uleb128 0xa
 1303 0182 50040000 		.4byte	.LASF21
 1304 0186 01       		.byte	0x1
 1305 0187 A102     		.2byte	0x2a1
 1306 0189 6B000000 		.4byte	0x6b
 1307 018d 54000000 		.4byte	.LLST2
 1308 0191 00       		.byte	0
 1309 0192 11       		.uleb128 0x11
 1310 0193 8D030000 		.4byte	.LASF82
 1311 0197 01       		.byte	0x1
 1312 0198 2A04     		.2byte	0x42a
 1313 019a 6B000000 		.4byte	0x6b
 1314 019e 00000000 		.4byte	.LFB8
 1315 01a2 10000000 		.4byte	.LFE8-.LFB8
 1316 01a6 01       		.uleb128 0x1
 1317 01a7 9C       		.byte	0x9c
 1318 01a8 0E       		.uleb128 0xe
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 60


 1319 01a9 23020000 		.4byte	.LASF23
 1320 01ad 01       		.byte	0x1
 1321 01ae 4304     		.2byte	0x443
 1322 01b0 76000000 		.4byte	0x76
 1323 01b4 00000000 		.4byte	.LFB9
 1324 01b8 0C000000 		.4byte	.LFE9-.LFB9
 1325 01bc 01       		.uleb128 0x1
 1326 01bd 9C       		.byte	0x9c
 1327 01be D3010000 		.4byte	0x1d3
 1328 01c2 0F       		.uleb128 0xf
 1329 01c3 67030000 		.4byte	.LASF25
 1330 01c7 01       		.byte	0x1
 1331 01c8 4304     		.2byte	0x443
 1332 01ca 6B000000 		.4byte	0x6b
 1333 01ce 67000000 		.4byte	.LLST3
 1334 01d2 00       		.byte	0
 1335 01d3 09       		.uleb128 0x9
 1336 01d4 E1010000 		.4byte	.LASF27
 1337 01d8 01       		.byte	0x1
 1338 01d9 EE04     		.2byte	0x4ee
 1339 01db 00000000 		.4byte	.LFB11
 1340 01df 34000000 		.4byte	.LFE11-.LFB11
 1341 01e3 01       		.uleb128 0x1
 1342 01e4 9C       		.byte	0x9c
 1343 01e5 23020000 		.4byte	0x223
 1344 01e9 0F       		.uleb128 0xf
 1345 01ea 67030000 		.4byte	.LASF25
 1346 01ee 01       		.byte	0x1
 1347 01ef EE04     		.2byte	0x4ee
 1348 01f1 6B000000 		.4byte	0x6b
 1349 01f5 88000000 		.4byte	.LLST4
 1350 01f9 0A       		.uleb128 0xa
 1351 01fa 6B020000 		.4byte	.LASF28
 1352 01fe 01       		.byte	0x1
 1353 01ff F004     		.2byte	0x4f0
 1354 0201 6B000000 		.4byte	0x6b
 1355 0205 A9000000 		.4byte	.LLST5
 1356 0209 0A       		.uleb128 0xa
 1357 020a 50020000 		.4byte	.LASF29
 1358 020e 01       		.byte	0x1
 1359 020f F104     		.2byte	0x4f1
 1360 0211 6B000000 		.4byte	0x6b
 1361 0215 F8000000 		.4byte	.LLST6
 1362 0219 0B       		.uleb128 0xb
 1363 021a 2C000000 		.4byte	.LVL24
 1364 021e 9D070000 		.4byte	0x79d
 1365 0222 00       		.byte	0
 1366 0223 09       		.uleb128 0x9
 1367 0224 CF050000 		.4byte	.LASF30
 1368 0228 01       		.byte	0x1
 1369 0229 4305     		.2byte	0x543
 1370 022b 00000000 		.4byte	.LFB12
 1371 022f 38000000 		.4byte	.LFE12-.LFB12
 1372 0233 01       		.uleb128 0x1
 1373 0234 9C       		.byte	0x9c
 1374 0235 7A020000 		.4byte	0x27a
 1375 0239 0F       		.uleb128 0xf
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 61


 1376 023a 67030000 		.4byte	.LASF25
 1377 023e 01       		.byte	0x1
 1378 023f 4305     		.2byte	0x543
 1379 0241 6B000000 		.4byte	0x6b
 1380 0245 46010000 		.4byte	.LLST7
 1381 0249 0A       		.uleb128 0xa
 1382 024a 6B020000 		.4byte	.LASF28
 1383 024e 01       		.byte	0x1
 1384 024f 4505     		.2byte	0x545
 1385 0251 6B000000 		.4byte	0x6b
 1386 0255 67010000 		.4byte	.LLST8
 1387 0259 0A       		.uleb128 0xa
 1388 025a 50020000 		.4byte	.LASF29
 1389 025e 01       		.byte	0x1
 1390 025f 4605     		.2byte	0x546
 1391 0261 6B000000 		.4byte	0x6b
 1392 0265 A7010000 		.4byte	.LLST9
 1393 0269 0C       		.uleb128 0xc
 1394 026a 10000000 		.4byte	.LVL29
 1395 026e AE070000 		.4byte	0x7ae
 1396 0272 0D       		.uleb128 0xd
 1397 0273 01       		.uleb128 0x1
 1398 0274 50       		.byte	0x50
 1399 0275 02       		.uleb128 0x2
 1400 0276 74       		.byte	0x74
 1401 0277 00       		.sleb128 0
 1402 0278 00       		.byte	0
 1403 0279 00       		.byte	0
 1404 027a 09       		.uleb128 0x9
 1405 027b A6020000 		.4byte	.LASF31
 1406 027f 01       		.byte	0x1
 1407 0280 5804     		.2byte	0x458
 1408 0282 00000000 		.4byte	.LFB10
 1409 0286 16000000 		.4byte	.LFE10-.LFB10
 1410 028a 01       		.uleb128 0x1
 1411 028b 9C       		.byte	0x9c
 1412 028c AF020000 		.4byte	0x2af
 1413 0290 12       		.uleb128 0x12
 1414 0291 6900     		.ascii	"i\000"
 1415 0293 01       		.byte	0x1
 1416 0294 5A04     		.2byte	0x45a
 1417 0296 6B000000 		.4byte	0x6b
 1418 029a DE010000 		.4byte	.LLST10
 1419 029e 0C       		.uleb128 0xc
 1420 029f 0C000000 		.4byte	.LVL36
 1421 02a3 23020000 		.4byte	0x223
 1422 02a7 0D       		.uleb128 0xd
 1423 02a8 01       		.uleb128 0x1
 1424 02a9 50       		.byte	0x50
 1425 02aa 02       		.uleb128 0x2
 1426 02ab 74       		.byte	0x74
 1427 02ac 00       		.sleb128 0
 1428 02ad 00       		.byte	0
 1429 02ae 00       		.byte	0
 1430 02af 09       		.uleb128 0x9
 1431 02b0 38040000 		.4byte	.LASF32
 1432 02b4 01       		.byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 62


 1433 02b5 1402     		.2byte	0x214
 1434 02b7 00000000 		.4byte	.LFB3
 1435 02bb 68000000 		.4byte	.LFE3-.LFB3
 1436 02bf 01       		.uleb128 0x1
 1437 02c0 9C       		.byte	0x9c
 1438 02c1 EA020000 		.4byte	0x2ea
 1439 02c5 0B       		.uleb128 0xb
 1440 02c6 16000000 		.4byte	.LVL39
 1441 02ca 7A020000 		.4byte	0x27a
 1442 02ce 0B       		.uleb128 0xb
 1443 02cf 24000000 		.4byte	.LVL40
 1444 02d3 BF070000 		.4byte	0x7bf
 1445 02d7 0B       		.uleb128 0xb
 1446 02d8 28000000 		.4byte	.LVL41
 1447 02dc C6070000 		.4byte	0x7c6
 1448 02e0 0B       		.uleb128 0xb
 1449 02e1 2C000000 		.4byte	.LVL42
 1450 02e5 CD070000 		.4byte	0x7cd
 1451 02e9 00       		.byte	0
 1452 02ea 09       		.uleb128 0x9
 1453 02eb 96050000 		.4byte	.LASF33
 1454 02ef 01       		.byte	0x1
 1455 02f0 3706     		.2byte	0x637
 1456 02f2 00000000 		.4byte	.LFB14
 1457 02f6 4C000000 		.4byte	.LFE14-.LFB14
 1458 02fa 01       		.uleb128 0x1
 1459 02fb 9C       		.byte	0x9c
 1460 02fc 29030000 		.4byte	0x329
 1461 0300 0F       		.uleb128 0xf
 1462 0301 67030000 		.4byte	.LASF25
 1463 0305 01       		.byte	0x1
 1464 0306 3706     		.2byte	0x637
 1465 0308 6B000000 		.4byte	0x6b
 1466 030c 15020000 		.4byte	.LLST11
 1467 0310 0B       		.uleb128 0xb
 1468 0311 28000000 		.4byte	.LVL44
 1469 0315 23020000 		.4byte	0x223
 1470 0319 0C       		.uleb128 0xc
 1471 031a 2E000000 		.4byte	.LVL45
 1472 031e D4070000 		.4byte	0x7d4
 1473 0322 0D       		.uleb128 0xd
 1474 0323 01       		.uleb128 0x1
 1475 0324 50       		.byte	0x50
 1476 0325 01       		.uleb128 0x1
 1477 0326 30       		.byte	0x30
 1478 0327 00       		.byte	0
 1479 0328 00       		.byte	0
 1480 0329 09       		.uleb128 0x9
 1481 032a 5E010000 		.4byte	.LASF34
 1482 032e 01       		.byte	0x1
 1483 032f 4507     		.2byte	0x745
 1484 0331 00000000 		.4byte	.LFB15
 1485 0335 10000000 		.4byte	.LFE15-.LFB15
 1486 0339 01       		.uleb128 0x1
 1487 033a 9C       		.byte	0x9c
 1488 033b 50030000 		.4byte	0x350
 1489 033f 0F       		.uleb128 0xf
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 63


 1490 0340 A1040000 		.4byte	.LASF35
 1491 0344 01       		.byte	0x1
 1492 0345 4507     		.2byte	0x745
 1493 0347 6B000000 		.4byte	0x6b
 1494 034b 36020000 		.4byte	.LLST12
 1495 034f 00       		.byte	0
 1496 0350 09       		.uleb128 0x9
 1497 0351 17050000 		.4byte	.LASF36
 1498 0355 01       		.byte	0x1
 1499 0356 3803     		.2byte	0x338
 1500 0358 00000000 		.4byte	.LFB5
 1501 035c 38000000 		.4byte	.LFE5-.LFB5
 1502 0360 01       		.uleb128 0x1
 1503 0361 9C       		.byte	0x9c
 1504 0362 99030000 		.4byte	0x399
 1505 0366 0F       		.uleb128 0xf
 1506 0367 88030000 		.4byte	.LASF37
 1507 036b 01       		.byte	0x1
 1508 036c 3803     		.2byte	0x338
 1509 036e 6B000000 		.4byte	0x6b
 1510 0372 72020000 		.4byte	.LLST13
 1511 0376 0A       		.uleb128 0xa
 1512 0377 10050000 		.4byte	.LASF38
 1513 037b 01       		.byte	0x1
 1514 037c 3A03     		.2byte	0x33a
 1515 037e 6B000000 		.4byte	0x6b
 1516 0382 93020000 		.4byte	.LLST14
 1517 0386 0B       		.uleb128 0xb
 1518 0387 16000000 		.4byte	.LVL54
 1519 038b D4070000 		.4byte	0x7d4
 1520 038f 0B       		.uleb128 0xb
 1521 0390 26000000 		.4byte	.LVL55
 1522 0394 29030000 		.4byte	0x329
 1523 0398 00       		.byte	0
 1524 0399 09       		.uleb128 0x9
 1525 039a E6050000 		.4byte	.LASF39
 1526 039e 01       		.byte	0x1
 1527 039f 9705     		.2byte	0x597
 1528 03a1 00000000 		.4byte	.LFB13
 1529 03a5 34000000 		.4byte	.LFE13-.LFB13
 1530 03a9 01       		.uleb128 0x1
 1531 03aa 9C       		.byte	0x9c
 1532 03ab E4030000 		.4byte	0x3e4
 1533 03af 0F       		.uleb128 0xf
 1534 03b0 67030000 		.4byte	.LASF25
 1535 03b4 01       		.byte	0x1
 1536 03b5 9705     		.2byte	0x597
 1537 03b7 6B000000 		.4byte	0x6b
 1538 03bb CC020000 		.4byte	.LLST15
 1539 03bf 13       		.uleb128 0x13
 1540 03c0 08000000 		.4byte	.LVL58
 1541 03c4 50030000 		.4byte	0x350
 1542 03c8 D3030000 		.4byte	0x3d3
 1543 03cc 0D       		.uleb128 0xd
 1544 03cd 01       		.uleb128 0x1
 1545 03ce 50       		.byte	0x50
 1546 03cf 02       		.uleb128 0x2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 64


 1547 03d0 75       		.byte	0x75
 1548 03d1 00       		.sleb128 0
 1549 03d2 00       		.byte	0
 1550 03d3 0C       		.uleb128 0xc
 1551 03d4 22000000 		.4byte	.LVL59
 1552 03d8 D3010000 		.4byte	0x1d3
 1553 03dc 0D       		.uleb128 0xd
 1554 03dd 01       		.uleb128 0x1
 1555 03de 50       		.byte	0x50
 1556 03df 02       		.uleb128 0x2
 1557 03e0 75       		.byte	0x75
 1558 03e1 00       		.sleb128 0
 1559 03e2 00       		.byte	0
 1560 03e3 00       		.byte	0
 1561 03e4 09       		.uleb128 0x9
 1562 03e5 85020000 		.4byte	.LASF40
 1563 03e9 01       		.byte	0x1
 1564 03ea A803     		.2byte	0x3a8
 1565 03ec 00000000 		.4byte	.LFB6
 1566 03f0 20000000 		.4byte	.LFE6-.LFB6
 1567 03f4 01       		.uleb128 0x1
 1568 03f5 9C       		.byte	0x9c
 1569 03f6 14040000 		.4byte	0x414
 1570 03fa 0F       		.uleb128 0xf
 1571 03fb 67030000 		.4byte	.LASF25
 1572 03ff 01       		.byte	0x1
 1573 0400 A803     		.2byte	0x3a8
 1574 0402 6B000000 		.4byte	0x6b
 1575 0406 ED020000 		.4byte	.LLST16
 1576 040a 0B       		.uleb128 0xb
 1577 040b 14000000 		.4byte	.LVL61
 1578 040f 99030000 		.4byte	0x399
 1579 0413 00       		.byte	0
 1580 0414 09       		.uleb128 0x9
 1581 0415 18060000 		.4byte	.LASF41
 1582 0419 01       		.byte	0x1
 1583 041a F503     		.2byte	0x3f5
 1584 041c 00000000 		.4byte	.LFB7
 1585 0420 38000000 		.4byte	.LFE7-.LFB7
 1586 0424 01       		.uleb128 0x1
 1587 0425 9C       		.byte	0x9c
 1588 0426 3D040000 		.4byte	0x43d
 1589 042a 0B       		.uleb128 0xb
 1590 042b 14000000 		.4byte	.LVL62
 1591 042f 49010000 		.4byte	0x149
 1592 0433 0B       		.uleb128 0xb
 1593 0434 2E000000 		.4byte	.LVL63
 1594 0438 99030000 		.4byte	0x399
 1595 043c 00       		.byte	0
 1596 043d 0E       		.uleb128 0xe
 1597 043e 34050000 		.4byte	.LASF42
 1598 0442 01       		.byte	0x1
 1599 0443 6207     		.2byte	0x762
 1600 0445 6B000000 		.4byte	0x6b
 1601 0449 00000000 		.4byte	.LFB16
 1602 044d 0C000000 		.4byte	.LFE16-.LFB16
 1603 0451 01       		.uleb128 0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 65


 1604 0452 9C       		.byte	0x9c
 1605 0453 68040000 		.4byte	0x468
 1606 0457 0A       		.uleb128 0xa
 1607 0458 A1040000 		.4byte	.LASF35
 1608 045c 01       		.byte	0x1
 1609 045d 6407     		.2byte	0x764
 1610 045f 6B000000 		.4byte	0x6b
 1611 0463 0E030000 		.4byte	.LLST17
 1612 0467 00       		.byte	0
 1613 0468 09       		.uleb128 0x9
 1614 0469 5C050000 		.4byte	.LASF43
 1615 046d 01       		.byte	0x1
 1616 046e 8407     		.2byte	0x784
 1617 0470 00000000 		.4byte	.LFB17
 1618 0474 0C000000 		.4byte	.LFE17-.LFB17
 1619 0478 01       		.uleb128 0x1
 1620 0479 9C       		.byte	0x9c
 1621 047a 8D040000 		.4byte	0x48d
 1622 047e 14       		.uleb128 0x14
 1623 047f 46040000 		.4byte	.LASF44
 1624 0483 01       		.byte	0x1
 1625 0484 8407     		.2byte	0x784
 1626 0486 6B000000 		.4byte	0x6b
 1627 048a 01       		.uleb128 0x1
 1628 048b 50       		.byte	0x50
 1629 048c 00       		.byte	0
 1630 048d 09       		.uleb128 0x9
 1631 048e 8E010000 		.4byte	.LASF45
 1632 0492 01       		.byte	0x1
 1633 0493 9F07     		.2byte	0x79f
 1634 0495 00000000 		.4byte	.LFB18
 1635 0499 20000000 		.4byte	.LFE18-.LFB18
 1636 049d 01       		.uleb128 0x1
 1637 049e 9C       		.byte	0x9c
 1638 049f B2040000 		.4byte	0x4b2
 1639 04a3 15       		.uleb128 0x15
 1640 04a4 73726300 		.ascii	"src\000"
 1641 04a8 01       		.byte	0x1
 1642 04a9 9F07     		.2byte	0x79f
 1643 04ab 6B000000 		.4byte	0x6b
 1644 04af 01       		.uleb128 0x1
 1645 04b0 50       		.byte	0x50
 1646 04b1 00       		.byte	0
 1647 04b2 16       		.uleb128 0x16
 1648 04b3 F7050000 		.4byte	.LASF46
 1649 04b7 01       		.byte	0x1
 1650 04b8 75       		.byte	0x75
 1651 04b9 00000000 		.4byte	.LFB0
 1652 04bd E4000000 		.4byte	.LFE0-.LFB0
 1653 04c1 01       		.uleb128 0x1
 1654 04c2 9C       		.byte	0x9c
 1655 04c3 CD050000 		.4byte	0x5cd
 1656 04c7 17       		.uleb128 0x17
 1657 04c8 A8050000 		.4byte	.LASF20
 1658 04cc 01       		.byte	0x1
 1659 04cd 7C       		.byte	0x7c
 1660 04ce 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 66


 1661 04d2 2D030000 		.4byte	.LLST18
 1662 04d6 0B       		.uleb128 0xb
 1663 04d7 06000000 		.4byte	.LVL68
 1664 04db 7A020000 		.4byte	0x27a
 1665 04df 13       		.uleb128 0x13
 1666 04e0 0C000000 		.4byte	.LVL69
 1667 04e4 8D040000 		.4byte	0x48d
 1668 04e8 F2040000 		.4byte	0x4f2
 1669 04ec 0D       		.uleb128 0xd
 1670 04ed 01       		.uleb128 0x1
 1671 04ee 50       		.byte	0x50
 1672 04ef 01       		.uleb128 0x1
 1673 04f0 32       		.byte	0x32
 1674 04f1 00       		.byte	0
 1675 04f2 0B       		.uleb128 0xb
 1676 04f3 10000000 		.4byte	.LVL70
 1677 04f7 6C070000 		.4byte	0x76c
 1678 04fb 0B       		.uleb128 0xb
 1679 04fc 28000000 		.4byte	.LVL71
 1680 0500 8C070000 		.4byte	0x78c
 1681 0504 0B       		.uleb128 0xb
 1682 0505 42000000 		.4byte	.LVL72
 1683 0509 6C070000 		.4byte	0x76c
 1684 050d 0B       		.uleb128 0xb
 1685 050e 5A000000 		.4byte	.LVL73
 1686 0512 8C070000 		.4byte	0x78c
 1687 0516 13       		.uleb128 0x13
 1688 0517 86000000 		.4byte	.LVL74
 1689 051b E5070000 		.4byte	0x7e5
 1690 051f 29050000 		.4byte	0x529
 1691 0523 0D       		.uleb128 0xd
 1692 0524 01       		.uleb128 0x1
 1693 0525 50       		.byte	0x50
 1694 0526 01       		.uleb128 0x1
 1695 0527 31       		.byte	0x31
 1696 0528 00       		.byte	0
 1697 0529 13       		.uleb128 0x13
 1698 052a 8E000000 		.4byte	.LVL75
 1699 052e FF070000 		.4byte	0x7ff
 1700 0532 42050000 		.4byte	0x542
 1701 0536 0D       		.uleb128 0xd
 1702 0537 01       		.uleb128 0x1
 1703 0538 51       		.byte	0x51
 1704 0539 02       		.uleb128 0x2
 1705 053a 74       		.byte	0x74
 1706 053b 00       		.sleb128 0
 1707 053c 0D       		.uleb128 0xd
 1708 053d 01       		.uleb128 0x1
 1709 053e 50       		.byte	0x50
 1710 053f 01       		.uleb128 0x1
 1711 0540 31       		.byte	0x31
 1712 0541 00       		.byte	0
 1713 0542 0B       		.uleb128 0xb
 1714 0543 92000000 		.4byte	.LVL76
 1715 0547 15080000 		.4byte	0x815
 1716 054b 13       		.uleb128 0x13
 1717 054c 98000000 		.4byte	.LVL77
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 67


 1718 0550 9D070000 		.4byte	0x79d
 1719 0554 5F050000 		.4byte	0x55f
 1720 0558 0D       		.uleb128 0xd
 1721 0559 01       		.uleb128 0x1
 1722 055a 50       		.byte	0x50
 1723 055b 02       		.uleb128 0x2
 1724 055c 74       		.byte	0x74
 1725 055d 00       		.sleb128 0
 1726 055e 00       		.byte	0
 1727 055f 13       		.uleb128 0x13
 1728 0560 9E000000 		.4byte	.LVL78
 1729 0564 9D070000 		.4byte	0x79d
 1730 0568 72050000 		.4byte	0x572
 1731 056c 0D       		.uleb128 0xd
 1732 056d 01       		.uleb128 0x1
 1733 056e 50       		.byte	0x50
 1734 056f 01       		.uleb128 0x1
 1735 0570 38       		.byte	0x38
 1736 0571 00       		.byte	0
 1737 0572 13       		.uleb128 0x13
 1738 0573 A4000000 		.4byte	.LVL79
 1739 0577 9D070000 		.4byte	0x79d
 1740 057b 85050000 		.4byte	0x585
 1741 057f 0D       		.uleb128 0xd
 1742 0580 01       		.uleb128 0x1
 1743 0581 50       		.byte	0x50
 1744 0582 01       		.uleb128 0x1
 1745 0583 39       		.byte	0x39
 1746 0584 00       		.byte	0
 1747 0585 0B       		.uleb128 0xb
 1748 0586 B2000000 		.4byte	.LVL80
 1749 058a 1C080000 		.4byte	0x81c
 1750 058e 0B       		.uleb128 0xb
 1751 058f B6000000 		.4byte	.LVL81
 1752 0593 23080000 		.4byte	0x823
 1753 0597 13       		.uleb128 0x13
 1754 0598 BC000000 		.4byte	.LVL82
 1755 059c 2A080000 		.4byte	0x82a
 1756 05a0 AA050000 		.4byte	0x5aa
 1757 05a4 0D       		.uleb128 0xd
 1758 05a5 01       		.uleb128 0x1
 1759 05a6 50       		.byte	0x50
 1760 05a7 01       		.uleb128 0x1
 1761 05a8 30       		.byte	0x30
 1762 05a9 00       		.byte	0
 1763 05aa 13       		.uleb128 0x13
 1764 05ab C2000000 		.4byte	.LVL83
 1765 05af 3B080000 		.4byte	0x83b
 1766 05b3 BD050000 		.4byte	0x5bd
 1767 05b7 0D       		.uleb128 0xd
 1768 05b8 01       		.uleb128 0x1
 1769 05b9 50       		.byte	0x50
 1770 05ba 01       		.uleb128 0x1
 1771 05bb 34       		.byte	0x34
 1772 05bc 00       		.byte	0
 1773 05bd 0C       		.uleb128 0xc
 1774 05be C8000000 		.4byte	.LVL84
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 68


 1775 05c2 D4070000 		.4byte	0x7d4
 1776 05c6 0D       		.uleb128 0xd
 1777 05c7 01       		.uleb128 0x1
 1778 05c8 50       		.byte	0x50
 1779 05c9 01       		.uleb128 0x1
 1780 05ca 30       		.byte	0x30
 1781 05cb 00       		.byte	0
 1782 05cc 00       		.byte	0
 1783 05cd 09       		.uleb128 0x9
 1784 05ce 87050000 		.4byte	.LASF47
 1785 05d2 01       		.byte	0x1
 1786 05d3 EF01     		.2byte	0x1ef
 1787 05d5 00000000 		.4byte	.LFB2
 1788 05d9 2C000000 		.4byte	.LFE2-.LFB2
 1789 05dd 01       		.uleb128 0x1
 1790 05de 9C       		.byte	0x9c
 1791 05df FF050000 		.4byte	0x5ff
 1792 05e3 0B       		.uleb128 0xb
 1793 05e4 0C000000 		.4byte	.LVL85
 1794 05e8 B2040000 		.4byte	0x4b2
 1795 05ec 0B       		.uleb128 0xb
 1796 05ed 16000000 		.4byte	.LVL86
 1797 05f1 EE000000 		.4byte	0xee
 1798 05f5 0B       		.uleb128 0xb
 1799 05f6 1A000000 		.4byte	.LVL87
 1800 05fa 4C080000 		.4byte	0x84c
 1801 05fe 00       		.byte	0
 1802 05ff 18       		.uleb128 0x18
 1803 0600 BE000000 		.4byte	.LASF48
 1804 0604 01       		.byte	0x1
 1805 0605 15       		.byte	0x15
 1806 0606 6B000000 		.4byte	0x6b
 1807 060a 05       		.uleb128 0x5
 1808 060b 03       		.byte	0x3
 1809 060c 00000000 		.4byte	CapSense_initVar
 1810 0610 19       		.uleb128 0x19
 1811 0611 E0000000 		.4byte	.LASF49
 1812 0615 01       		.byte	0x1
 1813 0616 1D       		.byte	0x1d
 1814 0617 6B000000 		.4byte	0x6b
 1815 061b 05       		.uleb128 0x5
 1816 061c 03       		.byte	0x3
 1817 061d 00000000 		.4byte	CapSense_lowLevelTuningDone
 1818 0621 19       		.uleb128 0x19
 1819 0622 1F000000 		.4byte	.LASF50
 1820 0626 01       		.byte	0x1
 1821 0627 18       		.byte	0x18
 1822 0628 AD000000 		.4byte	0xad
 1823 062c 05       		.uleb128 0x5
 1824 062d 03       		.byte	0x3
 1825 062e 00000000 		.4byte	CapSense_csv
 1826 0632 19       		.uleb128 0x19
 1827 0633 70020000 		.4byte	.LASF51
 1828 0637 01       		.byte	0x1
 1829 0638 19       		.byte	0x19
 1830 0639 AD000000 		.4byte	0xad
 1831 063d 05       		.uleb128 0x5
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 69


 1832 063e 03       		.byte	0x3
 1833 063f 00000000 		.4byte	CapSense_sensorIndex
 1834 0643 1A       		.uleb128 0x1a
 1835 0644 76000000 		.4byte	0x76
 1836 0648 53060000 		.4byte	0x653
 1837 064c 1B       		.uleb128 0x1b
 1838 064d E7000000 		.4byte	0xe7
 1839 0651 06       		.byte	0x6
 1840 0652 00       		.byte	0
 1841 0653 19       		.uleb128 0x19
 1842 0654 05060000 		.4byte	.LASF52
 1843 0658 01       		.byte	0x1
 1844 0659 28       		.byte	0x28
 1845 065a 43060000 		.4byte	0x643
 1846 065e 05       		.uleb128 0x5
 1847 065f 03       		.byte	0x3
 1848 0660 00000000 		.4byte	CapSense_sensorRaw
 1849 0664 1A       		.uleb128 0x1a
 1850 0665 6B000000 		.4byte	0x6b
 1851 0669 74060000 		.4byte	0x674
 1852 066d 1B       		.uleb128 0x1b
 1853 066e E7000000 		.4byte	0xe7
 1854 0672 00       		.byte	0
 1855 0673 00       		.byte	0
 1856 0674 19       		.uleb128 0x19
 1857 0675 6E030000 		.4byte	.LASF53
 1858 0679 01       		.byte	0x1
 1859 067a 2A       		.byte	0x2a
 1860 067b 64060000 		.4byte	0x664
 1861 067f 05       		.uleb128 0x5
 1862 0680 03       		.byte	0x3
 1863 0681 00000000 		.4byte	CapSense_sensorEnableMask
 1864 0685 1A       		.uleb128 0x1a
 1865 0686 95060000 		.4byte	0x695
 1866 068a 95060000 		.4byte	0x695
 1867 068e 1B       		.uleb128 0x1b
 1868 068f E7000000 		.4byte	0xe7
 1869 0693 06       		.byte	0x6
 1870 0694 00       		.byte	0
 1871 0695 07       		.uleb128 0x7
 1872 0696 04       		.byte	0x4
 1873 0697 6B000000 		.4byte	0x6b
 1874 069b 19       		.uleb128 0x19
 1875 069c CF000000 		.4byte	.LASF54
 1876 06a0 01       		.byte	0x1
 1877 06a1 2D       		.byte	0x2d
 1878 06a2 AC060000 		.4byte	0x6ac
 1879 06a6 05       		.uleb128 0x5
 1880 06a7 03       		.byte	0x3
 1881 06a8 00000000 		.4byte	CapSense_pcTable
 1882 06ac 1C       		.uleb128 0x1c
 1883 06ad 85060000 		.4byte	0x685
 1884 06b1 1A       		.uleb128 0x1a
 1885 06b2 6B000000 		.4byte	0x6b
 1886 06b6 C1060000 		.4byte	0x6c1
 1887 06ba 1B       		.uleb128 0x1b
 1888 06bb E7000000 		.4byte	0xe7
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 70


 1889 06bf 06       		.byte	0x6
 1890 06c0 00       		.byte	0
 1891 06c1 19       		.uleb128 0x19
 1892 06c2 FB020000 		.4byte	.LASF55
 1893 06c6 01       		.byte	0x1
 1894 06c7 37       		.byte	0x37
 1895 06c8 D2060000 		.4byte	0x6d2
 1896 06cc 05       		.uleb128 0x5
 1897 06cd 03       		.byte	0x3
 1898 06ce 00000000 		.4byte	CapSense_portTable
 1899 06d2 1C       		.uleb128 0x1c
 1900 06d3 B1060000 		.4byte	0x6b1
 1901 06d7 19       		.uleb128 0x19
 1902 06d8 E8020000 		.4byte	.LASF56
 1903 06dc 01       		.byte	0x1
 1904 06dd 41       		.byte	0x41
 1905 06de E8060000 		.4byte	0x6e8
 1906 06e2 05       		.uleb128 0x5
 1907 06e3 03       		.byte	0x3
 1908 06e4 00000000 		.4byte	CapSense_maskTable
 1909 06e8 1C       		.uleb128 0x1c
 1910 06e9 B1060000 		.4byte	0x6b1
 1911 06ed 1A       		.uleb128 0x1a
 1912 06ee 95060000 		.4byte	0x695
 1913 06f2 FD060000 		.4byte	0x6fd
 1914 06f6 1B       		.uleb128 0x1b
 1915 06f7 E7000000 		.4byte	0xe7
 1916 06fb 07       		.byte	0x7
 1917 06fc 00       		.byte	0
 1918 06fd 19       		.uleb128 0x19
 1919 06fe 27040000 		.4byte	.LASF57
 1920 0702 01       		.byte	0x1
 1921 0703 4B       		.byte	0x4b
 1922 0704 0E070000 		.4byte	0x70e
 1923 0708 05       		.uleb128 0x5
 1924 0709 03       		.byte	0x3
 1925 070a 00000000 		.4byte	CapSense_csTable
 1926 070e 1C       		.uleb128 0x1c
 1927 070f ED060000 		.4byte	0x6ed
 1928 0713 19       		.uleb128 0x19
 1929 0714 85040000 		.4byte	.LASF58
 1930 0718 01       		.byte	0x1
 1931 0719 51       		.byte	0x51
 1932 071a B1060000 		.4byte	0x6b1
 1933 071e 05       		.uleb128 0x5
 1934 071f 03       		.byte	0x3
 1935 0720 00000000 		.4byte	CapSense_idacSettings
 1936 0724 1A       		.uleb128 0x1a
 1937 0725 6B000000 		.4byte	0x6b
 1938 0729 34070000 		.4byte	0x734
 1939 072d 1B       		.uleb128 0x1b
 1940 072e E7000000 		.4byte	0xe7
 1941 0732 02       		.byte	0x2
 1942 0733 00       		.byte	0
 1943 0734 19       		.uleb128 0x19
 1944 0735 EC040000 		.4byte	.LASF59
 1945 0739 01       		.byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 71


 1946 073a 55       		.byte	0x55
 1947 073b 24070000 		.4byte	0x724
 1948 073f 05       		.uleb128 0x5
 1949 0740 03       		.byte	0x3
 1950 0741 00000000 		.4byte	CapSense_widgetResolution
 1951 0745 19       		.uleb128 0x19
 1952 0746 B5030000 		.4byte	.LASF60
 1953 074a 01       		.byte	0x1
 1954 074b 5B       		.byte	0x5b
 1955 074c B1060000 		.4byte	0x6b1
 1956 0750 05       		.uleb128 0x5
 1957 0751 03       		.byte	0x3
 1958 0752 00000000 		.4byte	CapSense_analogSwitchDivider
 1959 0756 19       		.uleb128 0x19
 1960 0757 0D020000 		.4byte	.LASF61
 1961 075b 01       		.byte	0x1
 1962 075c 5C       		.byte	0x5c
 1963 075d 67070000 		.4byte	0x767
 1964 0761 05       		.uleb128 0x5
 1965 0762 03       		.byte	0x3
 1966 0763 00000000 		.4byte	CapSense_widgetNumber
 1967 0767 1C       		.uleb128 0x1c
 1968 0768 B1060000 		.4byte	0x6b1
 1969 076c 1D       		.uleb128 0x1d
 1970 076d 26030000 		.4byte	.LASF83
 1971 0771 06       		.byte	0x6
 1972 0772 7E       		.byte	0x7e
 1973 0773 6B000000 		.4byte	0x6b
 1974 0777 1E       		.uleb128 0x1e
 1975 0778 0E030000 		.4byte	.LASF62
 1976 077c 03       		.byte	0x3
 1977 077d 27       		.byte	0x27
 1978 077e 1E       		.uleb128 0x1e
 1979 077f 36010000 		.4byte	.LASF63
 1980 0783 04       		.byte	0x4
 1981 0784 46       		.byte	0x46
 1982 0785 1E       		.uleb128 0x1e
 1983 0786 07000000 		.4byte	.LASF64
 1984 078a 05       		.byte	0x5
 1985 078b 46       		.byte	0x46
 1986 078c 1F       		.uleb128 0x1f
 1987 078d 2C000000 		.4byte	.LASF65
 1988 0791 06       		.byte	0x6
 1989 0792 7F       		.byte	0x7f
 1990 0793 9D070000 		.4byte	0x79d
 1991 0797 20       		.uleb128 0x20
 1992 0798 6B000000 		.4byte	0x6b
 1993 079c 00       		.byte	0
 1994 079d 1F       		.uleb128 0x1f
 1995 079e 72050000 		.4byte	.LASF66
 1996 07a2 07       		.byte	0x7
 1997 07a3 1A       		.byte	0x1a
 1998 07a4 AE070000 		.4byte	0x7ae
 1999 07a8 20       		.uleb128 0x20
 2000 07a9 6B000000 		.4byte	0x6b
 2001 07ad 00       		.byte	0
 2002 07ae 1F       		.uleb128 0x1f
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 72


 2003 07af 34060000 		.4byte	.LASF67
 2004 07b3 07       		.byte	0x7
 2005 07b4 1B       		.byte	0x1b
 2006 07b5 BF070000 		.4byte	0x7bf
 2007 07b9 20       		.uleb128 0x20
 2008 07ba 6B000000 		.4byte	0x6b
 2009 07be 00       		.byte	0
 2010 07bf 1E       		.uleb128 0x1e
 2011 07c0 50030000 		.4byte	.LASF68
 2012 07c4 03       		.byte	0x3
 2013 07c5 28       		.byte	0x28
 2014 07c6 1E       		.uleb128 0x1e
 2015 07c7 B9050000 		.4byte	.LASF69
 2016 07cb 04       		.byte	0x4
 2017 07cc 40       		.byte	0x40
 2018 07cd 1E       		.uleb128 0x1e
 2019 07ce F7010000 		.4byte	.LASF70
 2020 07d2 05       		.byte	0x5
 2021 07d3 3D       		.byte	0x3d
 2022 07d4 1F       		.uleb128 0x1f
 2023 07d5 FC000000 		.4byte	.LASF71
 2024 07d9 05       		.byte	0x5
 2025 07da 41       		.byte	0x41
 2026 07db E5070000 		.4byte	0x7e5
 2027 07df 20       		.uleb128 0x20
 2028 07e0 6B000000 		.4byte	0x6b
 2029 07e4 00       		.byte	0
 2030 07e5 21       		.uleb128 0x21
 2031 07e6 41020000 		.4byte	.LASF84
 2032 07ea 06       		.byte	0x6
 2033 07eb 89       		.byte	0x89
 2034 07ec D4000000 		.4byte	0xd4
 2035 07f0 FF070000 		.4byte	0x7ff
 2036 07f4 20       		.uleb128 0x20
 2037 07f5 6B000000 		.4byte	0x6b
 2038 07f9 20       		.uleb128 0x20
 2039 07fa D4000000 		.4byte	0xd4
 2040 07fe 00       		.byte	0
 2041 07ff 1F       		.uleb128 0x1f
 2042 0800 74040000 		.4byte	.LASF72
 2043 0804 06       		.byte	0x6
 2044 0805 8C       		.byte	0x8c
 2045 0806 15080000 		.4byte	0x815
 2046 080a 20       		.uleb128 0x20
 2047 080b 6B000000 		.4byte	0x6b
 2048 080f 20       		.uleb128 0x20
 2049 0810 6B000000 		.4byte	0x6b
 2050 0814 00       		.byte	0
 2051 0815 1E       		.uleb128 0x1e
 2052 0816 C4010000 		.4byte	.LASF73
 2053 081a 08       		.byte	0x8
 2054 081b 1F       		.byte	0x1f
 2055 081c 1E       		.uleb128 0x1e
 2056 081d 55020000 		.4byte	.LASF74
 2057 0821 04       		.byte	0x4
 2058 0822 45       		.byte	0x45
 2059 0823 1E       		.uleb128 0x1e
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 73


 2060 0824 D6040000 		.4byte	.LASF75
 2061 0828 05       		.byte	0x5
 2062 0829 45       		.byte	0x45
 2063 082a 1F       		.uleb128 0x1f
 2064 082b 57040000 		.4byte	.LASF76
 2065 082f 05       		.byte	0x5
 2066 0830 3F       		.byte	0x3f
 2067 0831 3B080000 		.4byte	0x83b
 2068 0835 20       		.uleb128 0x20
 2069 0836 6B000000 		.4byte	0x6b
 2070 083a 00       		.byte	0
 2071 083b 1F       		.uleb128 0x1f
 2072 083c BC020000 		.4byte	.LASF77
 2073 0840 05       		.byte	0x5
 2074 0841 40       		.byte	0x40
 2075 0842 4C080000 		.4byte	0x84c
 2076 0846 20       		.uleb128 0x20
 2077 0847 6B000000 		.4byte	0x6b
 2078 084b 00       		.byte	0
 2079 084c 22       		.uleb128 0x22
 2080 084d 9D030000 		.4byte	.LASF78
 2081 0851 09       		.byte	0x9
 2082 0852 B002     		.2byte	0x2b0
 2083 0854 00       		.byte	0
 2084              		.section	.debug_abbrev,"",%progbits
 2085              	.Ldebug_abbrev0:
 2086 0000 01       		.uleb128 0x1
 2087 0001 11       		.uleb128 0x11
 2088 0002 01       		.byte	0x1
 2089 0003 25       		.uleb128 0x25
 2090 0004 0E       		.uleb128 0xe
 2091 0005 13       		.uleb128 0x13
 2092 0006 0B       		.uleb128 0xb
 2093 0007 03       		.uleb128 0x3
 2094 0008 0E       		.uleb128 0xe
 2095 0009 1B       		.uleb128 0x1b
 2096 000a 0E       		.uleb128 0xe
 2097 000b 55       		.uleb128 0x55
 2098 000c 17       		.uleb128 0x17
 2099 000d 11       		.uleb128 0x11
 2100 000e 01       		.uleb128 0x1
 2101 000f 10       		.uleb128 0x10
 2102 0010 17       		.uleb128 0x17
 2103 0011 00       		.byte	0
 2104 0012 00       		.byte	0
 2105 0013 02       		.uleb128 0x2
 2106 0014 24       		.uleb128 0x24
 2107 0015 00       		.byte	0
 2108 0016 0B       		.uleb128 0xb
 2109 0017 0B       		.uleb128 0xb
 2110 0018 3E       		.uleb128 0x3e
 2111 0019 0B       		.uleb128 0xb
 2112 001a 03       		.uleb128 0x3
 2113 001b 0E       		.uleb128 0xe
 2114 001c 00       		.byte	0
 2115 001d 00       		.byte	0
 2116 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 74


 2117 001f 24       		.uleb128 0x24
 2118 0020 00       		.byte	0
 2119 0021 0B       		.uleb128 0xb
 2120 0022 0B       		.uleb128 0xb
 2121 0023 3E       		.uleb128 0x3e
 2122 0024 0B       		.uleb128 0xb
 2123 0025 03       		.uleb128 0x3
 2124 0026 08       		.uleb128 0x8
 2125 0027 00       		.byte	0
 2126 0028 00       		.byte	0
 2127 0029 04       		.uleb128 0x4
 2128 002a 16       		.uleb128 0x16
 2129 002b 00       		.byte	0
 2130 002c 03       		.uleb128 0x3
 2131 002d 0E       		.uleb128 0xe
 2132 002e 3A       		.uleb128 0x3a
 2133 002f 0B       		.uleb128 0xb
 2134 0030 3B       		.uleb128 0x3b
 2135 0031 0B       		.uleb128 0xb
 2136 0032 49       		.uleb128 0x49
 2137 0033 13       		.uleb128 0x13
 2138 0034 00       		.byte	0
 2139 0035 00       		.byte	0
 2140 0036 05       		.uleb128 0x5
 2141 0037 16       		.uleb128 0x16
 2142 0038 00       		.byte	0
 2143 0039 03       		.uleb128 0x3
 2144 003a 0E       		.uleb128 0xe
 2145 003b 3A       		.uleb128 0x3a
 2146 003c 0B       		.uleb128 0xb
 2147 003d 3B       		.uleb128 0x3b
 2148 003e 05       		.uleb128 0x5
 2149 003f 49       		.uleb128 0x49
 2150 0040 13       		.uleb128 0x13
 2151 0041 00       		.byte	0
 2152 0042 00       		.byte	0
 2153 0043 06       		.uleb128 0x6
 2154 0044 35       		.uleb128 0x35
 2155 0045 00       		.byte	0
 2156 0046 49       		.uleb128 0x49
 2157 0047 13       		.uleb128 0x13
 2158 0048 00       		.byte	0
 2159 0049 00       		.byte	0
 2160 004a 07       		.uleb128 0x7
 2161 004b 0F       		.uleb128 0xf
 2162 004c 00       		.byte	0
 2163 004d 0B       		.uleb128 0xb
 2164 004e 0B       		.uleb128 0xb
 2165 004f 49       		.uleb128 0x49
 2166 0050 13       		.uleb128 0x13
 2167 0051 00       		.byte	0
 2168 0052 00       		.byte	0
 2169 0053 08       		.uleb128 0x8
 2170 0054 15       		.uleb128 0x15
 2171 0055 00       		.byte	0
 2172 0056 27       		.uleb128 0x27
 2173 0057 19       		.uleb128 0x19
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 75


 2174 0058 00       		.byte	0
 2175 0059 00       		.byte	0
 2176 005a 09       		.uleb128 0x9
 2177 005b 2E       		.uleb128 0x2e
 2178 005c 01       		.byte	0x1
 2179 005d 3F       		.uleb128 0x3f
 2180 005e 19       		.uleb128 0x19
 2181 005f 03       		.uleb128 0x3
 2182 0060 0E       		.uleb128 0xe
 2183 0061 3A       		.uleb128 0x3a
 2184 0062 0B       		.uleb128 0xb
 2185 0063 3B       		.uleb128 0x3b
 2186 0064 05       		.uleb128 0x5
 2187 0065 27       		.uleb128 0x27
 2188 0066 19       		.uleb128 0x19
 2189 0067 11       		.uleb128 0x11
 2190 0068 01       		.uleb128 0x1
 2191 0069 12       		.uleb128 0x12
 2192 006a 06       		.uleb128 0x6
 2193 006b 40       		.uleb128 0x40
 2194 006c 18       		.uleb128 0x18
 2195 006d 9742     		.uleb128 0x2117
 2196 006f 19       		.uleb128 0x19
 2197 0070 01       		.uleb128 0x1
 2198 0071 13       		.uleb128 0x13
 2199 0072 00       		.byte	0
 2200 0073 00       		.byte	0
 2201 0074 0A       		.uleb128 0xa
 2202 0075 34       		.uleb128 0x34
 2203 0076 00       		.byte	0
 2204 0077 03       		.uleb128 0x3
 2205 0078 0E       		.uleb128 0xe
 2206 0079 3A       		.uleb128 0x3a
 2207 007a 0B       		.uleb128 0xb
 2208 007b 3B       		.uleb128 0x3b
 2209 007c 05       		.uleb128 0x5
 2210 007d 49       		.uleb128 0x49
 2211 007e 13       		.uleb128 0x13
 2212 007f 02       		.uleb128 0x2
 2213 0080 17       		.uleb128 0x17
 2214 0081 00       		.byte	0
 2215 0082 00       		.byte	0
 2216 0083 0B       		.uleb128 0xb
 2217 0084 898201   		.uleb128 0x4109
 2218 0087 00       		.byte	0
 2219 0088 11       		.uleb128 0x11
 2220 0089 01       		.uleb128 0x1
 2221 008a 31       		.uleb128 0x31
 2222 008b 13       		.uleb128 0x13
 2223 008c 00       		.byte	0
 2224 008d 00       		.byte	0
 2225 008e 0C       		.uleb128 0xc
 2226 008f 898201   		.uleb128 0x4109
 2227 0092 01       		.byte	0x1
 2228 0093 11       		.uleb128 0x11
 2229 0094 01       		.uleb128 0x1
 2230 0095 31       		.uleb128 0x31
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 76


 2231 0096 13       		.uleb128 0x13
 2232 0097 00       		.byte	0
 2233 0098 00       		.byte	0
 2234 0099 0D       		.uleb128 0xd
 2235 009a 8A8201   		.uleb128 0x410a
 2236 009d 00       		.byte	0
 2237 009e 02       		.uleb128 0x2
 2238 009f 18       		.uleb128 0x18
 2239 00a0 9142     		.uleb128 0x2111
 2240 00a2 18       		.uleb128 0x18
 2241 00a3 00       		.byte	0
 2242 00a4 00       		.byte	0
 2243 00a5 0E       		.uleb128 0xe
 2244 00a6 2E       		.uleb128 0x2e
 2245 00a7 01       		.byte	0x1
 2246 00a8 3F       		.uleb128 0x3f
 2247 00a9 19       		.uleb128 0x19
 2248 00aa 03       		.uleb128 0x3
 2249 00ab 0E       		.uleb128 0xe
 2250 00ac 3A       		.uleb128 0x3a
 2251 00ad 0B       		.uleb128 0xb
 2252 00ae 3B       		.uleb128 0x3b
 2253 00af 05       		.uleb128 0x5
 2254 00b0 27       		.uleb128 0x27
 2255 00b1 19       		.uleb128 0x19
 2256 00b2 49       		.uleb128 0x49
 2257 00b3 13       		.uleb128 0x13
 2258 00b4 11       		.uleb128 0x11
 2259 00b5 01       		.uleb128 0x1
 2260 00b6 12       		.uleb128 0x12
 2261 00b7 06       		.uleb128 0x6
 2262 00b8 40       		.uleb128 0x40
 2263 00b9 18       		.uleb128 0x18
 2264 00ba 9742     		.uleb128 0x2117
 2265 00bc 19       		.uleb128 0x19
 2266 00bd 01       		.uleb128 0x1
 2267 00be 13       		.uleb128 0x13
 2268 00bf 00       		.byte	0
 2269 00c0 00       		.byte	0
 2270 00c1 0F       		.uleb128 0xf
 2271 00c2 05       		.uleb128 0x5
 2272 00c3 00       		.byte	0
 2273 00c4 03       		.uleb128 0x3
 2274 00c5 0E       		.uleb128 0xe
 2275 00c6 3A       		.uleb128 0x3a
 2276 00c7 0B       		.uleb128 0xb
 2277 00c8 3B       		.uleb128 0x3b
 2278 00c9 05       		.uleb128 0x5
 2279 00ca 49       		.uleb128 0x49
 2280 00cb 13       		.uleb128 0x13
 2281 00cc 02       		.uleb128 0x2
 2282 00cd 17       		.uleb128 0x17
 2283 00ce 00       		.byte	0
 2284 00cf 00       		.byte	0
 2285 00d0 10       		.uleb128 0x10
 2286 00d1 34       		.uleb128 0x34
 2287 00d2 00       		.byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 77


 2288 00d3 03       		.uleb128 0x3
 2289 00d4 08       		.uleb128 0x8
 2290 00d5 3A       		.uleb128 0x3a
 2291 00d6 0B       		.uleb128 0xb
 2292 00d7 3B       		.uleb128 0x3b
 2293 00d8 05       		.uleb128 0x5
 2294 00d9 49       		.uleb128 0x49
 2295 00da 13       		.uleb128 0x13
 2296 00db 02       		.uleb128 0x2
 2297 00dc 18       		.uleb128 0x18
 2298 00dd 00       		.byte	0
 2299 00de 00       		.byte	0
 2300 00df 11       		.uleb128 0x11
 2301 00e0 2E       		.uleb128 0x2e
 2302 00e1 00       		.byte	0
 2303 00e2 3F       		.uleb128 0x3f
 2304 00e3 19       		.uleb128 0x19
 2305 00e4 03       		.uleb128 0x3
 2306 00e5 0E       		.uleb128 0xe
 2307 00e6 3A       		.uleb128 0x3a
 2308 00e7 0B       		.uleb128 0xb
 2309 00e8 3B       		.uleb128 0x3b
 2310 00e9 05       		.uleb128 0x5
 2311 00ea 27       		.uleb128 0x27
 2312 00eb 19       		.uleb128 0x19
 2313 00ec 49       		.uleb128 0x49
 2314 00ed 13       		.uleb128 0x13
 2315 00ee 11       		.uleb128 0x11
 2316 00ef 01       		.uleb128 0x1
 2317 00f0 12       		.uleb128 0x12
 2318 00f1 06       		.uleb128 0x6
 2319 00f2 40       		.uleb128 0x40
 2320 00f3 18       		.uleb128 0x18
 2321 00f4 9742     		.uleb128 0x2117
 2322 00f6 19       		.uleb128 0x19
 2323 00f7 00       		.byte	0
 2324 00f8 00       		.byte	0
 2325 00f9 12       		.uleb128 0x12
 2326 00fa 34       		.uleb128 0x34
 2327 00fb 00       		.byte	0
 2328 00fc 03       		.uleb128 0x3
 2329 00fd 08       		.uleb128 0x8
 2330 00fe 3A       		.uleb128 0x3a
 2331 00ff 0B       		.uleb128 0xb
 2332 0100 3B       		.uleb128 0x3b
 2333 0101 05       		.uleb128 0x5
 2334 0102 49       		.uleb128 0x49
 2335 0103 13       		.uleb128 0x13
 2336 0104 02       		.uleb128 0x2
 2337 0105 17       		.uleb128 0x17
 2338 0106 00       		.byte	0
 2339 0107 00       		.byte	0
 2340 0108 13       		.uleb128 0x13
 2341 0109 898201   		.uleb128 0x4109
 2342 010c 01       		.byte	0x1
 2343 010d 11       		.uleb128 0x11
 2344 010e 01       		.uleb128 0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 78


 2345 010f 31       		.uleb128 0x31
 2346 0110 13       		.uleb128 0x13
 2347 0111 01       		.uleb128 0x1
 2348 0112 13       		.uleb128 0x13
 2349 0113 00       		.byte	0
 2350 0114 00       		.byte	0
 2351 0115 14       		.uleb128 0x14
 2352 0116 05       		.uleb128 0x5
 2353 0117 00       		.byte	0
 2354 0118 03       		.uleb128 0x3
 2355 0119 0E       		.uleb128 0xe
 2356 011a 3A       		.uleb128 0x3a
 2357 011b 0B       		.uleb128 0xb
 2358 011c 3B       		.uleb128 0x3b
 2359 011d 05       		.uleb128 0x5
 2360 011e 49       		.uleb128 0x49
 2361 011f 13       		.uleb128 0x13
 2362 0120 02       		.uleb128 0x2
 2363 0121 18       		.uleb128 0x18
 2364 0122 00       		.byte	0
 2365 0123 00       		.byte	0
 2366 0124 15       		.uleb128 0x15
 2367 0125 05       		.uleb128 0x5
 2368 0126 00       		.byte	0
 2369 0127 03       		.uleb128 0x3
 2370 0128 08       		.uleb128 0x8
 2371 0129 3A       		.uleb128 0x3a
 2372 012a 0B       		.uleb128 0xb
 2373 012b 3B       		.uleb128 0x3b
 2374 012c 05       		.uleb128 0x5
 2375 012d 49       		.uleb128 0x49
 2376 012e 13       		.uleb128 0x13
 2377 012f 02       		.uleb128 0x2
 2378 0130 18       		.uleb128 0x18
 2379 0131 00       		.byte	0
 2380 0132 00       		.byte	0
 2381 0133 16       		.uleb128 0x16
 2382 0134 2E       		.uleb128 0x2e
 2383 0135 01       		.byte	0x1
 2384 0136 3F       		.uleb128 0x3f
 2385 0137 19       		.uleb128 0x19
 2386 0138 03       		.uleb128 0x3
 2387 0139 0E       		.uleb128 0xe
 2388 013a 3A       		.uleb128 0x3a
 2389 013b 0B       		.uleb128 0xb
 2390 013c 3B       		.uleb128 0x3b
 2391 013d 0B       		.uleb128 0xb
 2392 013e 27       		.uleb128 0x27
 2393 013f 19       		.uleb128 0x19
 2394 0140 11       		.uleb128 0x11
 2395 0141 01       		.uleb128 0x1
 2396 0142 12       		.uleb128 0x12
 2397 0143 06       		.uleb128 0x6
 2398 0144 40       		.uleb128 0x40
 2399 0145 18       		.uleb128 0x18
 2400 0146 9742     		.uleb128 0x2117
 2401 0148 19       		.uleb128 0x19
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 79


 2402 0149 01       		.uleb128 0x1
 2403 014a 13       		.uleb128 0x13
 2404 014b 00       		.byte	0
 2405 014c 00       		.byte	0
 2406 014d 17       		.uleb128 0x17
 2407 014e 34       		.uleb128 0x34
 2408 014f 00       		.byte	0
 2409 0150 03       		.uleb128 0x3
 2410 0151 0E       		.uleb128 0xe
 2411 0152 3A       		.uleb128 0x3a
 2412 0153 0B       		.uleb128 0xb
 2413 0154 3B       		.uleb128 0x3b
 2414 0155 0B       		.uleb128 0xb
 2415 0156 49       		.uleb128 0x49
 2416 0157 13       		.uleb128 0x13
 2417 0158 02       		.uleb128 0x2
 2418 0159 17       		.uleb128 0x17
 2419 015a 00       		.byte	0
 2420 015b 00       		.byte	0
 2421 015c 18       		.uleb128 0x18
 2422 015d 34       		.uleb128 0x34
 2423 015e 00       		.byte	0
 2424 015f 03       		.uleb128 0x3
 2425 0160 0E       		.uleb128 0xe
 2426 0161 3A       		.uleb128 0x3a
 2427 0162 0B       		.uleb128 0xb
 2428 0163 3B       		.uleb128 0x3b
 2429 0164 0B       		.uleb128 0xb
 2430 0165 49       		.uleb128 0x49
 2431 0166 13       		.uleb128 0x13
 2432 0167 02       		.uleb128 0x2
 2433 0168 18       		.uleb128 0x18
 2434 0169 00       		.byte	0
 2435 016a 00       		.byte	0
 2436 016b 19       		.uleb128 0x19
 2437 016c 34       		.uleb128 0x34
 2438 016d 00       		.byte	0
 2439 016e 03       		.uleb128 0x3
 2440 016f 0E       		.uleb128 0xe
 2441 0170 3A       		.uleb128 0x3a
 2442 0171 0B       		.uleb128 0xb
 2443 0172 3B       		.uleb128 0x3b
 2444 0173 0B       		.uleb128 0xb
 2445 0174 49       		.uleb128 0x49
 2446 0175 13       		.uleb128 0x13
 2447 0176 3F       		.uleb128 0x3f
 2448 0177 19       		.uleb128 0x19
 2449 0178 02       		.uleb128 0x2
 2450 0179 18       		.uleb128 0x18
 2451 017a 00       		.byte	0
 2452 017b 00       		.byte	0
 2453 017c 1A       		.uleb128 0x1a
 2454 017d 01       		.uleb128 0x1
 2455 017e 01       		.byte	0x1
 2456 017f 49       		.uleb128 0x49
 2457 0180 13       		.uleb128 0x13
 2458 0181 01       		.uleb128 0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 80


 2459 0182 13       		.uleb128 0x13
 2460 0183 00       		.byte	0
 2461 0184 00       		.byte	0
 2462 0185 1B       		.uleb128 0x1b
 2463 0186 21       		.uleb128 0x21
 2464 0187 00       		.byte	0
 2465 0188 49       		.uleb128 0x49
 2466 0189 13       		.uleb128 0x13
 2467 018a 2F       		.uleb128 0x2f
 2468 018b 0B       		.uleb128 0xb
 2469 018c 00       		.byte	0
 2470 018d 00       		.byte	0
 2471 018e 1C       		.uleb128 0x1c
 2472 018f 26       		.uleb128 0x26
 2473 0190 00       		.byte	0
 2474 0191 49       		.uleb128 0x49
 2475 0192 13       		.uleb128 0x13
 2476 0193 00       		.byte	0
 2477 0194 00       		.byte	0
 2478 0195 1D       		.uleb128 0x1d
 2479 0196 2E       		.uleb128 0x2e
 2480 0197 00       		.byte	0
 2481 0198 3F       		.uleb128 0x3f
 2482 0199 19       		.uleb128 0x19
 2483 019a 03       		.uleb128 0x3
 2484 019b 0E       		.uleb128 0xe
 2485 019c 3A       		.uleb128 0x3a
 2486 019d 0B       		.uleb128 0xb
 2487 019e 3B       		.uleb128 0x3b
 2488 019f 0B       		.uleb128 0xb
 2489 01a0 27       		.uleb128 0x27
 2490 01a1 19       		.uleb128 0x19
 2491 01a2 49       		.uleb128 0x49
 2492 01a3 13       		.uleb128 0x13
 2493 01a4 3C       		.uleb128 0x3c
 2494 01a5 19       		.uleb128 0x19
 2495 01a6 00       		.byte	0
 2496 01a7 00       		.byte	0
 2497 01a8 1E       		.uleb128 0x1e
 2498 01a9 2E       		.uleb128 0x2e
 2499 01aa 00       		.byte	0
 2500 01ab 3F       		.uleb128 0x3f
 2501 01ac 19       		.uleb128 0x19
 2502 01ad 03       		.uleb128 0x3
 2503 01ae 0E       		.uleb128 0xe
 2504 01af 3A       		.uleb128 0x3a
 2505 01b0 0B       		.uleb128 0xb
 2506 01b1 3B       		.uleb128 0x3b
 2507 01b2 0B       		.uleb128 0xb
 2508 01b3 27       		.uleb128 0x27
 2509 01b4 19       		.uleb128 0x19
 2510 01b5 3C       		.uleb128 0x3c
 2511 01b6 19       		.uleb128 0x19
 2512 01b7 00       		.byte	0
 2513 01b8 00       		.byte	0
 2514 01b9 1F       		.uleb128 0x1f
 2515 01ba 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 81


 2516 01bb 01       		.byte	0x1
 2517 01bc 3F       		.uleb128 0x3f
 2518 01bd 19       		.uleb128 0x19
 2519 01be 03       		.uleb128 0x3
 2520 01bf 0E       		.uleb128 0xe
 2521 01c0 3A       		.uleb128 0x3a
 2522 01c1 0B       		.uleb128 0xb
 2523 01c2 3B       		.uleb128 0x3b
 2524 01c3 0B       		.uleb128 0xb
 2525 01c4 27       		.uleb128 0x27
 2526 01c5 19       		.uleb128 0x19
 2527 01c6 3C       		.uleb128 0x3c
 2528 01c7 19       		.uleb128 0x19
 2529 01c8 01       		.uleb128 0x1
 2530 01c9 13       		.uleb128 0x13
 2531 01ca 00       		.byte	0
 2532 01cb 00       		.byte	0
 2533 01cc 20       		.uleb128 0x20
 2534 01cd 05       		.uleb128 0x5
 2535 01ce 00       		.byte	0
 2536 01cf 49       		.uleb128 0x49
 2537 01d0 13       		.uleb128 0x13
 2538 01d1 00       		.byte	0
 2539 01d2 00       		.byte	0
 2540 01d3 21       		.uleb128 0x21
 2541 01d4 2E       		.uleb128 0x2e
 2542 01d5 01       		.byte	0x1
 2543 01d6 3F       		.uleb128 0x3f
 2544 01d7 19       		.uleb128 0x19
 2545 01d8 03       		.uleb128 0x3
 2546 01d9 0E       		.uleb128 0xe
 2547 01da 3A       		.uleb128 0x3a
 2548 01db 0B       		.uleb128 0xb
 2549 01dc 3B       		.uleb128 0x3b
 2550 01dd 0B       		.uleb128 0xb
 2551 01de 27       		.uleb128 0x27
 2552 01df 19       		.uleb128 0x19
 2553 01e0 49       		.uleb128 0x49
 2554 01e1 13       		.uleb128 0x13
 2555 01e2 3C       		.uleb128 0x3c
 2556 01e3 19       		.uleb128 0x19
 2557 01e4 01       		.uleb128 0x1
 2558 01e5 13       		.uleb128 0x13
 2559 01e6 00       		.byte	0
 2560 01e7 00       		.byte	0
 2561 01e8 22       		.uleb128 0x22
 2562 01e9 2E       		.uleb128 0x2e
 2563 01ea 00       		.byte	0
 2564 01eb 3F       		.uleb128 0x3f
 2565 01ec 19       		.uleb128 0x19
 2566 01ed 03       		.uleb128 0x3
 2567 01ee 0E       		.uleb128 0xe
 2568 01ef 3A       		.uleb128 0x3a
 2569 01f0 0B       		.uleb128 0xb
 2570 01f1 3B       		.uleb128 0x3b
 2571 01f2 05       		.uleb128 0x5
 2572 01f3 27       		.uleb128 0x27
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 82


 2573 01f4 19       		.uleb128 0x19
 2574 01f5 3C       		.uleb128 0x3c
 2575 01f6 19       		.uleb128 0x19
 2576 01f7 00       		.byte	0
 2577 01f8 00       		.byte	0
 2578 01f9 00       		.byte	0
 2579              		.section	.debug_loc,"",%progbits
 2580              	.Ldebug_loc0:
 2581              	.LLST0:
 2582 0000 08000000 		.4byte	.LVL1
 2583 0004 15000000 		.4byte	.LVL2-1
 2584 0008 0100     		.2byte	0x1
 2585 000a 50       		.byte	0x50
 2586 000b 15000000 		.4byte	.LVL2-1
 2587 000f 58000000 		.4byte	.LVL6
 2588 0013 0100     		.2byte	0x1
 2589 0015 54       		.byte	0x54
 2590 0016 00000000 		.4byte	0
 2591 001a 00000000 		.4byte	0
 2592              	.LLST1:
 2593 001e 00000000 		.4byte	.LVL7
 2594 0022 06000000 		.4byte	.LVL8
 2595 0026 0100     		.2byte	0x1
 2596 0028 50       		.byte	0x50
 2597 0029 06000000 		.4byte	.LVL8
 2598 002d 08000000 		.4byte	.LVL9
 2599 0031 0100     		.2byte	0x1
 2600 0033 50       		.byte	0x50
 2601 0034 08000000 		.4byte	.LVL9
 2602 0038 0A000000 		.4byte	.LVL10
 2603 003c 0300     		.2byte	0x3
 2604 003e 70       		.byte	0x70
 2605 003f 7F       		.sleb128 -1
 2606 0040 9F       		.byte	0x9f
 2607 0041 0A000000 		.4byte	.LVL10
 2608 0045 28000000 		.4byte	.LFE4
 2609 0049 0100     		.2byte	0x1
 2610 004b 50       		.byte	0x50
 2611 004c 00000000 		.4byte	0
 2612 0050 00000000 		.4byte	0
 2613              	.LLST2:
 2614 0054 18000000 		.4byte	.LVL11
 2615 0058 1E000000 		.4byte	.LVL12
 2616 005c 0100     		.2byte	0x1
 2617 005e 52       		.byte	0x52
 2618 005f 00000000 		.4byte	0
 2619 0063 00000000 		.4byte	0
 2620              	.LLST3:
 2621 0067 00000000 		.4byte	.LVL13
 2622 006b 06000000 		.4byte	.LVL14
 2623 006f 0100     		.2byte	0x1
 2624 0071 50       		.byte	0x50
 2625 0072 06000000 		.4byte	.LVL14
 2626 0076 0C000000 		.4byte	.LFE9
 2627 007a 0400     		.2byte	0x4
 2628 007c F3       		.byte	0xf3
 2629 007d 01       		.uleb128 0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 83


 2630 007e 50       		.byte	0x50
 2631 007f 9F       		.byte	0x9f
 2632 0080 00000000 		.4byte	0
 2633 0084 00000000 		.4byte	0
 2634              	.LLST4:
 2635 0088 00000000 		.4byte	.LVL15
 2636 008c 2B000000 		.4byte	.LVL24-1
 2637 0090 0100     		.2byte	0x1
 2638 0092 50       		.byte	0x50
 2639 0093 2B000000 		.4byte	.LVL24-1
 2640 0097 34000000 		.4byte	.LFE11
 2641 009b 0400     		.2byte	0x4
 2642 009d F3       		.byte	0xf3
 2643 009e 01       		.uleb128 0x1
 2644 009f 50       		.byte	0x50
 2645 00a0 9F       		.byte	0x9f
 2646 00a1 00000000 		.4byte	0
 2647 00a5 00000000 		.4byte	0
 2648              	.LLST5:
 2649 00a9 06000000 		.4byte	.LVL16
 2650 00ad 08000000 		.4byte	.LVL17
 2651 00b1 0500     		.2byte	0x5
 2652 00b3 73       		.byte	0x73
 2653 00b4 00       		.sleb128 0
 2654 00b5 70       		.byte	0x70
 2655 00b6 00       		.sleb128 0
 2656 00b7 22       		.byte	0x22
 2657 00b8 08000000 		.4byte	.LVL17
 2658 00bc 0A000000 		.4byte	.LVL18
 2659 00c0 0200     		.2byte	0x2
 2660 00c2 71       		.byte	0x71
 2661 00c3 00       		.sleb128 0
 2662 00c4 0A000000 		.4byte	.LVL18
 2663 00c8 0E000000 		.4byte	.LVL19
 2664 00cc 0500     		.2byte	0x5
 2665 00ce 73       		.byte	0x73
 2666 00cf 00       		.sleb128 0
 2667 00d0 70       		.byte	0x70
 2668 00d1 00       		.sleb128 0
 2669 00d2 22       		.byte	0x22
 2670 00d3 0E000000 		.4byte	.LVL19
 2671 00d7 1A000000 		.4byte	.LVL20
 2672 00db 0800     		.2byte	0x8
 2673 00dd 70       		.byte	0x70
 2674 00de 00       		.sleb128 0
 2675 00df 03       		.byte	0x3
 2676 00e0 00000000 		.4byte	.LANCHOR1
 2677 00e4 22       		.byte	0x22
 2678 00e5 1A000000 		.4byte	.LVL20
 2679 00e9 20000000 		.4byte	.LVL22
 2680 00ed 0100     		.2byte	0x1
 2681 00ef 52       		.byte	0x52
 2682 00f0 00000000 		.4byte	0
 2683 00f4 00000000 		.4byte	0
 2684              	.LLST6:
 2685 00f8 0A000000 		.4byte	.LVL18
 2686 00fc 0E000000 		.4byte	.LVL19
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 84


 2687 0100 0700     		.2byte	0x7
 2688 0102 73       		.byte	0x73
 2689 0103 00       		.sleb128 0
 2690 0104 70       		.byte	0x70
 2691 0105 00       		.sleb128 0
 2692 0106 22       		.byte	0x22
 2693 0107 23       		.byte	0x23
 2694 0108 08       		.uleb128 0x8
 2695 0109 0E000000 		.4byte	.LVL19
 2696 010d 1C000000 		.4byte	.LVL21
 2697 0111 0800     		.2byte	0x8
 2698 0113 70       		.byte	0x70
 2699 0114 00       		.sleb128 0
 2700 0115 03       		.byte	0x3
 2701 0116 08000000 		.4byte	.LANCHOR1+8
 2702 011a 22       		.byte	0x22
 2703 011b 1C000000 		.4byte	.LVL21
 2704 011f 22000000 		.4byte	.LVL23
 2705 0123 0700     		.2byte	0x7
 2706 0125 73       		.byte	0x73
 2707 0126 00       		.sleb128 0
 2708 0127 70       		.byte	0x70
 2709 0128 00       		.sleb128 0
 2710 0129 22       		.byte	0x22
 2711 012a 23       		.byte	0x23
 2712 012b 08       		.uleb128 0x8
 2713 012c 22000000 		.4byte	.LVL23
 2714 0130 2B000000 		.4byte	.LVL24-1
 2715 0134 0800     		.2byte	0x8
 2716 0136 70       		.byte	0x70
 2717 0137 00       		.sleb128 0
 2718 0138 03       		.byte	0x3
 2719 0139 08000000 		.4byte	.LANCHOR1+8
 2720 013d 22       		.byte	0x22
 2721 013e 00000000 		.4byte	0
 2722 0142 00000000 		.4byte	0
 2723              	.LLST7:
 2724 0146 00000000 		.4byte	.LVL25
 2725 014a 0F000000 		.4byte	.LVL29-1
 2726 014e 0100     		.2byte	0x1
 2727 0150 50       		.byte	0x50
 2728 0151 0F000000 		.4byte	.LVL29-1
 2729 0155 38000000 		.4byte	.LFE12
 2730 0159 0400     		.2byte	0x4
 2731 015b F3       		.byte	0xf3
 2732 015c 01       		.uleb128 0x1
 2733 015d 50       		.byte	0x50
 2734 015e 9F       		.byte	0x9f
 2735 015f 00000000 		.4byte	0
 2736 0163 00000000 		.4byte	0
 2737              	.LLST8:
 2738 0167 08000000 		.4byte	.LVL26
 2739 016b 0A000000 		.4byte	.LVL27
 2740 016f 0500     		.2byte	0x5
 2741 0171 73       		.byte	0x73
 2742 0172 00       		.sleb128 0
 2743 0173 70       		.byte	0x70
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 85


 2744 0174 00       		.sleb128 0
 2745 0175 22       		.byte	0x22
 2746 0176 0A000000 		.4byte	.LVL27
 2747 017a 0F000000 		.4byte	.LVL29-1
 2748 017e 0200     		.2byte	0x2
 2749 0180 73       		.byte	0x73
 2750 0181 00       		.sleb128 0
 2751 0182 0F000000 		.4byte	.LVL29-1
 2752 0186 16000000 		.4byte	.LVL30
 2753 018a 0800     		.2byte	0x8
 2754 018c 74       		.byte	0x74
 2755 018d 00       		.sleb128 0
 2756 018e 03       		.byte	0x3
 2757 018f 00000000 		.4byte	.LANCHOR1
 2758 0193 22       		.byte	0x22
 2759 0194 16000000 		.4byte	.LVL30
 2760 0198 1C000000 		.4byte	.LVL32
 2761 019c 0100     		.2byte	0x1
 2762 019e 55       		.byte	0x55
 2763 019f 00000000 		.4byte	0
 2764 01a3 00000000 		.4byte	0
 2765              	.LLST9:
 2766 01a7 0C000000 		.4byte	.LVL28
 2767 01ab 0F000000 		.4byte	.LVL29-1
 2768 01af 0200     		.2byte	0x2
 2769 01b1 73       		.byte	0x73
 2770 01b2 08       		.sleb128 8
 2771 01b3 0F000000 		.4byte	.LVL29-1
 2772 01b7 18000000 		.4byte	.LVL31
 2773 01bb 0800     		.2byte	0x8
 2774 01bd 74       		.byte	0x74
 2775 01be 00       		.sleb128 0
 2776 01bf 03       		.byte	0x3
 2777 01c0 08000000 		.4byte	.LANCHOR1+8
 2778 01c4 22       		.byte	0x22
 2779 01c5 18000000 		.4byte	.LVL31
 2780 01c9 2A000000 		.4byte	.LVL33
 2781 01cd 0700     		.2byte	0x7
 2782 01cf 73       		.byte	0x73
 2783 01d0 00       		.sleb128 0
 2784 01d1 74       		.byte	0x74
 2785 01d2 00       		.sleb128 0
 2786 01d3 22       		.byte	0x22
 2787 01d4 23       		.byte	0x23
 2788 01d5 08       		.uleb128 0x8
 2789 01d6 00000000 		.4byte	0
 2790 01da 00000000 		.4byte	0
 2791              	.LLST10:
 2792 01de 02000000 		.4byte	.LVL34
 2793 01e2 06000000 		.4byte	.LVL35
 2794 01e6 0200     		.2byte	0x2
 2795 01e8 30       		.byte	0x30
 2796 01e9 9F       		.byte	0x9f
 2797 01ea 06000000 		.4byte	.LVL35
 2798 01ee 0E000000 		.4byte	.LVL37
 2799 01f2 0100     		.2byte	0x1
 2800 01f4 54       		.byte	0x54
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 86


 2801 01f5 0E000000 		.4byte	.LVL37
 2802 01f9 10000000 		.4byte	.LVL38
 2803 01fd 0300     		.2byte	0x3
 2804 01ff 74       		.byte	0x74
 2805 0200 7F       		.sleb128 -1
 2806 0201 9F       		.byte	0x9f
 2807 0202 10000000 		.4byte	.LVL38
 2808 0206 16000000 		.4byte	.LFE10
 2809 020a 0100     		.2byte	0x1
 2810 020c 54       		.byte	0x54
 2811 020d 00000000 		.4byte	0
 2812 0211 00000000 		.4byte	0
 2813              	.LLST11:
 2814 0215 00000000 		.4byte	.LVL43
 2815 0219 27000000 		.4byte	.LVL44-1
 2816 021d 0100     		.2byte	0x1
 2817 021f 50       		.byte	0x50
 2818 0220 27000000 		.4byte	.LVL44-1
 2819 0224 4C000000 		.4byte	.LFE14
 2820 0228 0400     		.2byte	0x4
 2821 022a F3       		.byte	0xf3
 2822 022b 01       		.uleb128 0x1
 2823 022c 50       		.byte	0x50
 2824 022d 9F       		.byte	0x9f
 2825 022e 00000000 		.4byte	0
 2826 0232 00000000 		.4byte	0
 2827              	.LLST12:
 2828 0236 00000000 		.4byte	.LVL46
 2829 023a 06000000 		.4byte	.LVL47
 2830 023e 0100     		.2byte	0x1
 2831 0240 50       		.byte	0x50
 2832 0241 06000000 		.4byte	.LVL47
 2833 0245 08000000 		.4byte	.LVL48
 2834 0249 0200     		.2byte	0x2
 2835 024b 73       		.byte	0x73
 2836 024c 00       		.sleb128 0
 2837 024d 08000000 		.4byte	.LVL48
 2838 0251 0A000000 		.4byte	.LVL49
 2839 0255 0500     		.2byte	0x5
 2840 0257 0C       		.byte	0xc
 2841 0258 24640040 		.4byte	0x40006424
 2842 025c 0A000000 		.4byte	.LVL49
 2843 0260 10000000 		.4byte	.LFE15
 2844 0264 0400     		.2byte	0x4
 2845 0266 F3       		.byte	0xf3
 2846 0267 01       		.uleb128 0x1
 2847 0268 50       		.byte	0x50
 2848 0269 9F       		.byte	0x9f
 2849 026a 00000000 		.4byte	0
 2850 026e 00000000 		.4byte	0
 2851              	.LLST13:
 2852 0272 00000000 		.4byte	.LVL50
 2853 0276 12000000 		.4byte	.LVL53
 2854 027a 0100     		.2byte	0x1
 2855 027c 50       		.byte	0x50
 2856 027d 12000000 		.4byte	.LVL53
 2857 0281 38000000 		.4byte	.LFE5
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 87


 2858 0285 0400     		.2byte	0x4
 2859 0287 F3       		.byte	0xf3
 2860 0288 01       		.uleb128 0x1
 2861 0289 50       		.byte	0x50
 2862 028a 9F       		.byte	0x9f
 2863 028b 00000000 		.4byte	0
 2864 028f 00000000 		.4byte	0
 2865              	.LLST14:
 2866 0293 0C000000 		.4byte	.LVL51
 2867 0297 10000000 		.4byte	.LVL52
 2868 029b 0300     		.2byte	0x3
 2869 029d 73       		.byte	0x73
 2870 029e CC00     		.sleb128 76
 2871 02a0 10000000 		.4byte	.LVL52
 2872 02a4 12000000 		.4byte	.LVL53
 2873 02a8 0800     		.2byte	0x8
 2874 02aa 70       		.byte	0x70
 2875 02ab 00       		.sleb128 0
 2876 02ac 03       		.byte	0x3
 2877 02ad 4C000000 		.4byte	.LANCHOR1+76
 2878 02b1 22       		.byte	0x22
 2879 02b2 12000000 		.4byte	.LVL53
 2880 02b6 28000000 		.4byte	.LVL56
 2881 02ba 0800     		.2byte	0x8
 2882 02bc 74       		.byte	0x74
 2883 02bd 00       		.sleb128 0
 2884 02be 03       		.byte	0x3
 2885 02bf 4C000000 		.4byte	.LANCHOR1+76
 2886 02c3 22       		.byte	0x22
 2887 02c4 00000000 		.4byte	0
 2888 02c8 00000000 		.4byte	0
 2889              	.LLST15:
 2890 02cc 00000000 		.4byte	.LVL57
 2891 02d0 07000000 		.4byte	.LVL58-1
 2892 02d4 0100     		.2byte	0x1
 2893 02d6 50       		.byte	0x50
 2894 02d7 07000000 		.4byte	.LVL58-1
 2895 02db 34000000 		.4byte	.LFE13
 2896 02df 0400     		.2byte	0x4
 2897 02e1 F3       		.byte	0xf3
 2898 02e2 01       		.uleb128 0x1
 2899 02e3 50       		.byte	0x50
 2900 02e4 9F       		.byte	0x9f
 2901 02e5 00000000 		.4byte	0
 2902 02e9 00000000 		.4byte	0
 2903              	.LLST16:
 2904 02ed 00000000 		.4byte	.LVL60
 2905 02f1 13000000 		.4byte	.LVL61-1
 2906 02f5 0100     		.2byte	0x1
 2907 02f7 50       		.byte	0x50
 2908 02f8 13000000 		.4byte	.LVL61-1
 2909 02fc 20000000 		.4byte	.LFE6
 2910 0300 0400     		.2byte	0x4
 2911 0302 F3       		.byte	0xf3
 2912 0303 01       		.uleb128 0x1
 2913 0304 50       		.byte	0x50
 2914 0305 9F       		.byte	0x9f
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 88


 2915 0306 00000000 		.4byte	0
 2916 030a 00000000 		.4byte	0
 2917              	.LLST17:
 2918 030e 00000000 		.4byte	.LVL64
 2919 0312 04000000 		.4byte	.LVL65
 2920 0316 0200     		.2byte	0x2
 2921 0318 30       		.byte	0x30
 2922 0319 9F       		.byte	0x9f
 2923 031a 04000000 		.4byte	.LVL65
 2924 031e 0C000000 		.4byte	.LFE16
 2925 0322 0100     		.2byte	0x1
 2926 0324 50       		.byte	0x50
 2927 0325 00000000 		.4byte	0
 2928 0329 00000000 		.4byte	0
 2929              	.LLST18:
 2930 032d 10000000 		.4byte	.LVL70
 2931 0331 27000000 		.4byte	.LVL71-1
 2932 0335 0100     		.2byte	0x1
 2933 0337 50       		.byte	0x50
 2934 0338 42000000 		.4byte	.LVL72
 2935 033c 59000000 		.4byte	.LVL73-1
 2936 0340 0100     		.2byte	0x1
 2937 0342 50       		.byte	0x50
 2938 0343 00000000 		.4byte	0
 2939 0347 00000000 		.4byte	0
 2940              		.section	.debug_aranges,"",%progbits
 2941 0000 AC000000 		.4byte	0xac
 2942 0004 0200     		.2byte	0x2
 2943 0006 00000000 		.4byte	.Ldebug_info0
 2944 000a 04       		.byte	0x4
 2945 000b 00       		.byte	0
 2946 000c 0000     		.2byte	0
 2947 000e 0000     		.2byte	0
 2948 0010 00000000 		.4byte	.LFB1
 2949 0014 68000000 		.4byte	.LFE1-.LFB1
 2950 0018 00000000 		.4byte	.LFB4
 2951 001c 28000000 		.4byte	.LFE4-.LFB4
 2952 0020 00000000 		.4byte	.LFB8
 2953 0024 10000000 		.4byte	.LFE8-.LFB8
 2954 0028 00000000 		.4byte	.LFB9
 2955 002c 0C000000 		.4byte	.LFE9-.LFB9
 2956 0030 00000000 		.4byte	.LFB11
 2957 0034 34000000 		.4byte	.LFE11-.LFB11
 2958 0038 00000000 		.4byte	.LFB12
 2959 003c 38000000 		.4byte	.LFE12-.LFB12
 2960 0040 00000000 		.4byte	.LFB10
 2961 0044 16000000 		.4byte	.LFE10-.LFB10
 2962 0048 00000000 		.4byte	.LFB3
 2963 004c 68000000 		.4byte	.LFE3-.LFB3
 2964 0050 00000000 		.4byte	.LFB14
 2965 0054 4C000000 		.4byte	.LFE14-.LFB14
 2966 0058 00000000 		.4byte	.LFB15
 2967 005c 10000000 		.4byte	.LFE15-.LFB15
 2968 0060 00000000 		.4byte	.LFB5
 2969 0064 38000000 		.4byte	.LFE5-.LFB5
 2970 0068 00000000 		.4byte	.LFB13
 2971 006c 34000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 89


 2972 0070 00000000 		.4byte	.LFB6
 2973 0074 20000000 		.4byte	.LFE6-.LFB6
 2974 0078 00000000 		.4byte	.LFB7
 2975 007c 38000000 		.4byte	.LFE7-.LFB7
 2976 0080 00000000 		.4byte	.LFB16
 2977 0084 0C000000 		.4byte	.LFE16-.LFB16
 2978 0088 00000000 		.4byte	.LFB17
 2979 008c 0C000000 		.4byte	.LFE17-.LFB17
 2980 0090 00000000 		.4byte	.LFB18
 2981 0094 20000000 		.4byte	.LFE18-.LFB18
 2982 0098 00000000 		.4byte	.LFB0
 2983 009c E4000000 		.4byte	.LFE0-.LFB0
 2984 00a0 00000000 		.4byte	.LFB2
 2985 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2986 00a8 00000000 		.4byte	0
 2987 00ac 00000000 		.4byte	0
 2988              		.section	.debug_ranges,"",%progbits
 2989              	.Ldebug_ranges0:
 2990 0000 00000000 		.4byte	.LFB1
 2991 0004 68000000 		.4byte	.LFE1
 2992 0008 00000000 		.4byte	.LFB4
 2993 000c 28000000 		.4byte	.LFE4
 2994 0010 00000000 		.4byte	.LFB8
 2995 0014 10000000 		.4byte	.LFE8
 2996 0018 00000000 		.4byte	.LFB9
 2997 001c 0C000000 		.4byte	.LFE9
 2998 0020 00000000 		.4byte	.LFB11
 2999 0024 34000000 		.4byte	.LFE11
 3000 0028 00000000 		.4byte	.LFB12
 3001 002c 38000000 		.4byte	.LFE12
 3002 0030 00000000 		.4byte	.LFB10
 3003 0034 16000000 		.4byte	.LFE10
 3004 0038 00000000 		.4byte	.LFB3
 3005 003c 68000000 		.4byte	.LFE3
 3006 0040 00000000 		.4byte	.LFB14
 3007 0044 4C000000 		.4byte	.LFE14
 3008 0048 00000000 		.4byte	.LFB15
 3009 004c 10000000 		.4byte	.LFE15
 3010 0050 00000000 		.4byte	.LFB5
 3011 0054 38000000 		.4byte	.LFE5
 3012 0058 00000000 		.4byte	.LFB13
 3013 005c 34000000 		.4byte	.LFE13
 3014 0060 00000000 		.4byte	.LFB6
 3015 0064 20000000 		.4byte	.LFE6
 3016 0068 00000000 		.4byte	.LFB7
 3017 006c 38000000 		.4byte	.LFE7
 3018 0070 00000000 		.4byte	.LFB16
 3019 0074 0C000000 		.4byte	.LFE16
 3020 0078 00000000 		.4byte	.LFB17
 3021 007c 0C000000 		.4byte	.LFE17
 3022 0080 00000000 		.4byte	.LFB18
 3023 0084 20000000 		.4byte	.LFE18
 3024 0088 00000000 		.4byte	.LFB0
 3025 008c E4000000 		.4byte	.LFE0
 3026 0090 00000000 		.4byte	.LFB2
 3027 0094 2C000000 		.4byte	.LFE2
 3028 0098 00000000 		.4byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 90


 3029 009c 00000000 		.4byte	0
 3030              		.section	.debug_line,"",%progbits
 3031              	.Ldebug_line0:
 3032 0000 BB020000 		.section	.debug_str,"MS",%progbits,1
 3032      0200CB00 
 3032      00000201 
 3032      FB0E0D00 
 3032      01010101 
 3033              	.LASF10:
 3034 0000 75696E74 		.ascii	"uint16\000"
 3034      313600
 3035              	.LASF64:
 3036 0007 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 3036      656E7365 
 3036      5F496461 
 3036      63434830 
 3036      5F456E61 
 3037              	.LASF50:
 3038 001f 43617053 		.ascii	"CapSense_csv\000"
 3038      656E7365 
 3038      5F637376 
 3038      00
 3039              	.LASF65:
 3040 002c 43794578 		.ascii	"CyExitCriticalSection\000"
 3040      69744372 
 3040      69746963 
 3040      616C5365 
 3040      6374696F 
 3041              	.LASF79:
 3042 0042 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3042      4320342E 
 3042      382E3420 
 3042      32303134 
 3042      30353236 
 3043 0075 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3043      20726576 
 3043      6973696F 
 3043      6E203231 
 3043      31333538 
 3044 00a8 67202D66 		.ascii	"g -ffunction-sections\000"
 3044      66756E63 
 3044      74696F6E 
 3044      2D736563 
 3044      74696F6E 
 3045              	.LASF48:
 3046 00be 43617053 		.ascii	"CapSense_initVar\000"
 3046      656E7365 
 3046      5F696E69 
 3046      74566172 
 3046      00
 3047              	.LASF54:
 3048 00cf 43617053 		.ascii	"CapSense_pcTable\000"
 3048      656E7365 
 3048      5F706354 
 3048      61626C65 
 3048      00
 3049              	.LASF49:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 91


 3050 00e0 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 3050      656E7365 
 3050      5F6C6F77 
 3050      4C657665 
 3050      6C54756E 
 3051              	.LASF71:
 3052 00fc 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 3052      656E7365 
 3052      5F496461 
 3052      63434830 
 3052      5F536574 
 3053              	.LASF24:
 3054 0116 736E7349 		.ascii	"snsIndex\000"
 3054      6E646578 
 3054      00
 3055              	.LASF7:
 3056 011f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3056      206C6F6E 
 3056      6720756E 
 3056      7369676E 
 3056      65642069 
 3057              	.LASF63:
 3058 0136 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 3058      656E7365 
 3058      5F436F6D 
 3058      70434830 
 3058      5F456E61 
 3059              	.LASF26:
 3060 014e 43617053 		.ascii	"CapSense_Enable\000"
 3060      656E7365 
 3060      5F456E61 
 3060      626C6500 
 3061              	.LASF34:
 3062 015e 43617053 		.ascii	"CapSense_SetPrescaler\000"
 3062      656E7365 
 3062      5F536574 
 3062      50726573 
 3062      63616C65 
 3063              	.LASF6:
 3064 0174 6C6F6E67 		.ascii	"long long int\000"
 3064      206C6F6E 
 3064      6720696E 
 3064      7400
 3065              	.LASF0:
 3066 0182 7369676E 		.ascii	"signed char\000"
 3066      65642063 
 3066      68617200 
 3067              	.LASF45:
 3068 018e 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 3068      656E7365 
 3068      5F536574 
 3068      416E616C 
 3068      6F675377 
 3069              	.LASF4:
 3070 01af 6C6F6E67 		.ascii	"long int\000"
 3070      20696E74 
 3070      00
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 92


 3071              	.LASF16:
 3072 01b8 72656731 		.ascii	"reg16\000"
 3072      3600
 3073              	.LASF9:
 3074 01be 75696E74 		.ascii	"uint8\000"
 3074      3800
 3075              	.LASF73:
 3076 01c4 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 3076      656E7365 
 3076      5F414D75 
 3076      78434830 
 3076      5F496E69 
 3077              	.LASF13:
 3078 01da 646F7562 		.ascii	"double\000"
 3078      6C6500
 3079              	.LASF27:
 3080 01e1 43617053 		.ascii	"CapSense_EnableSensor\000"
 3080      656E7365 
 3080      5F456E61 
 3080      626C6553 
 3080      656E736F 
 3081              	.LASF70:
 3082 01f7 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 3082      656E7365 
 3082      5F496461 
 3082      63434830 
 3082      5F53746F 
 3083              	.LASF61:
 3084 020d 43617053 		.ascii	"CapSense_widgetNumber\000"
 3084      656E7365 
 3084      5F776964 
 3084      6765744E 
 3084      756D6265 
 3085              	.LASF23:
 3086 0223 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 3086      656E7365 
 3086      5F526561 
 3086      6453656E 
 3086      736F7252 
 3087              	.LASF11:
 3088 023a 75696E74 		.ascii	"uint32\000"
 3088      333200
 3089              	.LASF84:
 3090 0241 4379496E 		.ascii	"CyIntSetVector\000"
 3090      74536574 
 3090      56656374 
 3090      6F7200
 3091              	.LASF29:
 3092 0250 6D61736B 		.ascii	"mask\000"
 3092      00
 3093              	.LASF74:
 3094 0255 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 3094      656E7365 
 3094      5F436F6D 
 3094      70434830 
 3094      5F496E69 
 3095              	.LASF28:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 93


 3096 026b 706F7274 		.ascii	"port\000"
 3096      00
 3097              	.LASF51:
 3098 0270 43617053 		.ascii	"CapSense_sensorIndex\000"
 3098      656E7365 
 3098      5F73656E 
 3098      736F7249 
 3098      6E646578 
 3099              	.LASF40:
 3100 0285 43617053 		.ascii	"CapSense_ScanSensor\000"
 3100      656E7365 
 3100      5F536361 
 3100      6E53656E 
 3100      736F7200 
 3101              	.LASF8:
 3102 0299 756E7369 		.ascii	"unsigned int\000"
 3102      676E6564 
 3102      20696E74 
 3102      00
 3103              	.LASF31:
 3104 02a6 43617053 		.ascii	"CapSense_ClearSensors\000"
 3104      656E7365 
 3104      5F436C65 
 3104      61725365 
 3104      6E736F72 
 3105              	.LASF77:
 3106 02bc 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 3106      656E7365 
 3106      5F496461 
 3106      63434830 
 3106      5F536574 
 3107              	.LASF5:
 3108 02d6 6C6F6E67 		.ascii	"long unsigned int\000"
 3108      20756E73 
 3108      69676E65 
 3108      6420696E 
 3108      7400
 3109              	.LASF56:
 3110 02e8 43617053 		.ascii	"CapSense_maskTable\000"
 3110      656E7365 
 3110      5F6D6173 
 3110      6B546162 
 3110      6C6500
 3111              	.LASF55:
 3112 02fb 43617053 		.ascii	"CapSense_portTable\000"
 3112      656E7365 
 3112      5F706F72 
 3112      74546162 
 3112      6C6500
 3113              	.LASF62:
 3114 030e 43617053 		.ascii	"CapSense_IntClock_Start\000"
 3114      656E7365 
 3114      5F496E74 
 3114      436C6F63 
 3114      6B5F5374 
 3115              	.LASF83:
 3116 0326 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 94


 3116      74657243 
 3116      72697469 
 3116      63616C53 
 3116      65637469 
 3117              	.LASF3:
 3118 033d 73686F72 		.ascii	"short unsigned int\000"
 3118      7420756E 
 3118      7369676E 
 3118      65642069 
 3118      6E7400
 3119              	.LASF68:
 3120 0350 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 3120      656E7365 
 3120      5F496E74 
 3120      436C6F63 
 3120      6B5F5374 
 3121              	.LASF25:
 3122 0367 73656E73 		.ascii	"sensor\000"
 3122      6F7200
 3123              	.LASF53:
 3124 036e 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 3124      656E7365 
 3124      5F73656E 
 3124      736F7245 
 3124      6E61626C 
 3125              	.LASF37:
 3126 0388 736C6F74 		.ascii	"slot\000"
 3126      00
 3127              	.LASF82:
 3128 038d 43617053 		.ascii	"CapSense_IsBusy\000"
 3128      656E7365 
 3128      5F497342 
 3128      75737900 
 3129              	.LASF78:
 3130 039d 43617053 		.ascii	"CapSense_AutoTune\000"
 3130      656E7365 
 3130      5F417574 
 3130      6F54756E 
 3130      6500
 3131              	.LASF17:
 3132 03af 72656733 		.ascii	"reg32\000"
 3132      3200
 3133              	.LASF60:
 3134 03b5 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 3134      656E7365 
 3134      5F616E61 
 3134      6C6F6753 
 3134      77697463 
 3135              	.LASF81:
 3136 03d2 433A5C72 		.ascii	"C:\\repositories\\embedded\\trunk\\terminalOutput\\"
 3136      65706F73 
 3136      69746F72 
 3136      6965735C 
 3136      656D6265 
 3137 0400 43453439 		.ascii	"CE4920Project1\\Design01.cydsn\000"
 3137      32305072 
 3137      6F6A6563 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 95


 3137      74315C44 
 3137      65736967 
 3138              	.LASF19:
 3139 041e 73697A65 		.ascii	"sizetype\000"
 3139      74797065 
 3139      00
 3140              	.LASF57:
 3141 0427 43617053 		.ascii	"CapSense_csTable\000"
 3141      656E7365 
 3141      5F637354 
 3141      61626C65 
 3141      00
 3142              	.LASF32:
 3143 0438 43617053 		.ascii	"CapSense_Stop\000"
 3143      656E7365 
 3143      5F53746F 
 3143      7000
 3144              	.LASF44:
 3145 0446 7363616E 		.ascii	"scanSpeed\000"
 3145      53706565 
 3145      6400
 3146              	.LASF21:
 3147 0450 656E4D61 		.ascii	"enMask\000"
 3147      736B00
 3148              	.LASF76:
 3149 0457 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 3149      656E7365 
 3149      5F496461 
 3149      63434830 
 3149      5F536574 
 3150              	.LASF72:
 3151 0474 4379496E 		.ascii	"CyIntSetPriority\000"
 3151      74536574 
 3151      5072696F 
 3151      72697479 
 3151      00
 3152              	.LASF58:
 3153 0485 43617053 		.ascii	"CapSense_idacSettings\000"
 3153      656E7365 
 3153      5F696461 
 3153      63536574 
 3153      74696E67 
 3154              	.LASF12:
 3155 049b 666C6F61 		.ascii	"float\000"
 3155      7400
 3156              	.LASF35:
 3157 04a1 70726573 		.ascii	"prescaler\000"
 3157      63616C65 
 3157      7200
 3158              	.LASF15:
 3159 04ab 72656738 		.ascii	"reg8\000"
 3159      00
 3160              	.LASF22:
 3161 04b0 43617053 		.ascii	"CapSense_FindNextSensor\000"
 3161      656E7365 
 3161      5F46696E 
 3161      644E6578 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 96


 3161      7453656E 
 3162              	.LASF1:
 3163 04c8 756E7369 		.ascii	"unsigned char\000"
 3163      676E6564 
 3163      20636861 
 3163      7200
 3164              	.LASF75:
 3165 04d6 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 3165      656E7365 
 3165      5F496461 
 3165      63434830 
 3165      5F496E69 
 3166              	.LASF59:
 3167 04ec 43617053 		.ascii	"CapSense_widgetResolution\000"
 3167      656E7365 
 3167      5F776964 
 3167      67657452 
 3167      65736F6C 
 3168              	.LASF2:
 3169 0506 73686F72 		.ascii	"short int\000"
 3169      7420696E 
 3169      7400
 3170              	.LASF38:
 3171 0510 77696467 		.ascii	"widget\000"
 3171      657400
 3172              	.LASF36:
 3173 0517 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 3173      656E7365 
 3173      5F536574 
 3173      5363616E 
 3173      536C6F74 
 3174              	.LASF42:
 3175 0534 43617053 		.ascii	"CapSense_GetPrescaler\000"
 3175      656E7365 
 3175      5F476574 
 3175      50726573 
 3175      63616C65 
 3176              	.LASF14:
 3177 054a 63686172 		.ascii	"char\000"
 3177      00
 3178              	.LASF18:
 3179 054f 63796973 		.ascii	"cyisraddress\000"
 3179      72616464 
 3179      72657373 
 3179      00
 3180              	.LASF43:
 3181 055c 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 3181      656E7365 
 3181      5F536574 
 3181      5363616E 
 3181      53706565 
 3182              	.LASF66:
 3183 0572 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 3183      656E7365 
 3183      5F414D75 
 3183      78434830 
 3183      5F536574 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 97


 3184              	.LASF47:
 3185 0587 43617053 		.ascii	"CapSense_Start\000"
 3185      656E7365 
 3185      5F537461 
 3185      727400
 3186              	.LASF33:
 3187 0596 43617053 		.ascii	"CapSense_PostScan\000"
 3187      656E7365 
 3187      5F506F73 
 3187      74536361 
 3187      6E00
 3188              	.LASF20:
 3189 05a8 656E6162 		.ascii	"enableInterrupts\000"
 3189      6C65496E 
 3189      74657272 
 3189      75707473 
 3189      00
 3190              	.LASF69:
 3191 05b9 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 3191      656E7365 
 3191      5F436F6D 
 3191      70434830 
 3191      5F53746F 
 3192              	.LASF30:
 3193 05cf 43617053 		.ascii	"CapSense_DisableSensor\000"
 3193      656E7365 
 3193      5F446973 
 3193      61626C65 
 3193      53656E73 
 3194              	.LASF39:
 3195 05e6 43617053 		.ascii	"CapSense_PreScan\000"
 3195      656E7365 
 3195      5F507265 
 3195      5363616E 
 3195      00
 3196              	.LASF46:
 3197 05f7 43617053 		.ascii	"CapSense_Init\000"
 3197      656E7365 
 3197      5F496E69 
 3197      7400
 3198              	.LASF52:
 3199 0605 43617053 		.ascii	"CapSense_sensorRaw\000"
 3199      656E7365 
 3199      5F73656E 
 3199      736F7252 
 3199      617700
 3200              	.LASF41:
 3201 0618 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 3201      656E7365 
 3201      5F536361 
 3201      6E456E61 
 3201      626C6564 
 3202              	.LASF67:
 3203 0634 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 3203      656E7365 
 3203      5F414D75 
 3203      78434830 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccliSzxh.s 			page 98


 3203      5F556E73 
 3204              	.LASF80:
 3205 064b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense.c\000"
 3205      6E657261 
 3205      7465645F 
 3205      536F7572 
 3205      63655C50 
 3206              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
