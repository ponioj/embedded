ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_1_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PWM_1_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_1_Enable, %function
  24              	PWM_1_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** 
  26:.\Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_1.c **** 
  34:.\Generated_Source\PSoC5/PWM_1.c **** 
  35:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_1.c **** *
  44:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_1.c **** *
  47:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_1.c **** *
  50:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_1.c **** *
  54:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_1.c **** {
  57:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:.\Generated_Source\PSoC5/PWM_1.c ****     {
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  61:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  62:.\Generated_Source\PSoC5/PWM_1.c ****     }
  63:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  64:.\Generated_Source\PSoC5/PWM_1.c **** 
  65:.\Generated_Source\PSoC5/PWM_1.c **** }
  66:.\Generated_Source\PSoC5/PWM_1.c **** 
  67:.\Generated_Source\PSoC5/PWM_1.c **** 
  68:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC5/PWM_1.c **** *
  77:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_1.c **** *
  80:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_1.c **** *
  83:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_1.c **** {
  86:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_1.c **** 
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_1.c **** 
  97:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_1.c **** 
 104:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_1.c **** 
 107:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC5/PWM_1.c **** 
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_1.c **** 
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_1.c **** 
 123:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_1.c **** 
 133:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_1.c **** 
 136:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/PWM_1.c **** 
 138:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_1.c **** 
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_1.c **** 
 149:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_1.c **** 
 153:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_1.c **** 
 157:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_1.c **** 
 165:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_1.c **** 
 171:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC5/PWM_1.c **** 
 174:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_1.c **** }
 180:.\Generated_Source\PSoC5/PWM_1.c **** 
 181:.\Generated_Source\PSoC5/PWM_1.c **** 
 182:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_1.c **** *
 195:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_1.c **** *
 198:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_1.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F08002 		orr	r2, r2, #128
  36 0008 1A70     		strb	r2, [r3]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 71640040 		.word	1073767537
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_1_Enable, .-PWM_1_Enable
  45              		.section	.text.PWM_1_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PWM_1_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_1_Stop, %function
  51              	PWM_1_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_1.c **** }
 212:.\Generated_Source\PSoC5/PWM_1.c **** 
 213:.\Generated_Source\PSoC5/PWM_1.c **** 
 214:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_1.c **** *
 218:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_1.c **** *
 225:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_1.c **** *
 228:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_1.c **** *
 232:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 6


 234:.\Generated_Source\PSoC5/PWM_1.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024B     		ldr	r3, .L5
  60 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  61 0004 02F07F02 		and	r2, r2, #127
  62 0008 1A70     		strb	r2, [r3]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 71640040 		.word	1073767537
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_1_Stop, .-PWM_1_Stop
  71              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_1_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_1_WriteCounter, %function
  77              	PWM_1_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_1.c **** 
 239:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_1.c **** }
 245:.\Generated_Source\PSoC5/PWM_1.c **** 
 246:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_1.c **** 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 
 250:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_1.c ****         *
 254:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_1.c ****         *
 258:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_1.c ****         *
 262:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 7


 265:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_1.c ****         {
 268:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_1.c **** 
 270:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_1.c **** 
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_1.c **** 
 279:.\Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC5/PWM_1.c **** 
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_1.c **** 
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_1.c **** 
 295:.\Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_1.c ****         }
 304:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_1.c **** 
 306:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_1.c **** 
 308:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_1.c **** 
 310:.\Generated_Source\PSoC5/PWM_1.c **** 
 311:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_1.c ****         *
 315:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_1.c ****         *
 318:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 8


 322:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_1.c ****         *
 325:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_1.c ****         {
 328:.\Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_1.c **** 
 335:.\Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_1.c ****         }
 340:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_1.c **** 
 342:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_1.c **** 
 344:.\Generated_Source\PSoC5/PWM_1.c **** 
 345:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *
 349:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *
 352:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_1.c ****     *
 356:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_1.c ****     *
 359:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_1.c ****     {
 362:.\Generated_Source\PSoC5/PWM_1.c **** 
 363:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_1.c **** 
 370:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_1.c ****     }
 375:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 9


 379:.\Generated_Source\PSoC5/PWM_1.c **** 
 380:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_1.c **** 
 382:.\Generated_Source\PSoC5/PWM_1.c **** 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_1.c ****     *
 399:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_1.c ****     *
 402:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_1.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 00680040 		.word	1073768448
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  96              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_1_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_1_ReadCounter, %function
 102              	PWM_1_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/PWM_1.c ****     }
 408:.\Generated_Source\PSoC5/PWM_1.c **** 
 409:.\Generated_Source\PSoC5/PWM_1.c **** 
 410:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 10


 411:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *
 414:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_1.c ****     *
 421:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_1.c ****     *
 424:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_1.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/PWM_1.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 10640040 		.word	1073767440
 122 0010 A0680040 		.word	1073768608
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 126              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_1_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_1_WritePeriod, %function
 132              	PWM_1_WritePeriod:
 133              	.LFB7:
 435:.\Generated_Source\PSoC5/PWM_1.c **** 
 436:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 11


 438:.\Generated_Source\PSoC5/PWM_1.c **** 
 439:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_1.c ****         *
 443:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_1.c ****         *
 446:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_1.c ****         *
 449:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_1.c ****         *
 452:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_1.c ****         {
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_1.c ****             {
 457:.\Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_1.c ****             }
 459:.\Generated_Source\PSoC5/PWM_1.c ****         }
 460:.\Generated_Source\PSoC5/PWM_1.c **** 
 461:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_1.c **** 
 463:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_1.c **** 
 465:.\Generated_Source\PSoC5/PWM_1.c **** 
 466:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_1.c **** *
 470:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_1.c **** *
 474:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_1.c **** *
 478:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_1.c **** *
 481:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/PWM_1.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1880     		strh	r0, [r3]	@ movhi
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 80680040 		.word	1073768576
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 151              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_1_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_1_WriteCompare, %function
 157              	PWM_1_WriteCompare:
 158              	.LFB8:
 488:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_1.c **** }
 490:.\Generated_Source\PSoC5/PWM_1.c **** 
 491:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_1.c **** 
 493:.\Generated_Source\PSoC5/PWM_1.c **** 
 494:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_1.c ****     *
 498:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_1.c ****     *
 508:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_1.c ****     *
 511:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_1.c ****     *
 515:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_1.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 13


 521:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1880     		strh	r0, [r3]	@ movhi
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 40680040 		.word	1073768512
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 176              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_1_SetInterruptMode
 179              		.thumb
 180              		.thumb_func
 181              		.type	PWM_1_SetInterruptMode, %function
 182              	PWM_1_SetInterruptMode:
 183              	.LFB9:
 523:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_1.c **** 
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_1.c ****     }
 533:.\Generated_Source\PSoC5/PWM_1.c **** 
 534:.\Generated_Source\PSoC5/PWM_1.c **** 
 535:.\Generated_Source\PSoC5/PWM_1.c **** #else
 536:.\Generated_Source\PSoC5/PWM_1.c **** 
 537:.\Generated_Source\PSoC5/PWM_1.c **** 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_1.c ****     *
 551:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_1.c ****     *
 554:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_1.c ****     {
 558:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 14


 559:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_1.c ****     }
 564:.\Generated_Source\PSoC5/PWM_1.c **** 
 565:.\Generated_Source\PSoC5/PWM_1.c **** 
 566:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *
 570:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_1.c ****     *
 580:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_1.c ****     *
 583:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_1.c ****     {
 587:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_1.c ****     }
 593:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_1.c **** 
 595:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_1.c **** 
 597:.\Generated_Source\PSoC5/PWM_1.c **** 
 598:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_1.c ****     *
 608:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_1.c ****     *
 611:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_1.c ****     {
 614:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 15


 616:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_1.c **** 
 622:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_1.c **** 
 630:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_1.c ****     }
 632:.\Generated_Source\PSoC5/PWM_1.c **** 
 633:.\Generated_Source\PSoC5/PWM_1.c **** 
 634:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_1.c ****     *
 644:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_1.c ****     *
 647:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_1.c ****     {
 650:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_1.c **** 
 655:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_1.c ****     }
 664:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_1.c **** 
 666:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_1.c **** 
 668:.\Generated_Source\PSoC5/PWM_1.c **** 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 16


 673:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_1.c ****     *
 680:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_1.c ****     *
 683:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_1.c ****     {
 184              		.loc 1 685 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 686:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 190              		.loc 1 686 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 81640040 		.word	1073767553
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 201              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 202              		.align	2
 203              		.global	PWM_1_ReadStatusRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	PWM_1_ReadStatusRegister, %function
 207              	PWM_1_ReadStatusRegister:
 208              	.LFB10:
 687:.\Generated_Source\PSoC5/PWM_1.c ****     }
 688:.\Generated_Source\PSoC5/PWM_1.c **** 
 689:.\Generated_Source\PSoC5/PWM_1.c **** 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_1.c ****     *
 697:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *
 700:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 17


 705:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_1.c ****     *
 710:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_1.c ****     {
 209              		.loc 1 712 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 214              		.loc 1 713 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/PWM_1.c ****     }
 217              		.loc 1 714 0
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 61640040 		.word	1073767521
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 226              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 227              		.align	2
 228              		.global	PWM_1_ReadControlRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	PWM_1_ReadControlRegister, %function
 232              	PWM_1_ReadControlRegister:
 233              	.LFB11:
 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC5/PWM_1.c **** 
 721:.\Generated_Source\PSoC5/PWM_1.c **** 
 722:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_1.c ****     *
 726:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_1.c ****     *
 736:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 18


 737:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_1.c ****     {
 234              		.loc 1 738 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_1.c **** 
 741:.\Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 239              		.loc 1 741 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242              	.LVL4:
 742:.\Generated_Source\PSoC5/PWM_1.c ****         return (result);
 743:.\Generated_Source\PSoC5/PWM_1.c ****     }
 243              		.loc 1 743 0
 244 0004 7047     		bx	lr
 245              	.L27:
 246 0006 00BF     		.align	2
 247              	.L26:
 248 0008 71640040 		.word	1073767537
 249              		.cfi_endproc
 250              	.LFE11:
 251              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 252              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 253              		.align	2
 254              		.global	PWM_1_WriteControlRegister
 255              		.thumb
 256              		.thumb_func
 257              		.type	PWM_1_WriteControlRegister, %function
 258              	PWM_1_WriteControlRegister:
 259              	.LFB12:
 744:.\Generated_Source\PSoC5/PWM_1.c **** 
 745:.\Generated_Source\PSoC5/PWM_1.c **** 
 746:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *
 750:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *
 754:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_1.c ****     *
 764:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_1.c ****     {
 260              		.loc 1 766 0
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 19


 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL5:
 767:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 266              		.loc 1 767 0
 267 0000 014B     		ldr	r3, .L29
 268 0002 1870     		strb	r0, [r3]
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 71640040 		.word	1073767537
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 277              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 278              		.align	2
 279              		.global	PWM_1_ReadCapture
 280              		.thumb
 281              		.thumb_func
 282              		.type	PWM_1_ReadCapture, %function
 283              	PWM_1_ReadCapture:
 284              	.LFB13:
 768:.\Generated_Source\PSoC5/PWM_1.c ****     }
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_1.c **** 
 775:.\Generated_Source\PSoC5/PWM_1.c **** 
 776:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_1.c ****     *
 789:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_1.c ****     {
 285              		.loc 1 791 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 290              		.loc 1 792 0
 291 0000 014B     		ldr	r3, .L32
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 20


 292 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/PWM_1.c ****     }
 293              		.loc 1 793 0
 294 0004 80B2     		uxth	r0, r0
 295 0006 7047     		bx	lr
 296              	.L33:
 297              		.align	2
 298              	.L32:
 299 0008 A0680040 		.word	1073768608
 300              		.cfi_endproc
 301              	.LFE13:
 302              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 303              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 304              		.align	2
 305              		.global	PWM_1_ClearFIFO
 306              		.thumb
 307              		.thumb_func
 308              		.type	PWM_1_ClearFIFO, %function
 309              	PWM_1_ClearFIFO:
 310              	.LFB6:
 454:.\Generated_Source\PSoC5/PWM_1.c ****         {
 311              		.loc 1 454 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 08B5     		push	{r3, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 319              		.loc 1 455 0
 320 0002 01E0     		b	.L35
 321              	.L36:
 457:.\Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 322              		.loc 1 457 0
 323 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 324              	.LVL6:
 325              	.L35:
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 326              		.loc 1 455 0 discriminator 1
 327 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 328              	.LVL7:
 329 000c 10F0100F 		tst	r0, #16
 330 0010 F8D1     		bne	.L36
 459:.\Generated_Source\PSoC5/PWM_1.c ****         }
 331              		.loc 1 459 0
 332 0012 08BD     		pop	{r3, pc}
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 336              		.section	.text.PWM_1_Init,"ax",%progbits
 337              		.align	2
 338              		.global	PWM_1_Init
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_1_Init, %function
 342              	PWM_1_Init:
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 21


 343              	.LFB1:
  85:.\Generated_Source\PSoC5/PWM_1.c **** {
 344              		.loc 1 85 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 352              		.loc 1 117 0
 353 0002 154B     		ldr	r3, .L38
 354 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 355 0006 02F0C002 		and	r2, r2, #192
 356              	.LVL8:
 119:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 357              		.loc 1 119 0
 358 000a 42F00902 		orr	r2, r2, #9
 359              	.LVL9:
 360 000e 1A70     		strb	r2, [r3]
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 361              		.loc 1 129 0
 362 0010 1F33     		adds	r3, r3, #31
 363 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 364 0014 42F00102 		orr	r2, r2, #1
 365 0018 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 366              		.loc 1 130 0
 367 001a 104C     		ldr	r4, .L38+4
 368 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 369 001e 43F00103 		orr	r3, r3, #1
 370 0022 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 371              		.loc 1 133 0
 372 0024 4FF6FF70 		movw	r0, #65535
 373 0028 FFF7FEFF 		bl	PWM_1_WriteCounter
 374              	.LVL10:
 136:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 375              		.loc 1 136 0
 376 002c 4FF6FF70 		movw	r0, #65535
 377 0030 FFF7FEFF 		bl	PWM_1_WritePeriod
 378              	.LVL11:
 139:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 379              		.loc 1 139 0
 380 0034 7F20     		movs	r0, #127
 381 0036 FFF7FEFF 		bl	PWM_1_WriteCompare
 382              	.LVL12:
 154:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 383              		.loc 1 154 0
 384 003a 0020     		movs	r0, #0
 385 003c FFF7FEFF 		bl	PWM_1_SetInterruptMode
 386              	.LVL13:
 167:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 387              		.loc 1 167 0
 388 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL14:
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 22


 169:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 390              		.loc 1 169 0
 391 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 392 0046 43F01003 		orr	r3, r3, #16
 393 004a 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 394              		.loc 1 172 0
 395 004c FFF7FEFF 		bl	CyExitCriticalSection
 396              	.LVL15:
 176:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 397              		.loc 1 176 0
 398 0050 FFF7FEFF 		bl	PWM_1_ClearFIFO
 399              	.LVL16:
 400 0054 10BD     		pop	{r4, pc}
 401              	.L39:
 402 0056 00BF     		.align	2
 403              	.L38:
 404 0058 71640040 		.word	1073767537
 405 005c 91640040 		.word	1073767569
 406              		.cfi_endproc
 407              	.LFE1:
 408              		.size	PWM_1_Init, .-PWM_1_Init
 409              		.section	.text.PWM_1_Start,"ax",%progbits
 410              		.align	2
 411              		.global	PWM_1_Start
 412              		.thumb
 413              		.thumb_func
 414              		.type	PWM_1_Start, %function
 415              	PWM_1_Start:
 416              	.LFB0:
  56:.\Generated_Source\PSoC5/PWM_1.c **** {
 417              		.loc 1 56 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 08B5     		push	{r3, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
 425              		.loc 1 58 0
 426 0002 054B     		ldr	r3, .L42
 427 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 0006 23B9     		cbnz	r3, .L41
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
 429              		.loc 1 60 0
 430 0008 FFF7FEFF 		bl	PWM_1_Init
 431              	.LVL17:
  61:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
 432              		.loc 1 61 0
 433 000c 0122     		movs	r2, #1
 434 000e 024B     		ldr	r3, .L42
 435 0010 1A70     		strb	r2, [r3]
 436              	.L41:
  63:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
 437              		.loc 1 63 0
 438 0012 FFF7FEFF 		bl	PWM_1_Enable
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 23


 439              	.LVL18:
 440 0016 08BD     		pop	{r3, pc}
 441              	.L43:
 442              		.align	2
 443              	.L42:
 444 0018 00000000 		.word	.LANCHOR0
 445              		.cfi_endproc
 446              	.LFE0:
 447              		.size	PWM_1_Start, .-PWM_1_Start
 448              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 449              		.align	2
 450              		.global	PWM_1_ReadCompare
 451              		.thumb
 452              		.thumb_func
 453              		.type	PWM_1_ReadCompare, %function
 454              	PWM_1_ReadCompare:
 455              	.LFB14:
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_1.c **** 
 800:.\Generated_Source\PSoC5/PWM_1.c **** 
 801:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *
 805:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
 812:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_1.c ****     *
 815:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_1.c ****     {
 456              		.loc 1 817 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 461              		.loc 1 821 0
 462 0000 014B     		ldr	r3, .L45
 463 0002 1888     		ldrh	r0, [r3]
 822:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_1.c ****     }
 464              		.loc 1 823 0
 465 0004 80B2     		uxth	r0, r0
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 24


 466 0006 7047     		bx	lr
 467              	.L46:
 468              		.align	2
 469              	.L45:
 470 0008 40680040 		.word	1073768512
 471              		.cfi_endproc
 472              	.LFE14:
 473              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 474              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 475              		.align	2
 476              		.global	PWM_1_ReadPeriod
 477              		.thumb
 478              		.thumb_func
 479              		.type	PWM_1_ReadPeriod, %function
 480              	PWM_1_ReadPeriod:
 481              	.LFB15:
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c **** #else
 826:.\Generated_Source\PSoC5/PWM_1.c **** 
 827:.\Generated_Source\PSoC5/PWM_1.c **** 
 828:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_1.c ****     *
 841:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_1.c ****     {
 844:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/PWM_1.c ****     }
 846:.\Generated_Source\PSoC5/PWM_1.c **** 
 847:.\Generated_Source\PSoC5/PWM_1.c **** 
 848:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_1.c ****     *
 861:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_1.c ****     {
 864:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 25


 865:.\Generated_Source\PSoC5/PWM_1.c ****     }
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_1.c **** 
 869:.\Generated_Source\PSoC5/PWM_1.c **** 
 870:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_1.c **** *
 883:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_1.c **** {
 482              		.loc 1 885 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 487              		.loc 1 889 0
 488 0000 014B     		ldr	r3, .L48
 489 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_1.c **** }
 490              		.loc 1 891 0
 491 0004 80B2     		uxth	r0, r0
 492 0006 7047     		bx	lr
 493              	.L49:
 494              		.align	2
 495              	.L48:
 496 0008 80680040 		.word	1073768576
 497              		.cfi_endproc
 498              	.LFE15:
 499              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 500              		.global	PWM_1_initVar
 501              		.bss
 502              		.set	.LANCHOR0,. + 0
 503              		.type	PWM_1_initVar, %object
 504              		.size	PWM_1_initVar, 1
 505              	PWM_1_initVar:
 506 0000 00       		.space	1
 507              		.text
 508              	.Letext0:
 509              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 510              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 511              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 26


 512              	.Ldebug_info0:
 513 0000 46030000 		.4byte	0x346
 514 0004 0400     		.2byte	0x4
 515 0006 00000000 		.4byte	.Ldebug_abbrev0
 516 000a 04       		.byte	0x4
 517 000b 01       		.uleb128 0x1
 518 000c 4B020000 		.4byte	.LASF40
 519 0010 01       		.byte	0x1
 520 0011 6B000000 		.4byte	.LASF41
 521 0015 D0010000 		.4byte	.LASF42
 522 0019 00000000 		.4byte	.Ldebug_ranges0+0
 523 001d 00000000 		.4byte	0
 524 0021 00000000 		.4byte	.Ldebug_line0
 525 0025 02       		.uleb128 0x2
 526 0026 01       		.byte	0x1
 527 0027 06       		.byte	0x6
 528 0028 5B030000 		.4byte	.LASF0
 529 002c 02       		.uleb128 0x2
 530 002d 01       		.byte	0x1
 531 002e 08       		.byte	0x8
 532 002f CA000000 		.4byte	.LASF1
 533 0033 02       		.uleb128 0x2
 534 0034 02       		.byte	0x2
 535 0035 05       		.byte	0x5
 536 0036 61010000 		.4byte	.LASF2
 537 003a 02       		.uleb128 0x2
 538 003b 02       		.byte	0x2
 539 003c 07       		.byte	0x7
 540 003d 58000000 		.4byte	.LASF3
 541 0041 02       		.uleb128 0x2
 542 0042 04       		.byte	0x4
 543 0043 05       		.byte	0x5
 544 0044 4D030000 		.4byte	.LASF4
 545 0048 02       		.uleb128 0x2
 546 0049 04       		.byte	0x4
 547 004a 07       		.byte	0x7
 548 004b EE000000 		.4byte	.LASF5
 549 004f 02       		.uleb128 0x2
 550 0050 08       		.byte	0x8
 551 0051 05       		.byte	0x5
 552 0052 E3020000 		.4byte	.LASF6
 553 0056 02       		.uleb128 0x2
 554 0057 08       		.byte	0x8
 555 0058 07       		.byte	0x7
 556 0059 B3000000 		.4byte	.LASF7
 557 005d 03       		.uleb128 0x3
 558 005e 04       		.byte	0x4
 559 005f 05       		.byte	0x5
 560 0060 696E7400 		.ascii	"int\000"
 561 0064 02       		.uleb128 0x2
 562 0065 04       		.byte	0x4
 563 0066 07       		.byte	0x7
 564 0067 A6010000 		.4byte	.LASF8
 565 006b 04       		.uleb128 0x4
 566 006c 00010000 		.4byte	.LASF9
 567 0070 02       		.byte	0x2
 568 0071 B4       		.byte	0xb4
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 27


 569 0072 2C000000 		.4byte	0x2c
 570 0076 04       		.uleb128 0x4
 571 0077 7D010000 		.4byte	.LASF10
 572 007b 02       		.byte	0x2
 573 007c B5       		.byte	0xb5
 574 007d 3A000000 		.4byte	0x3a
 575 0081 02       		.uleb128 0x2
 576 0082 04       		.byte	0x4
 577 0083 04       		.byte	0x4
 578 0084 A5000000 		.4byte	.LASF11
 579 0088 02       		.uleb128 0x2
 580 0089 08       		.byte	0x8
 581 008a 04       		.byte	0x4
 582 008b 37010000 		.4byte	.LASF12
 583 008f 02       		.uleb128 0x2
 584 0090 01       		.byte	0x1
 585 0091 08       		.byte	0x8
 586 0092 56030000 		.4byte	.LASF13
 587 0096 05       		.uleb128 0x5
 588 0097 D8000000 		.4byte	.LASF14
 589 009b 02       		.byte	0x2
 590 009c 5E01     		.2byte	0x15e
 591 009e A2000000 		.4byte	0xa2
 592 00a2 06       		.uleb128 0x6
 593 00a3 6B000000 		.4byte	0x6b
 594 00a7 05       		.uleb128 0x5
 595 00a8 00000000 		.4byte	.LASF15
 596 00ac 02       		.byte	0x2
 597 00ad 5F01     		.2byte	0x15f
 598 00af B3000000 		.4byte	0xb3
 599 00b3 06       		.uleb128 0x6
 600 00b4 76000000 		.4byte	0x76
 601 00b8 02       		.uleb128 0x2
 602 00b9 04       		.byte	0x4
 603 00ba 07       		.byte	0x7
 604 00bb C7020000 		.4byte	.LASF16
 605 00bf 07       		.uleb128 0x7
 606 00c0 06000000 		.4byte	.LASF17
 607 00c4 01       		.byte	0x1
 608 00c5 C7       		.byte	0xc7
 609 00c6 00000000 		.4byte	.LFB2
 610 00ca 10000000 		.4byte	.LFE2-.LFB2
 611 00ce 01       		.uleb128 0x1
 612 00cf 9C       		.byte	0x9c
 613 00d0 07       		.uleb128 0x7
 614 00d1 42030000 		.4byte	.LASF18
 615 00d5 01       		.byte	0x1
 616 00d6 E9       		.byte	0xe9
 617 00d7 00000000 		.4byte	.LFB3
 618 00db 10000000 		.4byte	.LFE3-.LFB3
 619 00df 01       		.uleb128 0x1
 620 00e0 9C       		.byte	0x9c
 621 00e1 08       		.uleb128 0x8
 622 00e2 2E000000 		.4byte	.LASF19
 623 00e6 01       		.byte	0x1
 624 00e7 9301     		.2byte	0x193
 625 00e9 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 28


 626 00ed 0C000000 		.4byte	.LFE4-.LFB4
 627 00f1 01       		.uleb128 0x1
 628 00f2 9C       		.byte	0x9c
 629 00f3 06010000 		.4byte	0x106
 630 00f7 09       		.uleb128 0x9
 631 00f8 AB000000 		.4byte	.LASF21
 632 00fc 01       		.byte	0x1
 633 00fd 9301     		.2byte	0x193
 634 00ff 76000000 		.4byte	0x76
 635 0103 01       		.uleb128 0x1
 636 0104 50       		.byte	0x50
 637 0105 00       		.byte	0
 638 0106 0A       		.uleb128 0xa
 639 0107 2B030000 		.4byte	.LASF27
 640 010b 01       		.byte	0x1
 641 010c A901     		.2byte	0x1a9
 642 010e 76000000 		.4byte	0x76
 643 0112 00000000 		.4byte	.LFB5
 644 0116 14000000 		.4byte	.LFE5-.LFB5
 645 011a 01       		.uleb128 0x1
 646 011b 9C       		.byte	0x9c
 647 011c 08       		.uleb128 0x8
 648 011d 19030000 		.4byte	.LASF20
 649 0121 01       		.byte	0x1
 650 0122 E201     		.2byte	0x1e2
 651 0124 00000000 		.4byte	.LFB7
 652 0128 0C000000 		.4byte	.LFE7-.LFB7
 653 012c 01       		.uleb128 0x1
 654 012d 9C       		.byte	0x9c
 655 012e 41010000 		.4byte	0x141
 656 0132 09       		.uleb128 0x9
 657 0133 41000000 		.4byte	.LASF22
 658 0137 01       		.byte	0x1
 659 0138 E201     		.2byte	0x1e2
 660 013a 76000000 		.4byte	0x76
 661 013e 01       		.uleb128 0x1
 662 013f 50       		.byte	0x50
 663 0140 00       		.byte	0
 664 0141 08       		.uleb128 0x8
 665 0142 D0020000 		.4byte	.LASF23
 666 0146 01       		.byte	0x1
 667 0147 0402     		.2byte	0x204
 668 0149 00000000 		.4byte	.LFB8
 669 014d 0C000000 		.4byte	.LFE8-.LFB8
 670 0151 01       		.uleb128 0x1
 671 0152 9C       		.byte	0x9c
 672 0153 66010000 		.4byte	0x166
 673 0157 09       		.uleb128 0x9
 674 0158 67030000 		.4byte	.LASF24
 675 015c 01       		.byte	0x1
 676 015d 0402     		.2byte	0x204
 677 015f 76000000 		.4byte	0x76
 678 0163 01       		.uleb128 0x1
 679 0164 50       		.byte	0x50
 680 0165 00       		.byte	0
 681 0166 08       		.uleb128 0x8
 682 0167 0E010000 		.4byte	.LASF25
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 29


 683 016b 01       		.byte	0x1
 684 016c AC02     		.2byte	0x2ac
 685 016e 00000000 		.4byte	.LFB9
 686 0172 0C000000 		.4byte	.LFE9-.LFB9
 687 0176 01       		.uleb128 0x1
 688 0177 9C       		.byte	0x9c
 689 0178 8B010000 		.4byte	0x18b
 690 017c 09       		.uleb128 0x9
 691 017d 0B030000 		.4byte	.LASF26
 692 0181 01       		.byte	0x1
 693 0182 AC02     		.2byte	0x2ac
 694 0184 6B000000 		.4byte	0x6b
 695 0188 01       		.uleb128 0x1
 696 0189 50       		.byte	0x50
 697 018a 00       		.byte	0
 698 018b 0A       		.uleb128 0xa
 699 018c 8C000000 		.4byte	.LASF28
 700 0190 01       		.byte	0x1
 701 0191 C702     		.2byte	0x2c7
 702 0193 6B000000 		.4byte	0x6b
 703 0197 00000000 		.4byte	.LFB10
 704 019b 0C000000 		.4byte	.LFE10-.LFB10
 705 019f 01       		.uleb128 0x1
 706 01a0 9C       		.byte	0x9c
 707 01a1 0B       		.uleb128 0xb
 708 01a2 F1020000 		.4byte	.LASF43
 709 01a6 01       		.byte	0x1
 710 01a7 E102     		.2byte	0x2e1
 711 01a9 6B000000 		.4byte	0x6b
 712 01ad 00000000 		.4byte	.LFB11
 713 01b1 0C000000 		.4byte	.LFE11-.LFB11
 714 01b5 01       		.uleb128 0x1
 715 01b6 9C       		.byte	0x9c
 716 01b7 CA010000 		.4byte	0x1ca
 717 01bb 0C       		.uleb128 0xc
 718 01bc C9010000 		.4byte	.LASF34
 719 01c0 01       		.byte	0x1
 720 01c1 E302     		.2byte	0x2e3
 721 01c3 6B000000 		.4byte	0x6b
 722 01c7 01       		.uleb128 0x1
 723 01c8 50       		.byte	0x50
 724 01c9 00       		.byte	0
 725 01ca 08       		.uleb128 0x8
 726 01cb 13000000 		.4byte	.LASF29
 727 01cf 01       		.byte	0x1
 728 01d0 FD02     		.2byte	0x2fd
 729 01d2 00000000 		.4byte	.LFB12
 730 01d6 0C000000 		.4byte	.LFE12-.LFB12
 731 01da 01       		.uleb128 0x1
 732 01db 9C       		.byte	0x9c
 733 01dc EF010000 		.4byte	0x1ef
 734 01e0 09       		.uleb128 0x9
 735 01e1 06010000 		.4byte	.LASF30
 736 01e5 01       		.byte	0x1
 737 01e6 FD02     		.2byte	0x2fd
 738 01e8 6B000000 		.4byte	0x6b
 739 01ec 01       		.uleb128 0x1
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 30


 740 01ed 50       		.byte	0x50
 741 01ee 00       		.byte	0
 742 01ef 0A       		.uleb128 0xa
 743 01f0 6B010000 		.4byte	.LASF31
 744 01f4 01       		.byte	0x1
 745 01f5 1603     		.2byte	0x316
 746 01f7 76000000 		.4byte	0x76
 747 01fb 00000000 		.4byte	.LFB13
 748 01ff 0C000000 		.4byte	.LFE13-.LFB13
 749 0203 01       		.uleb128 0x1
 750 0204 9C       		.byte	0x9c
 751 0205 08       		.uleb128 0x8
 752 0206 48000000 		.4byte	.LASF32
 753 020a 01       		.byte	0x1
 754 020b C501     		.2byte	0x1c5
 755 020d 00000000 		.4byte	.LFB6
 756 0211 14000000 		.4byte	.LFE6-.LFB6
 757 0215 01       		.uleb128 0x1
 758 0216 9C       		.byte	0x9c
 759 0217 2E020000 		.4byte	0x22e
 760 021b 0D       		.uleb128 0xd
 761 021c 08000000 		.4byte	.LVL6
 762 0220 EF010000 		.4byte	0x1ef
 763 0224 0D       		.uleb128 0xd
 764 0225 0C000000 		.4byte	.LVL7
 765 0229 8B010000 		.4byte	0x18b
 766 022d 00       		.byte	0
 767 022e 0E       		.uleb128 0xe
 768 022f 84010000 		.4byte	.LASF33
 769 0233 01       		.byte	0x1
 770 0234 54       		.byte	0x54
 771 0235 00000000 		.4byte	.LFB1
 772 0239 60000000 		.4byte	.LFE1-.LFB1
 773 023d 01       		.uleb128 0x1
 774 023e 9C       		.byte	0x9c
 775 023f CC020000 		.4byte	0x2cc
 776 0243 0F       		.uleb128 0xf
 777 0244 3D030000 		.4byte	.LASF35
 778 0248 01       		.byte	0x1
 779 0249 57       		.byte	0x57
 780 024a 6B000000 		.4byte	0x6b
 781 024e 00000000 		.4byte	.LLST0
 782 0252 0F       		.uleb128 0xf
 783 0253 3E010000 		.4byte	.LASF36
 784 0257 01       		.byte	0x1
 785 0258 5D       		.byte	0x5d
 786 0259 6B000000 		.4byte	0x6b
 787 025d 13000000 		.4byte	.LLST1
 788 0261 10       		.uleb128 0x10
 789 0262 2C000000 		.4byte	.LVL10
 790 0266 E1000000 		.4byte	0xe1
 791 026a 75020000 		.4byte	0x275
 792 026e 11       		.uleb128 0x11
 793 026f 01       		.uleb128 0x1
 794 0270 50       		.byte	0x50
 795 0271 02       		.uleb128 0x2
 796 0272 09       		.byte	0x9
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 31


 797 0273 FF       		.byte	0xff
 798 0274 00       		.byte	0
 799 0275 10       		.uleb128 0x10
 800 0276 34000000 		.4byte	.LVL11
 801 027a 1C010000 		.4byte	0x11c
 802 027e 89020000 		.4byte	0x289
 803 0282 11       		.uleb128 0x11
 804 0283 01       		.uleb128 0x1
 805 0284 50       		.byte	0x50
 806 0285 02       		.uleb128 0x2
 807 0286 09       		.byte	0x9
 808 0287 FF       		.byte	0xff
 809 0288 00       		.byte	0
 810 0289 10       		.uleb128 0x10
 811 028a 3A000000 		.4byte	.LVL12
 812 028e 41010000 		.4byte	0x141
 813 0292 9D020000 		.4byte	0x29d
 814 0296 11       		.uleb128 0x11
 815 0297 01       		.uleb128 0x1
 816 0298 50       		.byte	0x50
 817 0299 02       		.uleb128 0x2
 818 029a 08       		.byte	0x8
 819 029b 7F       		.byte	0x7f
 820 029c 00       		.byte	0
 821 029d 10       		.uleb128 0x10
 822 029e 40000000 		.4byte	.LVL13
 823 02a2 66010000 		.4byte	0x166
 824 02a6 B0020000 		.4byte	0x2b0
 825 02aa 11       		.uleb128 0x11
 826 02ab 01       		.uleb128 0x1
 827 02ac 50       		.byte	0x50
 828 02ad 01       		.uleb128 0x1
 829 02ae 30       		.byte	0x30
 830 02af 00       		.byte	0
 831 02b0 0D       		.uleb128 0xd
 832 02b1 44000000 		.4byte	.LVL14
 833 02b5 31030000 		.4byte	0x331
 834 02b9 0D       		.uleb128 0xd
 835 02ba 50000000 		.4byte	.LVL15
 836 02be 3C030000 		.4byte	0x33c
 837 02c2 0D       		.uleb128 0xd
 838 02c3 54000000 		.4byte	.LVL16
 839 02c7 05020000 		.4byte	0x205
 840 02cb 00       		.byte	0
 841 02cc 0E       		.uleb128 0xe
 842 02cd 6F030000 		.4byte	.LASF37
 843 02d1 01       		.byte	0x1
 844 02d2 37       		.byte	0x37
 845 02d3 00000000 		.4byte	.LFB0
 846 02d7 1C000000 		.4byte	.LFE0-.LFB0
 847 02db 01       		.uleb128 0x1
 848 02dc 9C       		.byte	0x9c
 849 02dd F4020000 		.4byte	0x2f4
 850 02e1 0D       		.uleb128 0xd
 851 02e2 0C000000 		.4byte	.LVL17
 852 02e6 2E020000 		.4byte	0x22e
 853 02ea 0D       		.uleb128 0xd
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 32


 854 02eb 16000000 		.4byte	.LVL18
 855 02ef BF000000 		.4byte	0xbf
 856 02f3 00       		.byte	0
 857 02f4 0A       		.uleb128 0xa
 858 02f5 25010000 		.4byte	.LASF38
 859 02f9 01       		.byte	0x1
 860 02fa 3003     		.2byte	0x330
 861 02fc 76000000 		.4byte	0x76
 862 0300 00000000 		.4byte	.LFB14
 863 0304 0C000000 		.4byte	.LFE14-.LFB14
 864 0308 01       		.uleb128 0x1
 865 0309 9C       		.byte	0x9c
 866 030a 0A       		.uleb128 0xa
 867 030b DD000000 		.4byte	.LASF39
 868 030f 01       		.byte	0x1
 869 0310 7403     		.2byte	0x374
 870 0312 76000000 		.4byte	0x76
 871 0316 00000000 		.4byte	.LFB15
 872 031a 0C000000 		.4byte	.LFE15-.LFB15
 873 031e 01       		.uleb128 0x1
 874 031f 9C       		.byte	0x9c
 875 0320 12       		.uleb128 0x12
 876 0321 53010000 		.4byte	.LASF44
 877 0325 01       		.byte	0x1
 878 0326 20       		.byte	0x20
 879 0327 6B000000 		.4byte	0x6b
 880 032b 05       		.uleb128 0x5
 881 032c 03       		.byte	0x3
 882 032d 00000000 		.4byte	PWM_1_initVar
 883 0331 13       		.uleb128 0x13
 884 0332 8F010000 		.4byte	.LASF45
 885 0336 03       		.byte	0x3
 886 0337 7E       		.byte	0x7e
 887 0338 6B000000 		.4byte	0x6b
 888 033c 14       		.uleb128 0x14
 889 033d B3010000 		.4byte	.LASF46
 890 0341 03       		.byte	0x3
 891 0342 7F       		.byte	0x7f
 892 0343 15       		.uleb128 0x15
 893 0344 6B000000 		.4byte	0x6b
 894 0348 00       		.byte	0
 895 0349 00       		.byte	0
 896              		.section	.debug_abbrev,"",%progbits
 897              	.Ldebug_abbrev0:
 898 0000 01       		.uleb128 0x1
 899 0001 11       		.uleb128 0x11
 900 0002 01       		.byte	0x1
 901 0003 25       		.uleb128 0x25
 902 0004 0E       		.uleb128 0xe
 903 0005 13       		.uleb128 0x13
 904 0006 0B       		.uleb128 0xb
 905 0007 03       		.uleb128 0x3
 906 0008 0E       		.uleb128 0xe
 907 0009 1B       		.uleb128 0x1b
 908 000a 0E       		.uleb128 0xe
 909 000b 55       		.uleb128 0x55
 910 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 33


 911 000d 11       		.uleb128 0x11
 912 000e 01       		.uleb128 0x1
 913 000f 10       		.uleb128 0x10
 914 0010 17       		.uleb128 0x17
 915 0011 00       		.byte	0
 916 0012 00       		.byte	0
 917 0013 02       		.uleb128 0x2
 918 0014 24       		.uleb128 0x24
 919 0015 00       		.byte	0
 920 0016 0B       		.uleb128 0xb
 921 0017 0B       		.uleb128 0xb
 922 0018 3E       		.uleb128 0x3e
 923 0019 0B       		.uleb128 0xb
 924 001a 03       		.uleb128 0x3
 925 001b 0E       		.uleb128 0xe
 926 001c 00       		.byte	0
 927 001d 00       		.byte	0
 928 001e 03       		.uleb128 0x3
 929 001f 24       		.uleb128 0x24
 930 0020 00       		.byte	0
 931 0021 0B       		.uleb128 0xb
 932 0022 0B       		.uleb128 0xb
 933 0023 3E       		.uleb128 0x3e
 934 0024 0B       		.uleb128 0xb
 935 0025 03       		.uleb128 0x3
 936 0026 08       		.uleb128 0x8
 937 0027 00       		.byte	0
 938 0028 00       		.byte	0
 939 0029 04       		.uleb128 0x4
 940 002a 16       		.uleb128 0x16
 941 002b 00       		.byte	0
 942 002c 03       		.uleb128 0x3
 943 002d 0E       		.uleb128 0xe
 944 002e 3A       		.uleb128 0x3a
 945 002f 0B       		.uleb128 0xb
 946 0030 3B       		.uleb128 0x3b
 947 0031 0B       		.uleb128 0xb
 948 0032 49       		.uleb128 0x49
 949 0033 13       		.uleb128 0x13
 950 0034 00       		.byte	0
 951 0035 00       		.byte	0
 952 0036 05       		.uleb128 0x5
 953 0037 16       		.uleb128 0x16
 954 0038 00       		.byte	0
 955 0039 03       		.uleb128 0x3
 956 003a 0E       		.uleb128 0xe
 957 003b 3A       		.uleb128 0x3a
 958 003c 0B       		.uleb128 0xb
 959 003d 3B       		.uleb128 0x3b
 960 003e 05       		.uleb128 0x5
 961 003f 49       		.uleb128 0x49
 962 0040 13       		.uleb128 0x13
 963 0041 00       		.byte	0
 964 0042 00       		.byte	0
 965 0043 06       		.uleb128 0x6
 966 0044 35       		.uleb128 0x35
 967 0045 00       		.byte	0
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 34


 968 0046 49       		.uleb128 0x49
 969 0047 13       		.uleb128 0x13
 970 0048 00       		.byte	0
 971 0049 00       		.byte	0
 972 004a 07       		.uleb128 0x7
 973 004b 2E       		.uleb128 0x2e
 974 004c 00       		.byte	0
 975 004d 3F       		.uleb128 0x3f
 976 004e 19       		.uleb128 0x19
 977 004f 03       		.uleb128 0x3
 978 0050 0E       		.uleb128 0xe
 979 0051 3A       		.uleb128 0x3a
 980 0052 0B       		.uleb128 0xb
 981 0053 3B       		.uleb128 0x3b
 982 0054 0B       		.uleb128 0xb
 983 0055 27       		.uleb128 0x27
 984 0056 19       		.uleb128 0x19
 985 0057 11       		.uleb128 0x11
 986 0058 01       		.uleb128 0x1
 987 0059 12       		.uleb128 0x12
 988 005a 06       		.uleb128 0x6
 989 005b 40       		.uleb128 0x40
 990 005c 18       		.uleb128 0x18
 991 005d 9742     		.uleb128 0x2117
 992 005f 19       		.uleb128 0x19
 993 0060 00       		.byte	0
 994 0061 00       		.byte	0
 995 0062 08       		.uleb128 0x8
 996 0063 2E       		.uleb128 0x2e
 997 0064 01       		.byte	0x1
 998 0065 3F       		.uleb128 0x3f
 999 0066 19       		.uleb128 0x19
 1000 0067 03       		.uleb128 0x3
 1001 0068 0E       		.uleb128 0xe
 1002 0069 3A       		.uleb128 0x3a
 1003 006a 0B       		.uleb128 0xb
 1004 006b 3B       		.uleb128 0x3b
 1005 006c 05       		.uleb128 0x5
 1006 006d 27       		.uleb128 0x27
 1007 006e 19       		.uleb128 0x19
 1008 006f 11       		.uleb128 0x11
 1009 0070 01       		.uleb128 0x1
 1010 0071 12       		.uleb128 0x12
 1011 0072 06       		.uleb128 0x6
 1012 0073 40       		.uleb128 0x40
 1013 0074 18       		.uleb128 0x18
 1014 0075 9742     		.uleb128 0x2117
 1015 0077 19       		.uleb128 0x19
 1016 0078 01       		.uleb128 0x1
 1017 0079 13       		.uleb128 0x13
 1018 007a 00       		.byte	0
 1019 007b 00       		.byte	0
 1020 007c 09       		.uleb128 0x9
 1021 007d 05       		.uleb128 0x5
 1022 007e 00       		.byte	0
 1023 007f 03       		.uleb128 0x3
 1024 0080 0E       		.uleb128 0xe
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 35


 1025 0081 3A       		.uleb128 0x3a
 1026 0082 0B       		.uleb128 0xb
 1027 0083 3B       		.uleb128 0x3b
 1028 0084 05       		.uleb128 0x5
 1029 0085 49       		.uleb128 0x49
 1030 0086 13       		.uleb128 0x13
 1031 0087 02       		.uleb128 0x2
 1032 0088 18       		.uleb128 0x18
 1033 0089 00       		.byte	0
 1034 008a 00       		.byte	0
 1035 008b 0A       		.uleb128 0xa
 1036 008c 2E       		.uleb128 0x2e
 1037 008d 00       		.byte	0
 1038 008e 3F       		.uleb128 0x3f
 1039 008f 19       		.uleb128 0x19
 1040 0090 03       		.uleb128 0x3
 1041 0091 0E       		.uleb128 0xe
 1042 0092 3A       		.uleb128 0x3a
 1043 0093 0B       		.uleb128 0xb
 1044 0094 3B       		.uleb128 0x3b
 1045 0095 05       		.uleb128 0x5
 1046 0096 27       		.uleb128 0x27
 1047 0097 19       		.uleb128 0x19
 1048 0098 49       		.uleb128 0x49
 1049 0099 13       		.uleb128 0x13
 1050 009a 11       		.uleb128 0x11
 1051 009b 01       		.uleb128 0x1
 1052 009c 12       		.uleb128 0x12
 1053 009d 06       		.uleb128 0x6
 1054 009e 40       		.uleb128 0x40
 1055 009f 18       		.uleb128 0x18
 1056 00a0 9742     		.uleb128 0x2117
 1057 00a2 19       		.uleb128 0x19
 1058 00a3 00       		.byte	0
 1059 00a4 00       		.byte	0
 1060 00a5 0B       		.uleb128 0xb
 1061 00a6 2E       		.uleb128 0x2e
 1062 00a7 01       		.byte	0x1
 1063 00a8 3F       		.uleb128 0x3f
 1064 00a9 19       		.uleb128 0x19
 1065 00aa 03       		.uleb128 0x3
 1066 00ab 0E       		.uleb128 0xe
 1067 00ac 3A       		.uleb128 0x3a
 1068 00ad 0B       		.uleb128 0xb
 1069 00ae 3B       		.uleb128 0x3b
 1070 00af 05       		.uleb128 0x5
 1071 00b0 27       		.uleb128 0x27
 1072 00b1 19       		.uleb128 0x19
 1073 00b2 49       		.uleb128 0x49
 1074 00b3 13       		.uleb128 0x13
 1075 00b4 11       		.uleb128 0x11
 1076 00b5 01       		.uleb128 0x1
 1077 00b6 12       		.uleb128 0x12
 1078 00b7 06       		.uleb128 0x6
 1079 00b8 40       		.uleb128 0x40
 1080 00b9 18       		.uleb128 0x18
 1081 00ba 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 36


 1082 00bc 19       		.uleb128 0x19
 1083 00bd 01       		.uleb128 0x1
 1084 00be 13       		.uleb128 0x13
 1085 00bf 00       		.byte	0
 1086 00c0 00       		.byte	0
 1087 00c1 0C       		.uleb128 0xc
 1088 00c2 34       		.uleb128 0x34
 1089 00c3 00       		.byte	0
 1090 00c4 03       		.uleb128 0x3
 1091 00c5 0E       		.uleb128 0xe
 1092 00c6 3A       		.uleb128 0x3a
 1093 00c7 0B       		.uleb128 0xb
 1094 00c8 3B       		.uleb128 0x3b
 1095 00c9 05       		.uleb128 0x5
 1096 00ca 49       		.uleb128 0x49
 1097 00cb 13       		.uleb128 0x13
 1098 00cc 02       		.uleb128 0x2
 1099 00cd 18       		.uleb128 0x18
 1100 00ce 00       		.byte	0
 1101 00cf 00       		.byte	0
 1102 00d0 0D       		.uleb128 0xd
 1103 00d1 898201   		.uleb128 0x4109
 1104 00d4 00       		.byte	0
 1105 00d5 11       		.uleb128 0x11
 1106 00d6 01       		.uleb128 0x1
 1107 00d7 31       		.uleb128 0x31
 1108 00d8 13       		.uleb128 0x13
 1109 00d9 00       		.byte	0
 1110 00da 00       		.byte	0
 1111 00db 0E       		.uleb128 0xe
 1112 00dc 2E       		.uleb128 0x2e
 1113 00dd 01       		.byte	0x1
 1114 00de 3F       		.uleb128 0x3f
 1115 00df 19       		.uleb128 0x19
 1116 00e0 03       		.uleb128 0x3
 1117 00e1 0E       		.uleb128 0xe
 1118 00e2 3A       		.uleb128 0x3a
 1119 00e3 0B       		.uleb128 0xb
 1120 00e4 3B       		.uleb128 0x3b
 1121 00e5 0B       		.uleb128 0xb
 1122 00e6 27       		.uleb128 0x27
 1123 00e7 19       		.uleb128 0x19
 1124 00e8 11       		.uleb128 0x11
 1125 00e9 01       		.uleb128 0x1
 1126 00ea 12       		.uleb128 0x12
 1127 00eb 06       		.uleb128 0x6
 1128 00ec 40       		.uleb128 0x40
 1129 00ed 18       		.uleb128 0x18
 1130 00ee 9742     		.uleb128 0x2117
 1131 00f0 19       		.uleb128 0x19
 1132 00f1 01       		.uleb128 0x1
 1133 00f2 13       		.uleb128 0x13
 1134 00f3 00       		.byte	0
 1135 00f4 00       		.byte	0
 1136 00f5 0F       		.uleb128 0xf
 1137 00f6 34       		.uleb128 0x34
 1138 00f7 00       		.byte	0
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 37


 1139 00f8 03       		.uleb128 0x3
 1140 00f9 0E       		.uleb128 0xe
 1141 00fa 3A       		.uleb128 0x3a
 1142 00fb 0B       		.uleb128 0xb
 1143 00fc 3B       		.uleb128 0x3b
 1144 00fd 0B       		.uleb128 0xb
 1145 00fe 49       		.uleb128 0x49
 1146 00ff 13       		.uleb128 0x13
 1147 0100 02       		.uleb128 0x2
 1148 0101 17       		.uleb128 0x17
 1149 0102 00       		.byte	0
 1150 0103 00       		.byte	0
 1151 0104 10       		.uleb128 0x10
 1152 0105 898201   		.uleb128 0x4109
 1153 0108 01       		.byte	0x1
 1154 0109 11       		.uleb128 0x11
 1155 010a 01       		.uleb128 0x1
 1156 010b 31       		.uleb128 0x31
 1157 010c 13       		.uleb128 0x13
 1158 010d 01       		.uleb128 0x1
 1159 010e 13       		.uleb128 0x13
 1160 010f 00       		.byte	0
 1161 0110 00       		.byte	0
 1162 0111 11       		.uleb128 0x11
 1163 0112 8A8201   		.uleb128 0x410a
 1164 0115 00       		.byte	0
 1165 0116 02       		.uleb128 0x2
 1166 0117 18       		.uleb128 0x18
 1167 0118 9142     		.uleb128 0x2111
 1168 011a 18       		.uleb128 0x18
 1169 011b 00       		.byte	0
 1170 011c 00       		.byte	0
 1171 011d 12       		.uleb128 0x12
 1172 011e 34       		.uleb128 0x34
 1173 011f 00       		.byte	0
 1174 0120 03       		.uleb128 0x3
 1175 0121 0E       		.uleb128 0xe
 1176 0122 3A       		.uleb128 0x3a
 1177 0123 0B       		.uleb128 0xb
 1178 0124 3B       		.uleb128 0x3b
 1179 0125 0B       		.uleb128 0xb
 1180 0126 49       		.uleb128 0x49
 1181 0127 13       		.uleb128 0x13
 1182 0128 3F       		.uleb128 0x3f
 1183 0129 19       		.uleb128 0x19
 1184 012a 02       		.uleb128 0x2
 1185 012b 18       		.uleb128 0x18
 1186 012c 00       		.byte	0
 1187 012d 00       		.byte	0
 1188 012e 13       		.uleb128 0x13
 1189 012f 2E       		.uleb128 0x2e
 1190 0130 00       		.byte	0
 1191 0131 3F       		.uleb128 0x3f
 1192 0132 19       		.uleb128 0x19
 1193 0133 03       		.uleb128 0x3
 1194 0134 0E       		.uleb128 0xe
 1195 0135 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 38


 1196 0136 0B       		.uleb128 0xb
 1197 0137 3B       		.uleb128 0x3b
 1198 0138 0B       		.uleb128 0xb
 1199 0139 27       		.uleb128 0x27
 1200 013a 19       		.uleb128 0x19
 1201 013b 49       		.uleb128 0x49
 1202 013c 13       		.uleb128 0x13
 1203 013d 3C       		.uleb128 0x3c
 1204 013e 19       		.uleb128 0x19
 1205 013f 00       		.byte	0
 1206 0140 00       		.byte	0
 1207 0141 14       		.uleb128 0x14
 1208 0142 2E       		.uleb128 0x2e
 1209 0143 01       		.byte	0x1
 1210 0144 3F       		.uleb128 0x3f
 1211 0145 19       		.uleb128 0x19
 1212 0146 03       		.uleb128 0x3
 1213 0147 0E       		.uleb128 0xe
 1214 0148 3A       		.uleb128 0x3a
 1215 0149 0B       		.uleb128 0xb
 1216 014a 3B       		.uleb128 0x3b
 1217 014b 0B       		.uleb128 0xb
 1218 014c 27       		.uleb128 0x27
 1219 014d 19       		.uleb128 0x19
 1220 014e 3C       		.uleb128 0x3c
 1221 014f 19       		.uleb128 0x19
 1222 0150 00       		.byte	0
 1223 0151 00       		.byte	0
 1224 0152 15       		.uleb128 0x15
 1225 0153 05       		.uleb128 0x5
 1226 0154 00       		.byte	0
 1227 0155 49       		.uleb128 0x49
 1228 0156 13       		.uleb128 0x13
 1229 0157 00       		.byte	0
 1230 0158 00       		.byte	0
 1231 0159 00       		.byte	0
 1232              		.section	.debug_loc,"",%progbits
 1233              	.Ldebug_loc0:
 1234              	.LLST0:
 1235 0000 0A000000 		.4byte	.LVL8
 1236 0004 0E000000 		.4byte	.LVL9
 1237 0008 0100     		.2byte	0x1
 1238 000a 52       		.byte	0x52
 1239 000b 00000000 		.4byte	0
 1240 000f 00000000 		.4byte	0
 1241              	.LLST1:
 1242 0013 44000000 		.4byte	.LVL14
 1243 0017 4F000000 		.4byte	.LVL15-1
 1244 001b 0100     		.2byte	0x1
 1245 001d 50       		.byte	0x50
 1246 001e 00000000 		.4byte	0
 1247 0022 00000000 		.4byte	0
 1248              		.section	.debug_aranges,"",%progbits
 1249 0000 94000000 		.4byte	0x94
 1250 0004 0200     		.2byte	0x2
 1251 0006 00000000 		.4byte	.Ldebug_info0
 1252 000a 04       		.byte	0x4
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 39


 1253 000b 00       		.byte	0
 1254 000c 0000     		.2byte	0
 1255 000e 0000     		.2byte	0
 1256 0010 00000000 		.4byte	.LFB2
 1257 0014 10000000 		.4byte	.LFE2-.LFB2
 1258 0018 00000000 		.4byte	.LFB3
 1259 001c 10000000 		.4byte	.LFE3-.LFB3
 1260 0020 00000000 		.4byte	.LFB4
 1261 0024 0C000000 		.4byte	.LFE4-.LFB4
 1262 0028 00000000 		.4byte	.LFB5
 1263 002c 14000000 		.4byte	.LFE5-.LFB5
 1264 0030 00000000 		.4byte	.LFB7
 1265 0034 0C000000 		.4byte	.LFE7-.LFB7
 1266 0038 00000000 		.4byte	.LFB8
 1267 003c 0C000000 		.4byte	.LFE8-.LFB8
 1268 0040 00000000 		.4byte	.LFB9
 1269 0044 0C000000 		.4byte	.LFE9-.LFB9
 1270 0048 00000000 		.4byte	.LFB10
 1271 004c 0C000000 		.4byte	.LFE10-.LFB10
 1272 0050 00000000 		.4byte	.LFB11
 1273 0054 0C000000 		.4byte	.LFE11-.LFB11
 1274 0058 00000000 		.4byte	.LFB12
 1275 005c 0C000000 		.4byte	.LFE12-.LFB12
 1276 0060 00000000 		.4byte	.LFB13
 1277 0064 0C000000 		.4byte	.LFE13-.LFB13
 1278 0068 00000000 		.4byte	.LFB6
 1279 006c 14000000 		.4byte	.LFE6-.LFB6
 1280 0070 00000000 		.4byte	.LFB1
 1281 0074 60000000 		.4byte	.LFE1-.LFB1
 1282 0078 00000000 		.4byte	.LFB0
 1283 007c 1C000000 		.4byte	.LFE0-.LFB0
 1284 0080 00000000 		.4byte	.LFB14
 1285 0084 0C000000 		.4byte	.LFE14-.LFB14
 1286 0088 00000000 		.4byte	.LFB15
 1287 008c 0C000000 		.4byte	.LFE15-.LFB15
 1288 0090 00000000 		.4byte	0
 1289 0094 00000000 		.4byte	0
 1290              		.section	.debug_ranges,"",%progbits
 1291              	.Ldebug_ranges0:
 1292 0000 00000000 		.4byte	.LFB2
 1293 0004 10000000 		.4byte	.LFE2
 1294 0008 00000000 		.4byte	.LFB3
 1295 000c 10000000 		.4byte	.LFE3
 1296 0010 00000000 		.4byte	.LFB4
 1297 0014 0C000000 		.4byte	.LFE4
 1298 0018 00000000 		.4byte	.LFB5
 1299 001c 14000000 		.4byte	.LFE5
 1300 0020 00000000 		.4byte	.LFB7
 1301 0024 0C000000 		.4byte	.LFE7
 1302 0028 00000000 		.4byte	.LFB8
 1303 002c 0C000000 		.4byte	.LFE8
 1304 0030 00000000 		.4byte	.LFB9
 1305 0034 0C000000 		.4byte	.LFE9
 1306 0038 00000000 		.4byte	.LFB10
 1307 003c 0C000000 		.4byte	.LFE10
 1308 0040 00000000 		.4byte	.LFB11
 1309 0044 0C000000 		.4byte	.LFE11
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 40


 1310 0048 00000000 		.4byte	.LFB12
 1311 004c 0C000000 		.4byte	.LFE12
 1312 0050 00000000 		.4byte	.LFB13
 1313 0054 0C000000 		.4byte	.LFE13
 1314 0058 00000000 		.4byte	.LFB6
 1315 005c 14000000 		.4byte	.LFE6
 1316 0060 00000000 		.4byte	.LFB1
 1317 0064 60000000 		.4byte	.LFE1
 1318 0068 00000000 		.4byte	.LFB0
 1319 006c 1C000000 		.4byte	.LFE0
 1320 0070 00000000 		.4byte	.LFB14
 1321 0074 0C000000 		.4byte	.LFE14
 1322 0078 00000000 		.4byte	.LFB15
 1323 007c 0C000000 		.4byte	.LFE15
 1324 0080 00000000 		.4byte	0
 1325 0084 00000000 		.4byte	0
 1326              		.section	.debug_line,"",%progbits
 1327              	.Ldebug_line0:
 1328 0000 8A010000 		.section	.debug_str,"MS",%progbits,1
 1328      02004F00 
 1328      00000201 
 1328      FB0E0D00 
 1328      01010101 
 1329              	.LASF15:
 1330 0000 72656731 		.ascii	"reg16\000"
 1330      3600
 1331              	.LASF17:
 1332 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1332      315F456E 
 1332      61626C65 
 1332      00
 1333              	.LASF29:
 1334 0013 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1334      315F5772 
 1334      69746543 
 1334      6F6E7472 
 1334      6F6C5265 
 1335              	.LASF19:
 1336 002e 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1336      315F5772 
 1336      69746543 
 1336      6F756E74 
 1336      657200
 1337              	.LASF22:
 1338 0041 70657269 		.ascii	"period\000"
 1338      6F6400
 1339              	.LASF32:
 1340 0048 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1340      315F436C 
 1340      65617246 
 1340      49464F00 
 1341              	.LASF3:
 1342 0058 73686F72 		.ascii	"short unsigned int\000"
 1342      7420756E 
 1342      7369676E 
 1342      65642069 
 1342      6E7400
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 41


 1343              	.LASF41:
 1344 006b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1344      6E657261 
 1344      7465645F 
 1344      536F7572 
 1344      63655C50 
 1345              	.LASF28:
 1346 008c 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1346      315F5265 
 1346      61645374 
 1346      61747573 
 1346      52656769 
 1347              	.LASF11:
 1348 00a5 666C6F61 		.ascii	"float\000"
 1348      7400
 1349              	.LASF21:
 1350 00ab 636F756E 		.ascii	"counter\000"
 1350      74657200 
 1351              	.LASF7:
 1352 00b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1352      206C6F6E 
 1352      6720756E 
 1352      7369676E 
 1352      65642069 
 1353              	.LASF1:
 1354 00ca 756E7369 		.ascii	"unsigned char\000"
 1354      676E6564 
 1354      20636861 
 1354      7200
 1355              	.LASF14:
 1356 00d8 72656738 		.ascii	"reg8\000"
 1356      00
 1357              	.LASF39:
 1358 00dd 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1358      315F5265 
 1358      61645065 
 1358      72696F64 
 1358      00
 1359              	.LASF5:
 1360 00ee 6C6F6E67 		.ascii	"long unsigned int\000"
 1360      20756E73 
 1360      69676E65 
 1360      6420696E 
 1360      7400
 1361              	.LASF9:
 1362 0100 75696E74 		.ascii	"uint8\000"
 1362      3800
 1363              	.LASF30:
 1364 0106 636F6E74 		.ascii	"control\000"
 1364      726F6C00 
 1365              	.LASF25:
 1366 010e 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1366      315F5365 
 1366      74496E74 
 1366      65727275 
 1366      70744D6F 
 1367              	.LASF38:
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 42


 1368 0125 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1368      315F5265 
 1368      6164436F 
 1368      6D706172 
 1368      6500
 1369              	.LASF12:
 1370 0137 646F7562 		.ascii	"double\000"
 1370      6C6500
 1371              	.LASF36:
 1372 013e 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1372      315F696E 
 1372      74657272 
 1372      75707453 
 1372      74617465 
 1373              	.LASF44:
 1374 0153 50574D5F 		.ascii	"PWM_1_initVar\000"
 1374      315F696E 
 1374      69745661 
 1374      7200
 1375              	.LASF2:
 1376 0161 73686F72 		.ascii	"short int\000"
 1376      7420696E 
 1376      7400
 1377              	.LASF31:
 1378 016b 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1378      315F5265 
 1378      61644361 
 1378      70747572 
 1378      6500
 1379              	.LASF10:
 1380 017d 75696E74 		.ascii	"uint16\000"
 1380      313600
 1381              	.LASF33:
 1382 0184 50574D5F 		.ascii	"PWM_1_Init\000"
 1382      315F496E 
 1382      697400
 1383              	.LASF45:
 1384 018f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1384      74657243 
 1384      72697469 
 1384      63616C53 
 1384      65637469 
 1385              	.LASF8:
 1386 01a6 756E7369 		.ascii	"unsigned int\000"
 1386      676E6564 
 1386      20696E74 
 1386      00
 1387              	.LASF46:
 1388 01b3 43794578 		.ascii	"CyExitCriticalSection\000"
 1388      69744372 
 1388      69746963 
 1388      616C5365 
 1388      6374696F 
 1389              	.LASF34:
 1390 01c9 72657375 		.ascii	"result\000"
 1390      6C7400
 1391              	.LASF42:
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 43


 1392 01d0 433A5C55 		.ascii	"C:\\Users\\ponioj\\OneDrive\\College\\2015-2016 Sen"
 1392      73657273 
 1392      5C706F6E 
 1392      696F6A5C 
 1392      4F6E6544 
 1393 01fe 696F7220 		.ascii	"ior Year\\0 Fall Quarter\\CE4920 011\\Lab\\project\\"
 1393      59656172 
 1393      5C302046 
 1393      616C6C20 
 1393      51756172 
 1394 022d 43453439 		.ascii	"CE4920Project1\\Design01.cydsn\000"
 1394      32305072 
 1394      6F6A6563 
 1394      74315C44 
 1394      65736967 
 1395              	.LASF40:
 1396 024b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1396      4320342E 
 1396      382E3420 
 1396      32303134 
 1396      30353236 
 1397 027e 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1397      20726576 
 1397      6973696F 
 1397      6E203231 
 1397      31333538 
 1398 02b1 67202D66 		.ascii	"g -ffunction-sections\000"
 1398      66756E63 
 1398      74696F6E 
 1398      2D736563 
 1398      74696F6E 
 1399              	.LASF16:
 1400 02c7 73697A65 		.ascii	"sizetype\000"
 1400      74797065 
 1400      00
 1401              	.LASF23:
 1402 02d0 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1402      315F5772 
 1402      69746543 
 1402      6F6D7061 
 1402      726500
 1403              	.LASF6:
 1404 02e3 6C6F6E67 		.ascii	"long long int\000"
 1404      206C6F6E 
 1404      6720696E 
 1404      7400
 1405              	.LASF43:
 1406 02f1 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1406      315F5265 
 1406      6164436F 
 1406      6E74726F 
 1406      6C526567 
 1407              	.LASF26:
 1408 030b 696E7465 		.ascii	"interruptMode\000"
 1408      72727570 
 1408      744D6F64 
 1408      6500
ARM GAS  C:\Users\ponioj\AppData\Local\Temp\ccxzWURe.s 			page 44


 1409              	.LASF20:
 1410 0319 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1410      315F5772 
 1410      69746550 
 1410      6572696F 
 1410      6400
 1411              	.LASF27:
 1412 032b 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1412      315F5265 
 1412      6164436F 
 1412      756E7465 
 1412      7200
 1413              	.LASF35:
 1414 033d 6374726C 		.ascii	"ctrl\000"
 1414      00
 1415              	.LASF18:
 1416 0342 50574D5F 		.ascii	"PWM_1_Stop\000"
 1416      315F5374 
 1416      6F7000
 1417              	.LASF4:
 1418 034d 6C6F6E67 		.ascii	"long int\000"
 1418      20696E74 
 1418      00
 1419              	.LASF13:
 1420 0356 63686172 		.ascii	"char\000"
 1420      00
 1421              	.LASF0:
 1422 035b 7369676E 		.ascii	"signed char\000"
 1422      65642063 
 1422      68617200 
 1423              	.LASF24:
 1424 0367 636F6D70 		.ascii	"compare\000"
 1424      61726500 
 1425              	.LASF37:
 1426 036f 50574D5F 		.ascii	"PWM_1_Start\000"
 1426      315F5374 
 1426      61727400 
 1427              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
