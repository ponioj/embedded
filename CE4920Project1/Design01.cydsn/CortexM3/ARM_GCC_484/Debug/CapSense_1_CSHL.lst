ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_1_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CapSense_1_BaseInit,"ax",%progbits
  19              		.align	2
  20              		.global	CapSense_1_BaseInit
  21              		.thumb
  22              		.thumb_func
  23              		.type	CapSense_1_BaseInit, %function
  24              	CapSense_1_BaseInit:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 2


  32:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 
  50:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 
  54:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     10u, 
  58:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, 
  62:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* DummyWidget__BTN */
  70:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  71:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  72:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  74:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* DummyWidget__BTN */
  75:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  76:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  77:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  79:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  81:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
  82:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
  83:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  84:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  85:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
  86:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
  87:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
  88:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 3


  89:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
  90:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
  91:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
  92:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
  93:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
  94:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
  95:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  96:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
  97:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
  98:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  99:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  27              		.loc 1 122 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 10B4     		push	{r4}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 4, -4
 123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
  36              		.loc 1 125 0
  37 0002 0B4B     		ldr	r3, .L2
  38 0004 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
  39              	.LVL1:
 126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 4


 133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
  40              		.loc 1 139 0
  41 0006 0B4B     		ldr	r3, .L2+4
  42              	.LVL2:
  43 0008 33F81030 		ldrh	r3, [r3, r0, lsl #1]
  44 000c 0A49     		ldr	r1, .L2+8
  45 000e 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
 140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
  46              		.loc 1 140 0
  47 0012 0021     		movs	r1, #0
  48 0014 094C     		ldr	r4, .L2+12
  49 0016 2154     		strb	r1, [r4, r0]
 141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
  50              		.loc 1 141 0
  51 0018 094C     		ldr	r4, .L2+16
  52 001a 2154     		strb	r1, [r4, r0]
 142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[widget] =  CapSense_1_debounce[widget];
  53              		.loc 1 143 0
  54 001c 0949     		ldr	r1, .L2+20
  55 001e 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
  56 0020 0949     		ldr	r1, .L2+24
  57 0022 8C54     		strb	r4, [r1, r2]
 144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
 154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
  58              		.loc 1 158 0
  59 0024 094A     		ldr	r2, .L2+28
  60 0026 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 5


 169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
  61              		.loc 1 170 0
  62 002a 5DF8044B 		ldr	r4, [sp], #4
  63 002e 7047     		bx	lr
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0030 00000000 		.word	CapSense_1_widgetNumber
  68 0034 00000000 		.word	CapSense_1_sensorRaw
  69 0038 00000000 		.word	CapSense_1_sensorBaseline
  70 003c 00000000 		.word	CapSense_1_sensorBaselineLow
  71 0040 00000000 		.word	CapSense_1_sensorSignal
  72 0044 00000000 		.word	.LANCHOR0
  73 0048 00000000 		.word	.LANCHOR1
  74 004c 00000000 		.word	CapSense_1_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE0:
  77              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
  78              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
  79              		.align	2
  80              		.global	CapSense_1_InitializeSensorBaseline
  81              		.thumb
  82              		.thumb_func
  83              		.type	CapSense_1_InitializeSensorBaseline, %function
  84              	CapSense_1_InitializeSensorBaseline:
  85              	.LFB1:
 171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
 183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  86              		.loc 1 196 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 6


  90              	.LVL3:
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
  95 0002 0446     		mov	r4, r0
 197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
  96              		.loc 1 198 0
  97 0004 FFF7FEFF 		bl	CapSense_1_ScanSensor
  98              	.LVL4:
  99              	.L5:
 199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 100              		.loc 1 199 0 discriminator 1
 101 0008 FFF7FEFF 		bl	CapSense_1_IsBusy
 102              	.LVL5:
 103 000c 0028     		cmp	r0, #0
 104 000e FBD1     		bne	.L5
 200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
 105              		.loc 1 206 0
 106 0010 2046     		mov	r0, r4
 107 0012 FFF7FEFF 		bl	CapSense_1_BaseInit
 108              	.LVL6:
 109 0016 10BD     		pop	{r4, pc}
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 113              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 114              		.align	2
 115              		.global	CapSense_1_InitializeAllBaselines
 116              		.thumb
 117              		.thumb_func
 118              		.type	CapSense_1_InitializeAllBaselines, %function
 119              	CapSense_1_InitializeAllBaselines:
 120              	.LFB2:
 207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 7


 223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 121              		.loc 1 248 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 10B5     		push	{r4, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 14, -4
 129              	.LVL7:
 249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 130              		.loc 1 252 0
 131 0002 0024     		movs	r4, #0
 132 0004 04E0     		b	.L8
 133              	.LVL8:
 134              	.L9:
 253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 135              		.loc 1 254 0 discriminator 2
 136 0006 2046     		mov	r0, r4
 137 0008 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 138              	.LVL9:
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 139              		.loc 1 252 0 discriminator 2
 140 000c 0134     		adds	r4, r4, #1
 141              	.LVL10:
 142 000e E4B2     		uxtb	r4, r4
 143              	.LVL11:
 144              	.L8:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 8


 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 145              		.loc 1 252 0 is_stmt 0 discriminator 1
 146 0010 002C     		cmp	r4, #0
 147 0012 F8D0     		beq	.L9
 255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 148              		.loc 1 256 0 is_stmt 1
 149 0014 10BD     		pop	{r4, pc}
 150              		.cfi_endproc
 151              	.LFE2:
 152              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 153 0016 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 154              		.align	2
 155              		.global	CapSense_1_InitializeEnabledBaselines
 156              		.thumb
 157              		.thumb_func
 158              		.type	CapSense_1_InitializeEnabledBaselines, %function
 159              	CapSense_1_InitializeEnabledBaselines:
 160              	.LFB3:
 257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 161              		.loc 1 281 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 166              		.cfi_def_cfa_offset 24
 167              		.cfi_offset 3, -24
 168              		.cfi_offset 4, -20
 169              		.cfi_offset 5, -16
 170              		.cfi_offset 6, -12
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 9


 283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 173              		.loc 1 286 0
 174 0002 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 175              	.LVL12:
 176              	.L11:
 287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 177              		.loc 1 287 0 discriminator 1
 178 0006 FFF7FEFF 		bl	CapSense_1_IsBusy
 179              	.LVL13:
 180 000a 0028     		cmp	r0, #0
 181 000c FBD1     		bne	.L11
 182 000e 0024     		movs	r4, #0
 288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 183              		.loc 1 295 0
 184 0010 0126     		movs	r6, #1
 296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 185              		.loc 1 298 0
 186 0012 0B4D     		ldr	r5, .L16
 299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 187              		.loc 1 300 0
 188 0014 0B4F     		ldr	r7, .L16+4
 189 0016 0FE0     		b	.L12
 190              	.LVL14:
 191              	.L14:
 294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 192              		.loc 1 294 0
 193 0018 E308     		lsrs	r3, r4, #3
 295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 194              		.loc 1 295 0
 195 001a 04F00702 		and	r2, r4, #7
 196 001e 06FA02F2 		lsl	r2, r6, r2
 197              	.LVL15:
 298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 198              		.loc 1 298 0
 199 0022 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 200 0024 1A42     		tst	r2, r3
 201 0026 02D1     		bne	.L13
 202              		.loc 1 300 0
 203 0028 0023     		movs	r3, #0
 204 002a 27F81430 		strh	r3, [r7, r4, lsl #1]	@ movhi
 205              	.L13:
 301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 10


 304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 206              		.loc 1 304 0
 207 002e 2046     		mov	r0, r4
 208 0030 FFF7FEFF 		bl	CapSense_1_BaseInit
 209              	.LVL16:
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 210              		.loc 1 292 0
 211 0034 0134     		adds	r4, r4, #1
 212              	.LVL17:
 213 0036 E4B2     		uxtb	r4, r4
 214              	.LVL18:
 215              	.L12:
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 216              		.loc 1 292 0 is_stmt 0 discriminator 1
 217 0038 002C     		cmp	r4, #0
 218 003a EDD0     		beq	.L14
 305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
 219              		.loc 1 306 0 is_stmt 1
 220 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 221              	.LVL19:
 222              	.L17:
 223 003e 00BF     		.align	2
 224              	.L16:
 225 0040 00000000 		.word	CapSense_1_sensorEnableMask
 226 0044 00000000 		.word	CapSense_1_sensorRaw
 227              		.cfi_endproc
 228              	.LFE3:
 229              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 230              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 231              		.align	2
 232              		.global	CapSense_1_CheckIsSensorActive
 233              		.thumb
 234              		.thumb_func
 235              		.type	CapSense_1_CheckIsSensorActive, %function
 236              	CapSense_1_CheckIsSensorActive:
 237              	.LFB6:
 307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 11


 327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 12


 384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
 407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 13


 441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
 470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 14


 498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 15


 555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
 579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 238              		.loc 1 579 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              	.LVL20:
 244 0000 F0B4     		push	{r4, r5, r6, r7}
 245              		.cfi_def_cfa_offset 16
 246              		.cfi_offset 4, -16
 247              		.cfi_offset 5, -12
 248              		.cfi_offset 6, -8
 249              		.cfi_offset 7, -4
 580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
 250              		.loc 1 582 0
 251 0002 C108     		lsrs	r1, r0, #3
 252              	.LVL21:
 583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 253              		.loc 1 583 0
 254 0004 00F00703 		and	r3, r0, #7
 255 0008 0122     		movs	r2, #1
 256 000a 9A40     		lsls	r2, r2, r3
 257 000c D2B2     		uxtb	r2, r2
 258              	.LVL22:
 584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 259              		.loc 1 585 0
 260 000e 1B4B     		ldr	r3, .L25
 261 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 fingerThreshold = CapSense_1_fingerThreshold[widget];
 262              		.loc 1 586 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 16


 263 0012 1B4C     		ldr	r4, .L25+4
 264 0014 E518     		adds	r5, r4, r3
 265 0016 2E79     		ldrb	r6, [r5, #4]	@ zero_extendqisi2
 266              	.LVL23:
 587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 hysteresis = CapSense_1_hysteresis[widget];
 267              		.loc 1 587 0
 268 0018 2D7A     		ldrb	r5, [r5, #8]	@ zero_extendqisi2
 269              	.LVL24:
 588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 270              		.loc 1 588 0
 271 001a E75C     		ldrb	r7, [r4, r3]	@ zero_extendqisi2
 272              	.LVL25:
 589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     debounceIndex = widget;
 591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 273              		.loc 1 594 0
 274 001c 194C     		ldr	r4, .L25+8
 275              	.LVL26:
 276 001e 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 277 0020 1442     		tst	r4, r2
 278 0022 0DD0     		beq	.L19
 595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 279              		.loc 1 597 0
 280 0024 DFF864C0 		ldr	ip, .L25+16
 281 0028 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 282              	.LVL27:
 283 002c 751B     		subs	r5, r6, r5
 284 002e A842     		cmp	r0, r5
 285 0030 1ADA     		bge	.L20
 598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 286              		.loc 1 599 0
 287 0032 24EA0204 		bic	r4, r4, r2
 288 0036 1348     		ldr	r0, .L25+8
 289 0038 4454     		strb	r4, [r0, r1]
 600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
 290              		.loc 1 600 0
 291 003a 1348     		ldr	r0, .L25+12
 292 003c C754     		strb	r7, [r0, r3]
 293 003e 13E0     		b	.L20
 294              	.LVL28:
 295              	.L19:
 601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 296              		.loc 1 606 0
 297 0040 DFF848C0 		ldr	ip, .L25+16
 298 0044 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 299              	.LVL29:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 17


 300 0048 3544     		add	r5, r5, r6
 301 004a A842     		cmp	r0, r5
 302 004c 0ADD     		ble	.L21
 607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
 303              		.loc 1 609 0
 304 004e 0E48     		ldr	r0, .L25+12
 305 0050 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 306 0052 0128     		cmp	r0, #1
 307 0054 02D8     		bhi	.L22
 610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 308              		.loc 1 611 0
 309 0056 1443     		orrs	r4, r4, r2
 310 0058 0A4D     		ldr	r5, .L25+8
 311 005a 6C54     		strb	r4, [r5, r1]
 312              	.L22:
 612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 313              		.loc 1 613 0
 314 005c 0138     		subs	r0, r0, #1
 315 005e 0A4C     		ldr	r4, .L25+12
 316 0060 E054     		strb	r0, [r4, r3]
 317 0062 01E0     		b	.L20
 318              	.L21:
 614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 319              		.loc 1 618 0
 320 0064 0848     		ldr	r0, .L25+12
 321 0066 C754     		strb	r7, [r0, r3]
 322              	.L20:
 619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 323              		.loc 1 622 0
 324 0068 064B     		ldr	r3, .L25+8
 325              	.LVL30:
 326 006a 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 327 006c 1342     		tst	r3, r2
 328 006e 01D0     		beq	.L24
 329 0070 0120     		movs	r0, #1
 330 0072 00E0     		b	.L23
 331              	.L24:
 332 0074 0020     		movs	r0, #0
 333              	.L23:
 623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 334              		.loc 1 623 0 discriminator 3
 335 0076 F0BC     		pop	{r4, r5, r6, r7}
 336              	.LVL31:
 337 0078 7047     		bx	lr
 338              	.L26:
 339 007a 00BF     		.align	2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 18


 340              	.L25:
 341 007c 00000000 		.word	CapSense_1_widgetNumber
 342 0080 00000000 		.word	.LANCHOR0
 343 0084 00000000 		.word	CapSense_1_sensorOnMask
 344 0088 00000000 		.word	.LANCHOR1
 345 008c 00000000 		.word	CapSense_1_sensorSignal
 346              		.cfi_endproc
 347              	.LFE6:
 348              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 349              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 350              		.align	2
 351              		.global	CapSense_1_CheckIsWidgetActive
 352              		.thumb
 353              		.thumb_func
 354              		.type	CapSense_1_CheckIsWidgetActive, %function
 355              	CapSense_1_CheckIsWidgetActive:
 356              	.LFB7:
 624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
 632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 357              		.loc 1 651 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              	.LVL32:
 362 0000 08B5     		push	{r3, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 3, -8
 365              		.cfi_offset 14, -4
 366              	.LVL33:
 652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 19


 654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
 367              		.loc 1 659 0
 368 0002 0020     		movs	r0, #0
 369              	.LVL34:
 370 0004 FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 371              	.LVL35:
 372 0008 00B1     		cbz	r0, .L28
 660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 373              		.loc 1 661 0
 374 000a 0120     		movs	r0, #1
 375              	.L28:
 376              	.LVL36:
 662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 377              		.loc 1 670 0
 378 000c 08BD     		pop	{r3, pc}
 379              		.cfi_endproc
 380              	.LFE7:
 381              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 382 000e 00BF     		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 383              		.align	2
 384              		.global	CapSense_1_CheckIsAnyWidgetActive
 385              		.thumb
 386              		.thumb_func
 387              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 388              	CapSense_1_CheckIsAnyWidgetActive:
 389              	.LFB8:
 671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
 681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 20


 688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 390              		.loc 1 695 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 70B5     		push	{r4, r5, r6, lr}
 395              		.cfi_def_cfa_offset 16
 396              		.cfi_offset 4, -16
 397              		.cfi_offset 5, -12
 398              		.cfi_offset 6, -8
 399              		.cfi_offset 14, -4
 400              	.LVL37:
 696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 401              		.loc 1 697 0
 402 0002 0025     		movs	r5, #0
 698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 403              		.loc 1 699 0
 404 0004 2C46     		mov	r4, r5
 700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 405              		.loc 1 703 0
 406 0006 0126     		movs	r6, #1
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 407              		.loc 1 699 0
 408 0008 06E0     		b	.L31
 409              	.LVL38:
 410              	.L33:
 701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 411              		.loc 1 701 0
 412 000a 2046     		mov	r0, r4
 413 000c FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 414              	.LVL39:
 415 0010 00B1     		cbz	r0, .L32
 416              		.loc 1 703 0
 417 0012 3546     		mov	r5, r6
 418              	.L32:
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 419              		.loc 1 699 0
 420 0014 0134     		adds	r4, r4, #1
 421              	.LVL40:
 422 0016 E4B2     		uxtb	r4, r4
 423              	.LVL41:
 424              	.L31:
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 425              		.loc 1 699 0 is_stmt 0 discriminator 1
 426 0018 002C     		cmp	r4, #0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 21


 427 001a F6D0     		beq	.L33
 704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 428              		.loc 1 709 0 is_stmt 1
 429 001c 2846     		mov	r0, r5
 430 001e 70BD     		pop	{r4, r5, r6, pc}
 431              		.cfi_endproc
 432              	.LFE8:
 433              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 434              		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 435              		.align	2
 436              		.global	CapSense_1_EnableWidget
 437              		.thumb
 438              		.thumb_func
 439              		.type	CapSense_1_EnableWidget, %function
 440              	CapSense_1_EnableWidget:
 441              	.LFB9:
 710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 442              		.loc 1 741 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 22


 446              		@ link register save eliminated.
 447              	.LVL42:
 742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
 448              		.loc 1 753 0
 449 0000 024B     		ldr	r3, .L36
 450 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 451 0004 42F00102 		orr	r2, r2, #1
 452 0008 1A70     		strb	r2, [r3]
 453              	.LVL43:
 454 000a 7047     		bx	lr
 455              	.L37:
 456              		.align	2
 457              	.L36:
 458 000c 00000000 		.word	CapSense_1_sensorEnableMask
 459              		.cfi_endproc
 460              	.LFE9:
 461              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 462              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 463              		.align	2
 464              		.global	CapSense_1_DisableWidget
 465              		.thumb
 466              		.thumb_func
 467              		.type	CapSense_1_DisableWidget, %function
 468              	CapSense_1_DisableWidget:
 469              	.LFB10:
 754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 23


 775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 470              		.loc 1 791 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL44:
 792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
 798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
 476              		.loc 1 803 0
 477 0000 024B     		ldr	r3, .L39
 478 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 479 0004 22F00102 		bic	r2, r2, #1
 480 0008 1A70     		strb	r2, [r3]
 481              	.LVL45:
 482 000a 7047     		bx	lr
 483              	.L40:
 484              		.align	2
 485              	.L39:
 486 000c 00000000 		.word	CapSense_1_sensorEnableMask
 487              		.cfi_endproc
 488              	.LFE10:
 489              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 490              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 491              		.align	2
 492              		.global	CapSense_1_IIR4Filter
 493              		.thumb
 494              		.thumb_func
 495              		.type	CapSense_1_IIR4Filter, %function
 496              	CapSense_1_IIR4Filter:
 497              	.LFB11:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 24


 804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
 813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
 820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 
 837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
 847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
 850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 25


 861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
 898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
 906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 26


 918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
 934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
 947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 960:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 961:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 962:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 963:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 964:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 965:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 966:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 967:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 968:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 969:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 970:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
 971:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 972:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 973:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 974:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 27


 975:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
 976:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 977:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 978:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
 979:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
 980:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
 982:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
 983:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 984:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
 985:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 986:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 987:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 988:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
 989:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 990:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 991:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
 992:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
 993:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 994:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 995:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
 996:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
 997:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
 998:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 999:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1000:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
1001:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
1002:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1003:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
1004:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1005:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1006:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1007:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1008:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1009:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint8 CapSense_1_centroid[3u];
1010:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1011:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1012:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1013:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1014:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
1015:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1016:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1017:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1018:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1019:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1020:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1021:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1022:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1023:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1024:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1025:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1026:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1027:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1028:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1029:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1030:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1031:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 28


1032:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1033:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1034:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1035:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1036:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1037:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1038:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1039:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1040:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1041:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1042:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1043:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1044:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1045:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1046:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1047:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1048:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1049:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1050:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1051:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1052:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1053:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1054:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1055:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1056:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1057:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1058:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1059:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1060:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1061:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1062:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1063:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1064:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1065:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1066:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1067:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1068:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1069:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1070:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1071:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1072:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1073:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
1074:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1075:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1076:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1077:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
1078:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1079:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1080:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1081:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1082:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1083:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1084:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1085:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1086:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1087:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1088:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 29


1089:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1090:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1091:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1092:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1093:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1094:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1095:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1096:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1097:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1098:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1099:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
1111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
1113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
1121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
1124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
1126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
1135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
1136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
1139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
1140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 30


1146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
1154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
1157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
1160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
1161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 31


1203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
1210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 32


1260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 33


1317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 34


1374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 35


1431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 36


1488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
1530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 37


1545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
1572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
1574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
1587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 38


1602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
1618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
1644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
1647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 39


1659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
1675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
1686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
1688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
1701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 40


1716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 41


1773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
1789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
1816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
1818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 42


1830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 43


1887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 498              		.loc 1 1936 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL46:
1937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 44


1938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 504              		.loc 1 1940 0
 505 0000 00EB4100 		add	r0, r0, r1, lsl #1
 506              	.LVL47:
1941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 507              		.loc 1 1941 0
 508 0004 0844     		add	r0, r0, r1
 509              	.LVL48:
1942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
1943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 510              		.loc 1 1945 0
 511 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 512              	.LVL49:
 513 000a 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE11:
 516              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 517              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 518              		.align	2
 519              		.global	CapSense_1_UpdateSensorBaseline
 520              		.thumb
 521              		.thumb_func
 522              		.type	CapSense_1_UpdateSensorBaseline, %function
 523              	CapSense_1_UpdateSensorBaseline:
 524              	.LFB4:
 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 525              		.loc 1 348 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL50:
 530 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 531              		.cfi_def_cfa_offset 24
 532              		.cfi_offset 4, -24
 533              		.cfi_offset 5, -20
 534              		.cfi_offset 6, -16
 535              		.cfi_offset 7, -12
 536              		.cfi_offset 8, -8
 537              		.cfi_offset 14, -4
 538 0004 0446     		mov	r4, r0
 352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 539              		.loc 1 352 0
 540 0006 304B     		ldr	r3, .L52
 541 0008 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 542              	.LVL51:
 353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 543              		.loc 1 353 0
 544 000a 304A     		ldr	r2, .L52+4
 545 000c 1344     		add	r3, r3, r2
 546 000e 1F7B     		ldrb	r7, [r3, #12]	@ zero_extendqisi2
 547              	.LVL52:
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 548              		.loc 1 382 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 45


 549 0010 2F4E     		ldr	r6, .L52+8
 550 0012 304B     		ldr	r3, .L52+12
 551              	.LVL53:
 552 0014 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 553              	.LVL54:
 554 0018 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 555 001c FFF7FEFF 		bl	CapSense_1_IIR4Filter
 556              	.LVL55:
 557 0020 0546     		mov	r5, r0
 558              	.LVL56:
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 559              		.loc 1 383 0
 560 0022 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 561              		.loc 1 402 0
 562 0026 2046     		mov	r0, r4
 563              	.LVL57:
 564 0028 FFF7FEFF 		bl	CapSense_1_CalculateThresholds
 565              	.LVL58:
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 566              		.loc 1 408 0
 567 002c 2A4B     		ldr	r3, .L52+16
 568 002e 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 569 0032 AB42     		cmp	r3, r5
 570 0034 04D8     		bhi	.L43
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 571              		.loc 1 410 0
 572 0036 EE1A     		subs	r6, r5, r3
 573 0038 B6B2     		uxth	r6, r6
 574              	.LVL59:
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 575              		.loc 1 411 0
 576 003a 4FF00108 		mov	r8, #1
 577 003e 03E0     		b	.L44
 578              	.LVL60:
 579              	.L43:
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 580              		.loc 1 415 0
 581 0040 5E1B     		subs	r6, r3, r5
 582 0042 B6B2     		uxth	r6, r6
 583              	.LVL61:
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 584              		.loc 1 416 0
 585 0044 4FF00008 		mov	r8, #0
 586              	.LVL62:
 587              	.L44:
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 588              		.loc 1 419 0
 589 0048 B8F1000F 		cmp	r8, #0
 590 004c 10D1     		bne	.L45
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 591              		.loc 1 419 0 is_stmt 0 discriminator 1
 592 004e 142E     		cmp	r6, #20
 593 0050 0ED9     		bls	.L45
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 594              		.loc 1 421 0 is_stmt 1
 595 0052 224B     		ldr	r3, .L52+20
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 46


 596 0054 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 597 0056 042B     		cmp	r3, #4
 598 0058 06D9     		bls	.L46
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 599              		.loc 1 423 0
 600 005a 2046     		mov	r0, r4
 601 005c FFF7FEFF 		bl	CapSense_1_BaseInit
 602              	.LVL63:
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 603              		.loc 1 424 0
 604 0060 0022     		movs	r2, #0
 605 0062 1E4B     		ldr	r3, .L52+20
 606 0064 1A55     		strb	r2, [r3, r4]
 607 0066 19E0     		b	.L47
 608              	.L46:
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 609              		.loc 1 428 0
 610 0068 0133     		adds	r3, r3, #1
 611 006a 1C4A     		ldr	r2, .L52+20
 612 006c 1355     		strb	r3, [r2, r4]
 613 006e 15E0     		b	.L47
 614              	.L45:
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 615              		.loc 1 435 0
 616 0070 B742     		cmp	r7, r6
 617 0072 04D2     		bcs	.L48
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 618              		.loc 1 435 0 is_stmt 0 discriminator 1
 619 0074 132E     		cmp	r6, #19
 620 0076 11D8     		bhi	.L47
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 621              		.loc 1 437 0 is_stmt 1
 622 0078 B8F1000F 		cmp	r8, #0
 623 007c 0ED1     		bne	.L47
 624              	.L48:
 625              	.LVL64:
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 626              		.loc 1 442 0
 627 007e 184A     		ldr	r2, .L52+24
 628 0080 115D     		ldrb	r1, [r2, r4]	@ zero_extendqisi2
 629 0082 41EA0321 		orr	r1, r1, r3, lsl #8
 630              	.LVL65:
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 631              		.loc 1 445 0
 632 0086 0D44     		add	r5, r5, r1
 633              	.LVL66:
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 634              		.loc 1 448 0
 635 0088 EB1A     		subs	r3, r5, r3
 636              	.LVL67:
 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 637              		.loc 1 451 0
 638 008a C3F30F20 		ubfx	r0, r3, #8, #16
 639 008e 1249     		ldr	r1, .L52+16
 640 0090 21F81400 		strh	r0, [r1, r4, lsl #1]	@ movhi
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 641              		.loc 1 452 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 47


 642 0094 1355     		strb	r3, [r2, r4]
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 643              		.loc 1 454 0
 644 0096 0022     		movs	r2, #0
 645 0098 104B     		ldr	r3, .L52+20
 646              	.LVL68:
 647 009a 1A55     		strb	r2, [r3, r4]
 648              	.L47:
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 649              		.loc 1 461 0
 650 009c B742     		cmp	r7, r6
 651 009e 0DD2     		bcs	.L49
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 652              		.loc 1 461 0 is_stmt 0 discriminator 1
 653 00a0 B8F1000F 		cmp	r8, #0
 654 00a4 0AD0     		beq	.L49
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 655              		.loc 1 465 0 is_stmt 1
 656 00a6 FF2E     		cmp	r6, #255
 657 00a8 04D9     		bls	.L50
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 658              		.loc 1 467 0
 659 00aa FF22     		movs	r2, #255
 660 00ac 0D4B     		ldr	r3, .L52+28
 661 00ae 1A55     		strb	r2, [r3, r4]
 662 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 663              	.LVL69:
 664              	.L50:
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 665              		.loc 1 471 0
 666 00b4 0B4B     		ldr	r3, .L52+28
 667 00b6 1E55     		strb	r6, [r3, r4]
 668 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 669              	.LVL70:
 670              	.L49:
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 671              		.loc 1 480 0
 672 00bc 0022     		movs	r2, #0
 673 00be 094B     		ldr	r3, .L52+28
 674 00c0 1A55     		strb	r2, [r3, r4]
 675 00c2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 676              	.LVL71:
 677              	.L53:
 678 00c6 00BF     		.align	2
 679              	.L52:
 680 00c8 00000000 		.word	CapSense_1_widgetNumber
 681 00cc 00000000 		.word	.LANCHOR0
 682 00d0 00000000 		.word	CapSense_1_rawFilterData1
 683 00d4 00000000 		.word	CapSense_1_sensorRaw
 684 00d8 00000000 		.word	CapSense_1_sensorBaseline
 685 00dc 00000000 		.word	CapSense_1_lowBaselineResetCnt
 686 00e0 00000000 		.word	CapSense_1_sensorBaselineLow
 687 00e4 00000000 		.word	CapSense_1_sensorSignal
 688              		.cfi_endproc
 689              	.LFE4:
 690              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 691              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 48


 692              		.align	2
 693              		.global	CapSense_1_UpdateEnabledBaselines
 694              		.thumb
 695              		.thumb_func
 696              		.type	CapSense_1_UpdateEnabledBaselines, %function
 697              	CapSense_1_UpdateEnabledBaselines:
 698              	.LFB5:
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 699              		.loc 1 521 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703 0000 70B5     		push	{r4, r5, r6, lr}
 704              		.cfi_def_cfa_offset 16
 705              		.cfi_offset 4, -16
 706              		.cfi_offset 5, -12
 707              		.cfi_offset 6, -8
 708              		.cfi_offset 14, -4
 709              	.LVL72:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 710              		.loc 1 526 0
 711 0002 0024     		movs	r4, #0
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 712              		.loc 1 529 0
 713 0004 0126     		movs	r6, #1
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 714              		.loc 1 530 0
 715 0006 094D     		ldr	r5, .L58
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 716              		.loc 1 526 0
 717 0008 0CE0     		b	.L55
 718              	.LVL73:
 719              	.L57:
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 720              		.loc 1 528 0
 721 000a E308     		lsrs	r3, r4, #3
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 722              		.loc 1 529 0
 723 000c 04F00702 		and	r2, r4, #7
 724 0010 06FA02F2 		lsl	r2, r6, r2
 725              	.LVL74:
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 726              		.loc 1 530 0
 727 0014 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 728 0016 1A42     		tst	r2, r3
 729 0018 02D0     		beq	.L56
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 730              		.loc 1 532 0
 731 001a 2046     		mov	r0, r4
 732 001c FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 733              	.LVL75:
 734              	.L56:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 735              		.loc 1 526 0
 736 0020 0134     		adds	r4, r4, #1
 737              	.LVL76:
 738 0022 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 49


 739              	.LVL77:
 740              	.L55:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 741              		.loc 1 526 0 is_stmt 0 discriminator 1
 742 0024 002C     		cmp	r4, #0
 743 0026 F0D0     		beq	.L57
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 744              		.loc 1 535 0 is_stmt 1
 745 0028 70BD     		pop	{r4, r5, r6, pc}
 746              	.LVL78:
 747              	.L59:
 748 002a 00BF     		.align	2
 749              	.L58:
 750 002c 00000000 		.word	CapSense_1_sensorEnableMask
 751              		.cfi_endproc
 752              	.LFE5:
 753              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 754              		.global	CapSense_1_numberOfSensors
 755              		.global	CapSense_1_rawDataIndex
 756              		.global	CapSense_1_debounceCounter
 757              		.global	CapSense_1_debounce
 758              		.global	CapSense_1_hysteresis
 759              		.global	CapSense_1_noiseThreshold
 760              		.global	CapSense_1_fingerThreshold
 761              		.comm	CapSense_1_lowBaselineResetCnt,1,4
 762              		.comm	CapSense_1_sensorOnMask,1,4
 763              		.comm	CapSense_1_sensorSignal,1,4
 764              		.comm	CapSense_1_sensorBaselineLow,1,4
 765              		.comm	CapSense_1_sensorBaseline,2,4
 766              		.comm	CapSense_1_rawFilterData1,2,4
 767              		.section	.rodata
 768              		.align	2
 769              		.type	CapSense_1_numberOfSensors, %object
 770              		.size	CapSense_1_numberOfSensors, 1
 771              	CapSense_1_numberOfSensors:
 772 0000 01       		.byte	1
 773 0001 000000   		.space	3
 774              		.type	CapSense_1_rawDataIndex, %object
 775              		.size	CapSense_1_rawDataIndex, 1
 776              	CapSense_1_rawDataIndex:
 777 0004 00       		.space	1
 778 0005 000000   		.data
 779              		.align	2
 780              		.set	.LANCHOR0,. + 0
 781              		.type	CapSense_1_debounce, %object
 782              		.size	CapSense_1_debounce, 1
 783              	CapSense_1_debounce:
 784 0000 01       		.byte	1
 785 0001 000000   		.space	3
 786              		.type	CapSense_1_fingerThreshold, %object
 787              		.size	CapSense_1_fingerThreshold, 1
 788              	CapSense_1_fingerThreshold:
 789 0004 64       		.byte	100
 790 0005 000000   		.space	3
 791              		.type	CapSense_1_hysteresis, %object
 792              		.size	CapSense_1_hysteresis, 1
 793              	CapSense_1_hysteresis:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 50


 794 0008 0A       		.byte	10
 795 0009 000000   		.space	3
 796              		.type	CapSense_1_noiseThreshold, %object
 797              		.size	CapSense_1_noiseThreshold, 1
 798              	CapSense_1_noiseThreshold:
 799 000c 14       		.byte	20
 800 000d 000000   		.bss
 801              		.align	2
 802              		.set	.LANCHOR1,. + 0
 803              		.type	CapSense_1_debounceCounter, %object
 804              		.size	CapSense_1_debounceCounter, 2
 805              	CapSense_1_debounceCounter:
 806 0000 0000     		.space	2
 807 0002 0000     		.text
 808              	.Letext0:
 809              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 810              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_1.h"
 811              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 812              		.section	.debug_info,"",%progbits
 813              	.Ldebug_info0:
 814 0000 66060000 		.4byte	0x666
 815 0004 0400     		.2byte	0x4
 816 0006 00000000 		.4byte	.Ldebug_abbrev0
 817 000a 04       		.byte	0x4
 818 000b 01       		.uleb128 0x1
 819 000c 17000000 		.4byte	.LASF59
 820 0010 01       		.byte	0x1
 821 0011 D2010000 		.4byte	.LASF60
 822 0015 39050000 		.4byte	.LASF61
 823 0019 00000000 		.4byte	.Ldebug_ranges0+0
 824 001d 00000000 		.4byte	0
 825 0021 00000000 		.4byte	.Ldebug_line0
 826 0025 02       		.uleb128 0x2
 827 0026 01       		.byte	0x1
 828 0027 06       		.byte	0x6
 829 0028 78010000 		.4byte	.LASF0
 830 002c 02       		.uleb128 0x2
 831 002d 01       		.byte	0x1
 832 002e 08       		.byte	0x8
 833 002f 2F040000 		.4byte	.LASF1
 834 0033 02       		.uleb128 0x2
 835 0034 02       		.byte	0x2
 836 0035 05       		.byte	0x5
 837 0036 72040000 		.4byte	.LASF2
 838 003a 02       		.uleb128 0x2
 839 003b 02       		.byte	0x2
 840 003c 07       		.byte	0x7
 841 003d AB020000 		.4byte	.LASF3
 842 0041 02       		.uleb128 0x2
 843 0042 04       		.byte	0x4
 844 0043 05       		.byte	0x5
 845 0044 A3010000 		.4byte	.LASF4
 846 0048 02       		.uleb128 0x2
 847 0049 04       		.byte	0x4
 848 004a 07       		.byte	0x7
 849 004b 99020000 		.4byte	.LASF5
 850 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 51


 851 0050 08       		.byte	0x8
 852 0051 05       		.byte	0x5
 853 0052 6A010000 		.4byte	.LASF6
 854 0056 02       		.uleb128 0x2
 855 0057 08       		.byte	0x8
 856 0058 07       		.byte	0x7
 857 0059 D9000000 		.4byte	.LASF7
 858 005d 03       		.uleb128 0x3
 859 005e 04       		.byte	0x4
 860 005f 05       		.byte	0x5
 861 0060 696E7400 		.ascii	"int\000"
 862 0064 02       		.uleb128 0x2
 863 0065 04       		.byte	0x4
 864 0066 07       		.byte	0x7
 865 0067 6E020000 		.4byte	.LASF8
 866 006b 04       		.uleb128 0x4
 867 006c C5010000 		.4byte	.LASF9
 868 0070 02       		.byte	0x2
 869 0071 B4       		.byte	0xb4
 870 0072 2C000000 		.4byte	0x2c
 871 0076 04       		.uleb128 0x4
 872 0077 00000000 		.4byte	.LASF10
 873 007b 02       		.byte	0x2
 874 007c B5       		.byte	0xb5
 875 007d 3A000000 		.4byte	0x3a
 876 0081 04       		.uleb128 0x4
 877 0082 FD010000 		.4byte	.LASF11
 878 0086 02       		.byte	0x2
 879 0087 B6       		.byte	0xb6
 880 0088 48000000 		.4byte	0x48
 881 008c 02       		.uleb128 0x2
 882 008d 04       		.byte	0x4
 883 008e 04       		.byte	0x4
 884 008f B6030000 		.4byte	.LASF12
 885 0093 02       		.uleb128 0x2
 886 0094 08       		.byte	0x8
 887 0095 04       		.byte	0x4
 888 0096 CB010000 		.4byte	.LASF13
 889 009a 02       		.uleb128 0x2
 890 009b 01       		.byte	0x1
 891 009c 08       		.byte	0x8
 892 009d DD040000 		.4byte	.LASF14
 893 00a1 02       		.uleb128 0x2
 894 00a2 04       		.byte	0x4
 895 00a3 07       		.byte	0x7
 896 00a4 11030000 		.4byte	.LASF15
 897 00a8 05       		.uleb128 0x5
 898 00a9 C5000000 		.4byte	.LASF16
 899 00ad 01       		.byte	0x1
 900 00ae 79       		.byte	0x79
 901 00af 00000000 		.4byte	.LFB0
 902 00b3 50000000 		.4byte	.LFE0-.LFB0
 903 00b7 01       		.uleb128 0x1
 904 00b8 9C       		.byte	0x9c
 905 00b9 DA000000 		.4byte	0xda
 906 00bd 06       		.uleb128 0x6
 907 00be BE020000 		.4byte	.LASF18
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 52


 908 00c2 01       		.byte	0x1
 909 00c3 79       		.byte	0x79
 910 00c4 6B000000 		.4byte	0x6b
 911 00c8 01       		.uleb128 0x1
 912 00c9 50       		.byte	0x50
 913 00ca 07       		.uleb128 0x7
 914 00cb 7C040000 		.4byte	.LASF20
 915 00cf 01       		.byte	0x1
 916 00d0 7D       		.byte	0x7d
 917 00d1 6B000000 		.4byte	0x6b
 918 00d5 00000000 		.4byte	.LLST0
 919 00d9 00       		.byte	0
 920 00da 05       		.uleb128 0x5
 921 00db 51030000 		.4byte	.LASF17
 922 00df 01       		.byte	0x1
 923 00e0 C2       		.byte	0xc2
 924 00e1 00000000 		.4byte	.LFB1
 925 00e5 18000000 		.4byte	.LFE1-.LFB1
 926 00e9 01       		.uleb128 0x1
 927 00ea 9C       		.byte	0x9c
 928 00eb 2C010000 		.4byte	0x12c
 929 00ef 08       		.uleb128 0x8
 930 00f0 BE020000 		.4byte	.LASF18
 931 00f4 01       		.byte	0x1
 932 00f5 C2       		.byte	0xc2
 933 00f6 6B000000 		.4byte	0x6b
 934 00fa 23000000 		.4byte	.LLST1
 935 00fe 09       		.uleb128 0x9
 936 00ff 08000000 		.4byte	.LVL4
 937 0103 39060000 		.4byte	0x639
 938 0107 12010000 		.4byte	0x112
 939 010b 0A       		.uleb128 0xa
 940 010c 01       		.uleb128 0x1
 941 010d 50       		.byte	0x50
 942 010e 02       		.uleb128 0x2
 943 010f 74       		.byte	0x74
 944 0110 00       		.sleb128 0
 945 0111 00       		.byte	0
 946 0112 0B       		.uleb128 0xb
 947 0113 0C000000 		.4byte	.LVL5
 948 0117 4A060000 		.4byte	0x64a
 949 011b 0C       		.uleb128 0xc
 950 011c 16000000 		.4byte	.LVL6
 951 0120 A8000000 		.4byte	0xa8
 952 0124 0A       		.uleb128 0xa
 953 0125 01       		.uleb128 0x1
 954 0126 50       		.byte	0x50
 955 0127 02       		.uleb128 0x2
 956 0128 74       		.byte	0x74
 957 0129 00       		.sleb128 0
 958 012a 00       		.byte	0
 959 012b 00       		.byte	0
 960 012c 05       		.uleb128 0x5
 961 012d A3000000 		.4byte	.LASF19
 962 0131 01       		.byte	0x1
 963 0132 F6       		.byte	0xf6
 964 0133 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 53


 965 0137 16000000 		.4byte	.LFE2-.LFB2
 966 013b 01       		.uleb128 0x1
 967 013c 9C       		.byte	0x9c
 968 013d 5F010000 		.4byte	0x15f
 969 0141 0D       		.uleb128 0xd
 970 0142 6900     		.ascii	"i\000"
 971 0144 01       		.byte	0x1
 972 0145 F9       		.byte	0xf9
 973 0146 6B000000 		.4byte	0x6b
 974 014a 44000000 		.4byte	.LLST2
 975 014e 0C       		.uleb128 0xc
 976 014f 0C000000 		.4byte	.LVL9
 977 0153 DA000000 		.4byte	0xda
 978 0157 0A       		.uleb128 0xa
 979 0158 01       		.uleb128 0x1
 980 0159 50       		.byte	0x50
 981 015a 02       		.uleb128 0x2
 982 015b 74       		.byte	0x74
 983 015c 00       		.sleb128 0
 984 015d 00       		.byte	0
 985 015e 00       		.byte	0
 986 015f 0E       		.uleb128 0xe
 987 0160 3D040000 		.4byte	.LASF21
 988 0164 01       		.byte	0x1
 989 0165 1701     		.2byte	0x117
 990 0167 00000000 		.4byte	.LFB3
 991 016b 48000000 		.4byte	.LFE3-.LFB3
 992 016f 01       		.uleb128 0x1
 993 0170 9C       		.byte	0x9c
 994 0171 C4010000 		.4byte	0x1c4
 995 0175 0F       		.uleb128 0xf
 996 0176 6900     		.ascii	"i\000"
 997 0178 01       		.byte	0x1
 998 0179 1A01     		.2byte	0x11a
 999 017b 6B000000 		.4byte	0x6b
 1000 017f 7B000000 		.4byte	.LLST3
 1001 0183 10       		.uleb128 0x10
 1002 0184 706F7300 		.ascii	"pos\000"
 1003 0188 01       		.byte	0x1
 1004 0189 1B01     		.2byte	0x11b
 1005 018b 6B000000 		.4byte	0x6b
 1006 018f 01       		.uleb128 0x1
 1007 0190 53       		.byte	0x53
 1008 0191 11       		.uleb128 0x11
 1009 0192 0A030000 		.4byte	.LASF22
 1010 0196 01       		.byte	0x1
 1011 0197 1C01     		.2byte	0x11c
 1012 0199 6B000000 		.4byte	0x6b
 1013 019d A6000000 		.4byte	.LLST4
 1014 01a1 0B       		.uleb128 0xb
 1015 01a2 06000000 		.4byte	.LVL12
 1016 01a6 55060000 		.4byte	0x655
 1017 01aa 0B       		.uleb128 0xb
 1018 01ab 0A000000 		.4byte	.LVL13
 1019 01af 4A060000 		.4byte	0x64a
 1020 01b3 0C       		.uleb128 0xc
 1021 01b4 34000000 		.4byte	.LVL16
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 54


 1022 01b8 A8000000 		.4byte	0xa8
 1023 01bc 0A       		.uleb128 0xa
 1024 01bd 01       		.uleb128 0x1
 1025 01be 50       		.byte	0x50
 1026 01bf 02       		.uleb128 0x2
 1027 01c0 74       		.byte	0x74
 1028 01c1 00       		.sleb128 0
 1029 01c2 00       		.byte	0
 1030 01c3 00       		.byte	0
 1031 01c4 12       		.uleb128 0x12
 1032 01c5 EE030000 		.4byte	.LASF28
 1033 01c9 01       		.byte	0x1
 1034 01ca 4102     		.2byte	0x241
 1035 01cc 6B000000 		.4byte	0x6b
 1036 01d0 00000000 		.4byte	.LFB6
 1037 01d4 90000000 		.4byte	.LFE6-.LFB6
 1038 01d8 01       		.uleb128 0x1
 1039 01d9 9C       		.byte	0x9c
 1040 01da 53020000 		.4byte	0x253
 1041 01de 13       		.uleb128 0x13
 1042 01df BE020000 		.4byte	.LASF18
 1043 01e3 01       		.byte	0x1
 1044 01e4 4102     		.2byte	0x241
 1045 01e6 6B000000 		.4byte	0x6b
 1046 01ea DD000000 		.4byte	.LLST5
 1047 01ee 14       		.uleb128 0x14
 1048 01ef 11050000 		.4byte	.LASF24
 1049 01f3 01       		.byte	0x1
 1050 01f4 4402     		.2byte	0x244
 1051 01f6 6B000000 		.4byte	0x6b
 1052 01fa 10       		.uleb128 0x10
 1053 01fb 706F7300 		.ascii	"pos\000"
 1054 01ff 01       		.byte	0x1
 1055 0200 4602     		.2byte	0x246
 1056 0202 6B000000 		.4byte	0x6b
 1057 0206 01       		.uleb128 0x1
 1058 0207 51       		.byte	0x51
 1059 0208 15       		.uleb128 0x15
 1060 0209 83040000 		.4byte	.LASF23
 1061 020d 01       		.byte	0x1
 1062 020e 4702     		.2byte	0x247
 1063 0210 6B000000 		.4byte	0x6b
 1064 0214 01       		.uleb128 0x1
 1065 0215 52       		.byte	0x52
 1066 0216 14       		.uleb128 0x14
 1067 0217 7C040000 		.4byte	.LASF20
 1068 021b 01       		.byte	0x1
 1069 021c 4902     		.2byte	0x249
 1070 021e 6B000000 		.4byte	0x6b
 1071 0222 11       		.uleb128 0x11
 1072 0223 93000000 		.4byte	.LASF25
 1073 0227 01       		.byte	0x1
 1074 0228 4A02     		.2byte	0x24a
 1075 022a 6B000000 		.4byte	0x6b
 1076 022e 17010000 		.4byte	.LLST6
 1077 0232 11       		.uleb128 0x11
 1078 0233 04020000 		.4byte	.LASF26
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 55


 1079 0237 01       		.byte	0x1
 1080 0238 4B02     		.2byte	0x24b
 1081 023a 6B000000 		.4byte	0x6b
 1082 023e 59010000 		.4byte	.LLST7
 1083 0242 11       		.uleb128 0x11
 1084 0243 01030000 		.4byte	.LASF27
 1085 0247 01       		.byte	0x1
 1086 0248 4C02     		.2byte	0x24c
 1087 024a 6B000000 		.4byte	0x6b
 1088 024e 84010000 		.4byte	.LLST8
 1089 0252 00       		.byte	0
 1090 0253 12       		.uleb128 0x12
 1091 0254 08010000 		.4byte	.LASF29
 1092 0258 01       		.byte	0x1
 1093 0259 8902     		.2byte	0x289
 1094 025b 6B000000 		.4byte	0x6b
 1095 025f 00000000 		.4byte	.LFB7
 1096 0263 0E000000 		.4byte	.LFE7-.LFB7
 1097 0267 01       		.uleb128 0x1
 1098 0268 9C       		.byte	0x9c
 1099 0269 BA020000 		.4byte	0x2ba
 1100 026d 13       		.uleb128 0x13
 1101 026e 7C040000 		.4byte	.LASF20
 1102 0272 01       		.byte	0x1
 1103 0273 8902     		.2byte	0x289
 1104 0275 6B000000 		.4byte	0x6b
 1105 0279 B8010000 		.4byte	.LLST9
 1106 027d 11       		.uleb128 0x11
 1107 027e 84010000 		.4byte	.LASF30
 1108 0282 01       		.byte	0x1
 1109 0283 8C02     		.2byte	0x28c
 1110 0285 6B000000 		.4byte	0x6b
 1111 0289 D9010000 		.4byte	.LLST10
 1112 028d 16       		.uleb128 0x16
 1113 028e 8D010000 		.4byte	.LASF31
 1114 0292 01       		.byte	0x1
 1115 0293 8D02     		.2byte	0x28d
 1116 0295 6B000000 		.4byte	0x6b
 1117 0299 01       		.byte	0x1
 1118 029a 11       		.uleb128 0x11
 1119 029b 9D010000 		.4byte	.LASF32
 1120 029f 01       		.byte	0x1
 1121 02a0 8E02     		.2byte	0x28e
 1122 02a2 6B000000 		.4byte	0x6b
 1123 02a6 F9010000 		.4byte	.LLST11
 1124 02aa 0C       		.uleb128 0xc
 1125 02ab 08000000 		.4byte	.LVL35
 1126 02af C4010000 		.4byte	0x1c4
 1127 02b3 0A       		.uleb128 0xa
 1128 02b4 01       		.uleb128 0x1
 1129 02b5 50       		.byte	0x50
 1130 02b6 01       		.uleb128 0x1
 1131 02b7 30       		.byte	0x30
 1132 02b8 00       		.byte	0
 1133 02b9 00       		.byte	0
 1134 02ba 12       		.uleb128 0x12
 1135 02bb 0D040000 		.4byte	.LASF33
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 56


 1136 02bf 01       		.byte	0x1
 1137 02c0 B502     		.2byte	0x2b5
 1138 02c2 6B000000 		.4byte	0x6b
 1139 02c6 00000000 		.4byte	.LFB8
 1140 02ca 20000000 		.4byte	.LFE8-.LFB8
 1141 02ce 01       		.uleb128 0x1
 1142 02cf 9C       		.byte	0x9c
 1143 02d0 03030000 		.4byte	0x303
 1144 02d4 0F       		.uleb128 0xf
 1145 02d5 6900     		.ascii	"i\000"
 1146 02d7 01       		.byte	0x1
 1147 02d8 B802     		.2byte	0x2b8
 1148 02da 6B000000 		.4byte	0x6b
 1149 02de 18020000 		.4byte	.LLST12
 1150 02e2 11       		.uleb128 0x11
 1151 02e3 9D010000 		.4byte	.LASF32
 1152 02e7 01       		.byte	0x1
 1153 02e8 B902     		.2byte	0x2b9
 1154 02ea 6B000000 		.4byte	0x6b
 1155 02ee 4F020000 		.4byte	.LLST13
 1156 02f2 0C       		.uleb128 0xc
 1157 02f3 10000000 		.4byte	.LVL39
 1158 02f7 53020000 		.4byte	0x253
 1159 02fb 0A       		.uleb128 0xa
 1160 02fc 01       		.uleb128 0x1
 1161 02fd 50       		.byte	0x50
 1162 02fe 02       		.uleb128 0x2
 1163 02ff 74       		.byte	0x74
 1164 0300 00       		.sleb128 0
 1165 0301 00       		.byte	0
 1166 0302 00       		.byte	0
 1167 0303 0E       		.uleb128 0xe
 1168 0304 F0000000 		.4byte	.LASF34
 1169 0308 01       		.byte	0x1
 1170 0309 E302     		.2byte	0x2e3
 1171 030b 00000000 		.4byte	.LFB9
 1172 030f 10000000 		.4byte	.LFE9-.LFB9
 1173 0313 01       		.uleb128 0x1
 1174 0314 9C       		.byte	0x9c
 1175 0315 5F030000 		.4byte	0x35f
 1176 0319 17       		.uleb128 0x17
 1177 031a 7C040000 		.4byte	.LASF20
 1178 031e 01       		.byte	0x1
 1179 031f E302     		.2byte	0x2e3
 1180 0321 6B000000 		.4byte	0x6b
 1181 0325 01       		.uleb128 0x1
 1182 0326 50       		.byte	0x50
 1183 0327 18       		.uleb128 0x18
 1184 0328 706F7300 		.ascii	"pos\000"
 1185 032c 01       		.byte	0x1
 1186 032d E602     		.2byte	0x2e6
 1187 032f 6B000000 		.4byte	0x6b
 1188 0333 00       		.byte	0
 1189 0334 16       		.uleb128 0x16
 1190 0335 0A030000 		.4byte	.LASF22
 1191 0339 01       		.byte	0x1
 1192 033a E702     		.2byte	0x2e7
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 57


 1193 033c 6B000000 		.4byte	0x6b
 1194 0340 01       		.byte	0x1
 1195 0341 11       		.uleb128 0x11
 1196 0342 84010000 		.4byte	.LASF30
 1197 0346 01       		.byte	0x1
 1198 0347 E802     		.2byte	0x2e8
 1199 0349 6B000000 		.4byte	0x6b
 1200 034d 63020000 		.4byte	.LLST14
 1201 0351 16       		.uleb128 0x16
 1202 0352 8D010000 		.4byte	.LASF31
 1203 0356 01       		.byte	0x1
 1204 0357 E902     		.2byte	0x2e9
 1205 0359 6B000000 		.4byte	0x6b
 1206 035d 01       		.byte	0x1
 1207 035e 00       		.byte	0
 1208 035f 0E       		.uleb128 0xe
 1209 0360 AC010000 		.4byte	.LASF35
 1210 0364 01       		.byte	0x1
 1211 0365 1503     		.2byte	0x315
 1212 0367 00000000 		.4byte	.LFB10
 1213 036b 10000000 		.4byte	.LFE10-.LFB10
 1214 036f 01       		.uleb128 0x1
 1215 0370 9C       		.byte	0x9c
 1216 0371 BB030000 		.4byte	0x3bb
 1217 0375 17       		.uleb128 0x17
 1218 0376 7C040000 		.4byte	.LASF20
 1219 037a 01       		.byte	0x1
 1220 037b 1503     		.2byte	0x315
 1221 037d 6B000000 		.4byte	0x6b
 1222 0381 01       		.uleb128 0x1
 1223 0382 50       		.byte	0x50
 1224 0383 18       		.uleb128 0x18
 1225 0384 706F7300 		.ascii	"pos\000"
 1226 0388 01       		.byte	0x1
 1227 0389 1803     		.2byte	0x318
 1228 038b 6B000000 		.4byte	0x6b
 1229 038f 00       		.byte	0
 1230 0390 16       		.uleb128 0x16
 1231 0391 0A030000 		.4byte	.LASF22
 1232 0395 01       		.byte	0x1
 1233 0396 1903     		.2byte	0x319
 1234 0398 6B000000 		.4byte	0x6b
 1235 039c 01       		.byte	0x1
 1236 039d 11       		.uleb128 0x11
 1237 039e 84010000 		.4byte	.LASF30
 1238 03a2 01       		.byte	0x1
 1239 03a3 1A03     		.2byte	0x31a
 1240 03a5 6B000000 		.4byte	0x6b
 1241 03a9 83020000 		.4byte	.LLST15
 1242 03ad 16       		.uleb128 0x16
 1243 03ae 8D010000 		.4byte	.LASF31
 1244 03b2 01       		.byte	0x1
 1245 03b3 1B03     		.2byte	0x31b
 1246 03b5 6B000000 		.4byte	0x6b
 1247 03b9 01       		.byte	0x1
 1248 03ba 00       		.byte	0
 1249 03bb 12       		.uleb128 0x12
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 58


 1250 03bc AF050000 		.4byte	.LASF36
 1251 03c0 01       		.byte	0x1
 1252 03c1 8E07     		.2byte	0x78e
 1253 03c3 76000000 		.4byte	0x76
 1254 03c7 00000000 		.4byte	.LFB11
 1255 03cb 0C000000 		.4byte	.LFE11-.LFB11
 1256 03cf 01       		.uleb128 0x1
 1257 03d0 9C       		.byte	0x9c
 1258 03d1 02040000 		.4byte	0x402
 1259 03d5 19       		.uleb128 0x19
 1260 03d6 783100   		.ascii	"x1\000"
 1261 03d9 01       		.byte	0x1
 1262 03da 8E07     		.2byte	0x78e
 1263 03dc 76000000 		.4byte	0x76
 1264 03e0 A3020000 		.4byte	.LLST16
 1265 03e4 1A       		.uleb128 0x1a
 1266 03e5 783200   		.ascii	"x2\000"
 1267 03e8 01       		.byte	0x1
 1268 03e9 8E07     		.2byte	0x78e
 1269 03eb 76000000 		.4byte	0x76
 1270 03ef 01       		.uleb128 0x1
 1271 03f0 51       		.byte	0x51
 1272 03f1 0F       		.uleb128 0xf
 1273 03f2 746D7000 		.ascii	"tmp\000"
 1274 03f6 01       		.byte	0x1
 1275 03f7 9107     		.2byte	0x791
 1276 03f9 81000000 		.4byte	0x81
 1277 03fd C4020000 		.4byte	.LLST17
 1278 0401 00       		.byte	0
 1279 0402 0E       		.uleb128 0xe
 1280 0403 8A040000 		.4byte	.LASF37
 1281 0407 01       		.byte	0x1
 1282 0408 5A01     		.2byte	0x15a
 1283 040a 00000000 		.4byte	.LFB4
 1284 040e E8000000 		.4byte	.LFE4-.LFB4
 1285 0412 01       		.uleb128 0x1
 1286 0413 9C       		.byte	0x9c
 1287 0414 A6040000 		.4byte	0x4a6
 1288 0418 13       		.uleb128 0x13
 1289 0419 BE020000 		.4byte	.LASF18
 1290 041d 01       		.byte	0x1
 1291 041e 5A01     		.2byte	0x15a
 1292 0420 6B000000 		.4byte	0x6b
 1293 0424 DB020000 		.4byte	.LLST18
 1294 0428 11       		.uleb128 0x11
 1295 0429 E0020000 		.4byte	.LASF38
 1296 042d 01       		.byte	0x1
 1297 042e 5D01     		.2byte	0x15d
 1298 0430 81000000 		.4byte	0x81
 1299 0434 FC020000 		.4byte	.LLST19
 1300 0438 11       		.uleb128 0x11
 1301 0439 C5050000 		.4byte	.LASF39
 1302 043d 01       		.byte	0x1
 1303 043e 5E01     		.2byte	0x15e
 1304 0440 76000000 		.4byte	0x76
 1305 0444 34030000 		.4byte	.LLST20
 1306 0448 11       		.uleb128 0x11
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 59


 1307 0449 07000000 		.4byte	.LASF40
 1308 044d 01       		.byte	0x1
 1309 044e 5F01     		.2byte	0x15f
 1310 0450 76000000 		.4byte	0x76
 1311 0454 52030000 		.4byte	.LLST21
 1312 0458 11       		.uleb128 0x11
 1313 0459 7C040000 		.4byte	.LASF20
 1314 045d 01       		.byte	0x1
 1315 045e 6001     		.2byte	0x160
 1316 0460 6B000000 		.4byte	0x6b
 1317 0464 8C030000 		.4byte	.LLST22
 1318 0468 11       		.uleb128 0x11
 1319 0469 63040000 		.4byte	.LASF41
 1320 046d 01       		.byte	0x1
 1321 046e 6101     		.2byte	0x161
 1322 0470 6B000000 		.4byte	0x6b
 1323 0474 DB030000 		.4byte	.LLST23
 1324 0478 0B       		.uleb128 0xb
 1325 0479 20000000 		.4byte	.LVL55
 1326 047d BB030000 		.4byte	0x3bb
 1327 0481 09       		.uleb128 0x9
 1328 0482 2C000000 		.4byte	.LVL58
 1329 0486 5C060000 		.4byte	0x65c
 1330 048a 95040000 		.4byte	0x495
 1331 048e 0A       		.uleb128 0xa
 1332 048f 01       		.uleb128 0x1
 1333 0490 50       		.byte	0x50
 1334 0491 02       		.uleb128 0x2
 1335 0492 74       		.byte	0x74
 1336 0493 00       		.sleb128 0
 1337 0494 00       		.byte	0
 1338 0495 0C       		.uleb128 0xc
 1339 0496 60000000 		.4byte	.LVL63
 1340 049a A8000000 		.4byte	0xa8
 1341 049e 0A       		.uleb128 0xa
 1342 049f 01       		.uleb128 0x1
 1343 04a0 50       		.byte	0x50
 1344 04a1 02       		.uleb128 0x2
 1345 04a2 74       		.byte	0x74
 1346 04a3 00       		.sleb128 0
 1347 04a4 00       		.byte	0
 1348 04a5 00       		.byte	0
 1349 04a6 0E       		.uleb128 0xe
 1350 04a7 75030000 		.4byte	.LASF42
 1351 04ab 01       		.byte	0x1
 1352 04ac 0702     		.2byte	0x207
 1353 04ae 00000000 		.4byte	.LFB5
 1354 04b2 30000000 		.4byte	.LFE5-.LFB5
 1355 04b6 01       		.uleb128 0x1
 1356 04b7 9C       		.byte	0x9c
 1357 04b8 F9040000 		.4byte	0x4f9
 1358 04bc 0F       		.uleb128 0xf
 1359 04bd 6900     		.ascii	"i\000"
 1360 04bf 01       		.byte	0x1
 1361 04c0 0A02     		.2byte	0x20a
 1362 04c2 6B000000 		.4byte	0x6b
 1363 04c6 26040000 		.4byte	.LLST24
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 60


 1364 04ca 10       		.uleb128 0x10
 1365 04cb 706F7300 		.ascii	"pos\000"
 1366 04cf 01       		.byte	0x1
 1367 04d0 0B02     		.2byte	0x20b
 1368 04d2 6B000000 		.4byte	0x6b
 1369 04d6 01       		.uleb128 0x1
 1370 04d7 53       		.byte	0x53
 1371 04d8 11       		.uleb128 0x11
 1372 04d9 0A030000 		.4byte	.LASF22
 1373 04dd 01       		.byte	0x1
 1374 04de 0C02     		.2byte	0x20c
 1375 04e0 6B000000 		.4byte	0x6b
 1376 04e4 5D040000 		.4byte	.LLST25
 1377 04e8 0C       		.uleb128 0xc
 1378 04e9 20000000 		.4byte	.LVL75
 1379 04ed 02040000 		.4byte	0x402
 1380 04f1 0A       		.uleb128 0xa
 1381 04f2 01       		.uleb128 0x1
 1382 04f3 50       		.byte	0x50
 1383 04f4 02       		.uleb128 0x2
 1384 04f5 74       		.byte	0x74
 1385 04f6 00       		.sleb128 0
 1386 04f7 00       		.byte	0
 1387 04f8 00       		.byte	0
 1388 04f9 1B       		.uleb128 0x1b
 1389 04fa 76000000 		.4byte	0x76
 1390 04fe 09050000 		.4byte	0x509
 1391 0502 1C       		.uleb128 0x1c
 1392 0503 A1000000 		.4byte	0xa1
 1393 0507 00       		.byte	0
 1394 0508 00       		.byte	0
 1395 0509 1D       		.uleb128 0x1d
 1396 050a 55010000 		.4byte	.LASF43
 1397 050e 03       		.byte	0x3
 1398 050f B902     		.2byte	0x2b9
 1399 0511 F9040000 		.4byte	0x4f9
 1400 0515 1E       		.uleb128 0x1e
 1401 0516 D4030000 		.4byte	.LASF44
 1402 051a 01       		.byte	0x1
 1403 051b 21       		.byte	0x21
 1404 051c F9040000 		.4byte	0x4f9
 1405 0520 05       		.uleb128 0x5
 1406 0521 03       		.byte	0x3
 1407 0522 00000000 		.4byte	CapSense_1_rawFilterData1
 1408 0526 1B       		.uleb128 0x1b
 1409 0527 6B000000 		.4byte	0x6b
 1410 052b 36050000 		.4byte	0x536
 1411 052f 1C       		.uleb128 0x1c
 1412 0530 A1000000 		.4byte	0xa1
 1413 0534 00       		.byte	0
 1414 0535 00       		.byte	0
 1415 0536 1D       		.uleb128 0x1d
 1416 0537 E5020000 		.4byte	.LASF45
 1417 053b 04       		.byte	0x4
 1418 053c 0301     		.2byte	0x103
 1419 053e 26050000 		.4byte	0x526
 1420 0542 1D       		.uleb128 0x1d
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 61


 1421 0543 39030000 		.4byte	.LASF46
 1422 0547 04       		.byte	0x4
 1423 0548 0401     		.2byte	0x104
 1424 054a 4E050000 		.4byte	0x54e
 1425 054e 1F       		.uleb128 0x1f
 1426 054f 26050000 		.4byte	0x526
 1427 0553 1E       		.uleb128 0x1e
 1428 0554 1F050000 		.4byte	.LASF47
 1429 0558 01       		.byte	0x1
 1430 0559 29       		.byte	0x29
 1431 055a F9040000 		.4byte	0x4f9
 1432 055e 05       		.uleb128 0x5
 1433 055f 03       		.byte	0x3
 1434 0560 00000000 		.4byte	CapSense_1_sensorBaseline
 1435 0564 1E       		.uleb128 0x1e
 1436 0565 F4040000 		.4byte	.LASF48
 1437 0569 01       		.byte	0x1
 1438 056a 2A       		.byte	0x2a
 1439 056b 26050000 		.4byte	0x526
 1440 056f 05       		.uleb128 0x5
 1441 0570 03       		.byte	0x3
 1442 0571 00000000 		.4byte	CapSense_1_sensorBaselineLow
 1443 0575 1E       		.uleb128 0x1e
 1444 0576 AA040000 		.4byte	.LASF49
 1445 057a 01       		.byte	0x1
 1446 057b 2B       		.byte	0x2b
 1447 057c 26050000 		.4byte	0x526
 1448 0580 05       		.uleb128 0x5
 1449 0581 03       		.byte	0x3
 1450 0582 00000000 		.4byte	CapSense_1_sensorSignal
 1451 0586 1E       		.uleb128 0x1e
 1452 0587 BC030000 		.4byte	.LASF50
 1453 058b 01       		.byte	0x1
 1454 058c 2C       		.byte	0x2c
 1455 058d 26050000 		.4byte	0x526
 1456 0591 05       		.uleb128 0x5
 1457 0592 03       		.byte	0x3
 1458 0593 00000000 		.4byte	CapSense_1_sensorOnMask
 1459 0597 1E       		.uleb128 0x1e
 1460 0598 1A030000 		.4byte	.LASF51
 1461 059c 01       		.byte	0x1
 1462 059d 2E       		.byte	0x2e
 1463 059e 26050000 		.4byte	0x526
 1464 05a2 05       		.uleb128 0x5
 1465 05a3 03       		.byte	0x3
 1466 05a4 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 1467 05a8 1E       		.uleb128 0x1e
 1468 05a9 53020000 		.4byte	.LASF52
 1469 05ad 01       		.byte	0x1
 1470 05ae 30       		.byte	0x30
 1471 05af 26050000 		.4byte	0x526
 1472 05b3 05       		.uleb128 0x5
 1473 05b4 03       		.byte	0x3
 1474 05b5 00000000 		.4byte	CapSense_1_fingerThreshold
 1475 05b9 1E       		.uleb128 0x1e
 1476 05ba 27010000 		.4byte	.LASF53
 1477 05be 01       		.byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 62


 1478 05bf 34       		.byte	0x34
 1479 05c0 26050000 		.4byte	0x526
 1480 05c4 05       		.uleb128 0x5
 1481 05c5 03       		.byte	0x3
 1482 05c6 00000000 		.4byte	CapSense_1_noiseThreshold
 1483 05ca 1E       		.uleb128 0x1e
 1484 05cb 25020000 		.4byte	.LASF54
 1485 05cf 01       		.byte	0x1
 1486 05d0 38       		.byte	0x38
 1487 05d1 26050000 		.4byte	0x526
 1488 05d5 05       		.uleb128 0x5
 1489 05d6 03       		.byte	0x3
 1490 05d7 00000000 		.4byte	CapSense_1_hysteresis
 1491 05db 1E       		.uleb128 0x1e
 1492 05dc 41010000 		.4byte	.LASF55
 1493 05e0 01       		.byte	0x1
 1494 05e1 3C       		.byte	0x3c
 1495 05e2 26050000 		.4byte	0x526
 1496 05e6 05       		.uleb128 0x5
 1497 05e7 03       		.byte	0x3
 1498 05e8 00000000 		.4byte	CapSense_1_debounce
 1499 05ec 1B       		.uleb128 0x1b
 1500 05ed 6B000000 		.4byte	0x6b
 1501 05f1 FC050000 		.4byte	0x5fc
 1502 05f5 1C       		.uleb128 0x1c
 1503 05f6 A1000000 		.4byte	0xa1
 1504 05fa 01       		.byte	0x1
 1505 05fb 00       		.byte	0
 1506 05fc 1E       		.uleb128 0x1e
 1507 05fd C2040000 		.4byte	.LASF56
 1508 0601 01       		.byte	0x1
 1509 0602 40       		.byte	0x40
 1510 0603 EC050000 		.4byte	0x5ec
 1511 0607 05       		.uleb128 0x5
 1512 0608 03       		.byte	0x3
 1513 0609 00000000 		.4byte	CapSense_1_debounceCounter
 1514 060d 1E       		.uleb128 0x1e
 1515 060e 3B020000 		.4byte	.LASF57
 1516 0612 01       		.byte	0x1
 1517 0613 44       		.byte	0x44
 1518 0614 1E060000 		.4byte	0x61e
 1519 0618 05       		.uleb128 0x5
 1520 0619 03       		.byte	0x3
 1521 061a 00000000 		.4byte	CapSense_1_rawDataIndex
 1522 061e 1F       		.uleb128 0x1f
 1523 061f 26050000 		.4byte	0x526
 1524 0623 1E       		.uleb128 0x1e
 1525 0624 C5020000 		.4byte	.LASF58
 1526 0628 01       		.byte	0x1
 1527 0629 49       		.byte	0x49
 1528 062a 34060000 		.4byte	0x634
 1529 062e 05       		.uleb128 0x5
 1530 062f 03       		.byte	0x3
 1531 0630 00000000 		.4byte	CapSense_1_numberOfSensors
 1532 0634 1F       		.uleb128 0x1f
 1533 0635 26050000 		.4byte	0x526
 1534 0639 20       		.uleb128 0x20
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 63


 1535 063a 0F020000 		.4byte	.LASF62
 1536 063e 03       		.byte	0x3
 1537 063f 9A       		.byte	0x9a
 1538 0640 4A060000 		.4byte	0x64a
 1539 0644 21       		.uleb128 0x21
 1540 0645 6B000000 		.4byte	0x6b
 1541 0649 00       		.byte	0
 1542 064a 22       		.uleb128 0x22
 1543 064b E2040000 		.4byte	.LASF63
 1544 064f 03       		.byte	0x3
 1545 0650 99       		.byte	0x99
 1546 0651 6B000000 		.4byte	0x6b
 1547 0655 23       		.uleb128 0x23
 1548 0656 7B020000 		.4byte	.LASF64
 1549 065a 03       		.byte	0x3
 1550 065b 9B       		.byte	0x9b
 1551 065c 24       		.uleb128 0x24
 1552 065d 97030000 		.4byte	.LASF65
 1553 0661 04       		.byte	0x4
 1554 0662 C0       		.byte	0xc0
 1555 0663 21       		.uleb128 0x21
 1556 0664 6B000000 		.4byte	0x6b
 1557 0668 00       		.byte	0
 1558 0669 00       		.byte	0
 1559              		.section	.debug_abbrev,"",%progbits
 1560              	.Ldebug_abbrev0:
 1561 0000 01       		.uleb128 0x1
 1562 0001 11       		.uleb128 0x11
 1563 0002 01       		.byte	0x1
 1564 0003 25       		.uleb128 0x25
 1565 0004 0E       		.uleb128 0xe
 1566 0005 13       		.uleb128 0x13
 1567 0006 0B       		.uleb128 0xb
 1568 0007 03       		.uleb128 0x3
 1569 0008 0E       		.uleb128 0xe
 1570 0009 1B       		.uleb128 0x1b
 1571 000a 0E       		.uleb128 0xe
 1572 000b 55       		.uleb128 0x55
 1573 000c 17       		.uleb128 0x17
 1574 000d 11       		.uleb128 0x11
 1575 000e 01       		.uleb128 0x1
 1576 000f 10       		.uleb128 0x10
 1577 0010 17       		.uleb128 0x17
 1578 0011 00       		.byte	0
 1579 0012 00       		.byte	0
 1580 0013 02       		.uleb128 0x2
 1581 0014 24       		.uleb128 0x24
 1582 0015 00       		.byte	0
 1583 0016 0B       		.uleb128 0xb
 1584 0017 0B       		.uleb128 0xb
 1585 0018 3E       		.uleb128 0x3e
 1586 0019 0B       		.uleb128 0xb
 1587 001a 03       		.uleb128 0x3
 1588 001b 0E       		.uleb128 0xe
 1589 001c 00       		.byte	0
 1590 001d 00       		.byte	0
 1591 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 64


 1592 001f 24       		.uleb128 0x24
 1593 0020 00       		.byte	0
 1594 0021 0B       		.uleb128 0xb
 1595 0022 0B       		.uleb128 0xb
 1596 0023 3E       		.uleb128 0x3e
 1597 0024 0B       		.uleb128 0xb
 1598 0025 03       		.uleb128 0x3
 1599 0026 08       		.uleb128 0x8
 1600 0027 00       		.byte	0
 1601 0028 00       		.byte	0
 1602 0029 04       		.uleb128 0x4
 1603 002a 16       		.uleb128 0x16
 1604 002b 00       		.byte	0
 1605 002c 03       		.uleb128 0x3
 1606 002d 0E       		.uleb128 0xe
 1607 002e 3A       		.uleb128 0x3a
 1608 002f 0B       		.uleb128 0xb
 1609 0030 3B       		.uleb128 0x3b
 1610 0031 0B       		.uleb128 0xb
 1611 0032 49       		.uleb128 0x49
 1612 0033 13       		.uleb128 0x13
 1613 0034 00       		.byte	0
 1614 0035 00       		.byte	0
 1615 0036 05       		.uleb128 0x5
 1616 0037 2E       		.uleb128 0x2e
 1617 0038 01       		.byte	0x1
 1618 0039 3F       		.uleb128 0x3f
 1619 003a 19       		.uleb128 0x19
 1620 003b 03       		.uleb128 0x3
 1621 003c 0E       		.uleb128 0xe
 1622 003d 3A       		.uleb128 0x3a
 1623 003e 0B       		.uleb128 0xb
 1624 003f 3B       		.uleb128 0x3b
 1625 0040 0B       		.uleb128 0xb
 1626 0041 27       		.uleb128 0x27
 1627 0042 19       		.uleb128 0x19
 1628 0043 11       		.uleb128 0x11
 1629 0044 01       		.uleb128 0x1
 1630 0045 12       		.uleb128 0x12
 1631 0046 06       		.uleb128 0x6
 1632 0047 40       		.uleb128 0x40
 1633 0048 18       		.uleb128 0x18
 1634 0049 9742     		.uleb128 0x2117
 1635 004b 19       		.uleb128 0x19
 1636 004c 01       		.uleb128 0x1
 1637 004d 13       		.uleb128 0x13
 1638 004e 00       		.byte	0
 1639 004f 00       		.byte	0
 1640 0050 06       		.uleb128 0x6
 1641 0051 05       		.uleb128 0x5
 1642 0052 00       		.byte	0
 1643 0053 03       		.uleb128 0x3
 1644 0054 0E       		.uleb128 0xe
 1645 0055 3A       		.uleb128 0x3a
 1646 0056 0B       		.uleb128 0xb
 1647 0057 3B       		.uleb128 0x3b
 1648 0058 0B       		.uleb128 0xb
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 65


 1649 0059 49       		.uleb128 0x49
 1650 005a 13       		.uleb128 0x13
 1651 005b 02       		.uleb128 0x2
 1652 005c 18       		.uleb128 0x18
 1653 005d 00       		.byte	0
 1654 005e 00       		.byte	0
 1655 005f 07       		.uleb128 0x7
 1656 0060 34       		.uleb128 0x34
 1657 0061 00       		.byte	0
 1658 0062 03       		.uleb128 0x3
 1659 0063 0E       		.uleb128 0xe
 1660 0064 3A       		.uleb128 0x3a
 1661 0065 0B       		.uleb128 0xb
 1662 0066 3B       		.uleb128 0x3b
 1663 0067 0B       		.uleb128 0xb
 1664 0068 49       		.uleb128 0x49
 1665 0069 13       		.uleb128 0x13
 1666 006a 02       		.uleb128 0x2
 1667 006b 17       		.uleb128 0x17
 1668 006c 00       		.byte	0
 1669 006d 00       		.byte	0
 1670 006e 08       		.uleb128 0x8
 1671 006f 05       		.uleb128 0x5
 1672 0070 00       		.byte	0
 1673 0071 03       		.uleb128 0x3
 1674 0072 0E       		.uleb128 0xe
 1675 0073 3A       		.uleb128 0x3a
 1676 0074 0B       		.uleb128 0xb
 1677 0075 3B       		.uleb128 0x3b
 1678 0076 0B       		.uleb128 0xb
 1679 0077 49       		.uleb128 0x49
 1680 0078 13       		.uleb128 0x13
 1681 0079 02       		.uleb128 0x2
 1682 007a 17       		.uleb128 0x17
 1683 007b 00       		.byte	0
 1684 007c 00       		.byte	0
 1685 007d 09       		.uleb128 0x9
 1686 007e 898201   		.uleb128 0x4109
 1687 0081 01       		.byte	0x1
 1688 0082 11       		.uleb128 0x11
 1689 0083 01       		.uleb128 0x1
 1690 0084 31       		.uleb128 0x31
 1691 0085 13       		.uleb128 0x13
 1692 0086 01       		.uleb128 0x1
 1693 0087 13       		.uleb128 0x13
 1694 0088 00       		.byte	0
 1695 0089 00       		.byte	0
 1696 008a 0A       		.uleb128 0xa
 1697 008b 8A8201   		.uleb128 0x410a
 1698 008e 00       		.byte	0
 1699 008f 02       		.uleb128 0x2
 1700 0090 18       		.uleb128 0x18
 1701 0091 9142     		.uleb128 0x2111
 1702 0093 18       		.uleb128 0x18
 1703 0094 00       		.byte	0
 1704 0095 00       		.byte	0
 1705 0096 0B       		.uleb128 0xb
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 66


 1706 0097 898201   		.uleb128 0x4109
 1707 009a 00       		.byte	0
 1708 009b 11       		.uleb128 0x11
 1709 009c 01       		.uleb128 0x1
 1710 009d 31       		.uleb128 0x31
 1711 009e 13       		.uleb128 0x13
 1712 009f 00       		.byte	0
 1713 00a0 00       		.byte	0
 1714 00a1 0C       		.uleb128 0xc
 1715 00a2 898201   		.uleb128 0x4109
 1716 00a5 01       		.byte	0x1
 1717 00a6 11       		.uleb128 0x11
 1718 00a7 01       		.uleb128 0x1
 1719 00a8 31       		.uleb128 0x31
 1720 00a9 13       		.uleb128 0x13
 1721 00aa 00       		.byte	0
 1722 00ab 00       		.byte	0
 1723 00ac 0D       		.uleb128 0xd
 1724 00ad 34       		.uleb128 0x34
 1725 00ae 00       		.byte	0
 1726 00af 03       		.uleb128 0x3
 1727 00b0 08       		.uleb128 0x8
 1728 00b1 3A       		.uleb128 0x3a
 1729 00b2 0B       		.uleb128 0xb
 1730 00b3 3B       		.uleb128 0x3b
 1731 00b4 0B       		.uleb128 0xb
 1732 00b5 49       		.uleb128 0x49
 1733 00b6 13       		.uleb128 0x13
 1734 00b7 02       		.uleb128 0x2
 1735 00b8 17       		.uleb128 0x17
 1736 00b9 00       		.byte	0
 1737 00ba 00       		.byte	0
 1738 00bb 0E       		.uleb128 0xe
 1739 00bc 2E       		.uleb128 0x2e
 1740 00bd 01       		.byte	0x1
 1741 00be 3F       		.uleb128 0x3f
 1742 00bf 19       		.uleb128 0x19
 1743 00c0 03       		.uleb128 0x3
 1744 00c1 0E       		.uleb128 0xe
 1745 00c2 3A       		.uleb128 0x3a
 1746 00c3 0B       		.uleb128 0xb
 1747 00c4 3B       		.uleb128 0x3b
 1748 00c5 05       		.uleb128 0x5
 1749 00c6 27       		.uleb128 0x27
 1750 00c7 19       		.uleb128 0x19
 1751 00c8 11       		.uleb128 0x11
 1752 00c9 01       		.uleb128 0x1
 1753 00ca 12       		.uleb128 0x12
 1754 00cb 06       		.uleb128 0x6
 1755 00cc 40       		.uleb128 0x40
 1756 00cd 18       		.uleb128 0x18
 1757 00ce 9742     		.uleb128 0x2117
 1758 00d0 19       		.uleb128 0x19
 1759 00d1 01       		.uleb128 0x1
 1760 00d2 13       		.uleb128 0x13
 1761 00d3 00       		.byte	0
 1762 00d4 00       		.byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 67


 1763 00d5 0F       		.uleb128 0xf
 1764 00d6 34       		.uleb128 0x34
 1765 00d7 00       		.byte	0
 1766 00d8 03       		.uleb128 0x3
 1767 00d9 08       		.uleb128 0x8
 1768 00da 3A       		.uleb128 0x3a
 1769 00db 0B       		.uleb128 0xb
 1770 00dc 3B       		.uleb128 0x3b
 1771 00dd 05       		.uleb128 0x5
 1772 00de 49       		.uleb128 0x49
 1773 00df 13       		.uleb128 0x13
 1774 00e0 02       		.uleb128 0x2
 1775 00e1 17       		.uleb128 0x17
 1776 00e2 00       		.byte	0
 1777 00e3 00       		.byte	0
 1778 00e4 10       		.uleb128 0x10
 1779 00e5 34       		.uleb128 0x34
 1780 00e6 00       		.byte	0
 1781 00e7 03       		.uleb128 0x3
 1782 00e8 08       		.uleb128 0x8
 1783 00e9 3A       		.uleb128 0x3a
 1784 00ea 0B       		.uleb128 0xb
 1785 00eb 3B       		.uleb128 0x3b
 1786 00ec 05       		.uleb128 0x5
 1787 00ed 49       		.uleb128 0x49
 1788 00ee 13       		.uleb128 0x13
 1789 00ef 02       		.uleb128 0x2
 1790 00f0 18       		.uleb128 0x18
 1791 00f1 00       		.byte	0
 1792 00f2 00       		.byte	0
 1793 00f3 11       		.uleb128 0x11
 1794 00f4 34       		.uleb128 0x34
 1795 00f5 00       		.byte	0
 1796 00f6 03       		.uleb128 0x3
 1797 00f7 0E       		.uleb128 0xe
 1798 00f8 3A       		.uleb128 0x3a
 1799 00f9 0B       		.uleb128 0xb
 1800 00fa 3B       		.uleb128 0x3b
 1801 00fb 05       		.uleb128 0x5
 1802 00fc 49       		.uleb128 0x49
 1803 00fd 13       		.uleb128 0x13
 1804 00fe 02       		.uleb128 0x2
 1805 00ff 17       		.uleb128 0x17
 1806 0100 00       		.byte	0
 1807 0101 00       		.byte	0
 1808 0102 12       		.uleb128 0x12
 1809 0103 2E       		.uleb128 0x2e
 1810 0104 01       		.byte	0x1
 1811 0105 3F       		.uleb128 0x3f
 1812 0106 19       		.uleb128 0x19
 1813 0107 03       		.uleb128 0x3
 1814 0108 0E       		.uleb128 0xe
 1815 0109 3A       		.uleb128 0x3a
 1816 010a 0B       		.uleb128 0xb
 1817 010b 3B       		.uleb128 0x3b
 1818 010c 05       		.uleb128 0x5
 1819 010d 27       		.uleb128 0x27
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 68


 1820 010e 19       		.uleb128 0x19
 1821 010f 49       		.uleb128 0x49
 1822 0110 13       		.uleb128 0x13
 1823 0111 11       		.uleb128 0x11
 1824 0112 01       		.uleb128 0x1
 1825 0113 12       		.uleb128 0x12
 1826 0114 06       		.uleb128 0x6
 1827 0115 40       		.uleb128 0x40
 1828 0116 18       		.uleb128 0x18
 1829 0117 9742     		.uleb128 0x2117
 1830 0119 19       		.uleb128 0x19
 1831 011a 01       		.uleb128 0x1
 1832 011b 13       		.uleb128 0x13
 1833 011c 00       		.byte	0
 1834 011d 00       		.byte	0
 1835 011e 13       		.uleb128 0x13
 1836 011f 05       		.uleb128 0x5
 1837 0120 00       		.byte	0
 1838 0121 03       		.uleb128 0x3
 1839 0122 0E       		.uleb128 0xe
 1840 0123 3A       		.uleb128 0x3a
 1841 0124 0B       		.uleb128 0xb
 1842 0125 3B       		.uleb128 0x3b
 1843 0126 05       		.uleb128 0x5
 1844 0127 49       		.uleb128 0x49
 1845 0128 13       		.uleb128 0x13
 1846 0129 02       		.uleb128 0x2
 1847 012a 17       		.uleb128 0x17
 1848 012b 00       		.byte	0
 1849 012c 00       		.byte	0
 1850 012d 14       		.uleb128 0x14
 1851 012e 34       		.uleb128 0x34
 1852 012f 00       		.byte	0
 1853 0130 03       		.uleb128 0x3
 1854 0131 0E       		.uleb128 0xe
 1855 0132 3A       		.uleb128 0x3a
 1856 0133 0B       		.uleb128 0xb
 1857 0134 3B       		.uleb128 0x3b
 1858 0135 05       		.uleb128 0x5
 1859 0136 49       		.uleb128 0x49
 1860 0137 13       		.uleb128 0x13
 1861 0138 00       		.byte	0
 1862 0139 00       		.byte	0
 1863 013a 15       		.uleb128 0x15
 1864 013b 34       		.uleb128 0x34
 1865 013c 00       		.byte	0
 1866 013d 03       		.uleb128 0x3
 1867 013e 0E       		.uleb128 0xe
 1868 013f 3A       		.uleb128 0x3a
 1869 0140 0B       		.uleb128 0xb
 1870 0141 3B       		.uleb128 0x3b
 1871 0142 05       		.uleb128 0x5
 1872 0143 49       		.uleb128 0x49
 1873 0144 13       		.uleb128 0x13
 1874 0145 02       		.uleb128 0x2
 1875 0146 18       		.uleb128 0x18
 1876 0147 00       		.byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 69


 1877 0148 00       		.byte	0
 1878 0149 16       		.uleb128 0x16
 1879 014a 34       		.uleb128 0x34
 1880 014b 00       		.byte	0
 1881 014c 03       		.uleb128 0x3
 1882 014d 0E       		.uleb128 0xe
 1883 014e 3A       		.uleb128 0x3a
 1884 014f 0B       		.uleb128 0xb
 1885 0150 3B       		.uleb128 0x3b
 1886 0151 05       		.uleb128 0x5
 1887 0152 49       		.uleb128 0x49
 1888 0153 13       		.uleb128 0x13
 1889 0154 1C       		.uleb128 0x1c
 1890 0155 0B       		.uleb128 0xb
 1891 0156 00       		.byte	0
 1892 0157 00       		.byte	0
 1893 0158 17       		.uleb128 0x17
 1894 0159 05       		.uleb128 0x5
 1895 015a 00       		.byte	0
 1896 015b 03       		.uleb128 0x3
 1897 015c 0E       		.uleb128 0xe
 1898 015d 3A       		.uleb128 0x3a
 1899 015e 0B       		.uleb128 0xb
 1900 015f 3B       		.uleb128 0x3b
 1901 0160 05       		.uleb128 0x5
 1902 0161 49       		.uleb128 0x49
 1903 0162 13       		.uleb128 0x13
 1904 0163 02       		.uleb128 0x2
 1905 0164 18       		.uleb128 0x18
 1906 0165 00       		.byte	0
 1907 0166 00       		.byte	0
 1908 0167 18       		.uleb128 0x18
 1909 0168 34       		.uleb128 0x34
 1910 0169 00       		.byte	0
 1911 016a 03       		.uleb128 0x3
 1912 016b 08       		.uleb128 0x8
 1913 016c 3A       		.uleb128 0x3a
 1914 016d 0B       		.uleb128 0xb
 1915 016e 3B       		.uleb128 0x3b
 1916 016f 05       		.uleb128 0x5
 1917 0170 49       		.uleb128 0x49
 1918 0171 13       		.uleb128 0x13
 1919 0172 1C       		.uleb128 0x1c
 1920 0173 0B       		.uleb128 0xb
 1921 0174 00       		.byte	0
 1922 0175 00       		.byte	0
 1923 0176 19       		.uleb128 0x19
 1924 0177 05       		.uleb128 0x5
 1925 0178 00       		.byte	0
 1926 0179 03       		.uleb128 0x3
 1927 017a 08       		.uleb128 0x8
 1928 017b 3A       		.uleb128 0x3a
 1929 017c 0B       		.uleb128 0xb
 1930 017d 3B       		.uleb128 0x3b
 1931 017e 05       		.uleb128 0x5
 1932 017f 49       		.uleb128 0x49
 1933 0180 13       		.uleb128 0x13
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 70


 1934 0181 02       		.uleb128 0x2
 1935 0182 17       		.uleb128 0x17
 1936 0183 00       		.byte	0
 1937 0184 00       		.byte	0
 1938 0185 1A       		.uleb128 0x1a
 1939 0186 05       		.uleb128 0x5
 1940 0187 00       		.byte	0
 1941 0188 03       		.uleb128 0x3
 1942 0189 08       		.uleb128 0x8
 1943 018a 3A       		.uleb128 0x3a
 1944 018b 0B       		.uleb128 0xb
 1945 018c 3B       		.uleb128 0x3b
 1946 018d 05       		.uleb128 0x5
 1947 018e 49       		.uleb128 0x49
 1948 018f 13       		.uleb128 0x13
 1949 0190 02       		.uleb128 0x2
 1950 0191 18       		.uleb128 0x18
 1951 0192 00       		.byte	0
 1952 0193 00       		.byte	0
 1953 0194 1B       		.uleb128 0x1b
 1954 0195 01       		.uleb128 0x1
 1955 0196 01       		.byte	0x1
 1956 0197 49       		.uleb128 0x49
 1957 0198 13       		.uleb128 0x13
 1958 0199 01       		.uleb128 0x1
 1959 019a 13       		.uleb128 0x13
 1960 019b 00       		.byte	0
 1961 019c 00       		.byte	0
 1962 019d 1C       		.uleb128 0x1c
 1963 019e 21       		.uleb128 0x21
 1964 019f 00       		.byte	0
 1965 01a0 49       		.uleb128 0x49
 1966 01a1 13       		.uleb128 0x13
 1967 01a2 2F       		.uleb128 0x2f
 1968 01a3 0B       		.uleb128 0xb
 1969 01a4 00       		.byte	0
 1970 01a5 00       		.byte	0
 1971 01a6 1D       		.uleb128 0x1d
 1972 01a7 34       		.uleb128 0x34
 1973 01a8 00       		.byte	0
 1974 01a9 03       		.uleb128 0x3
 1975 01aa 0E       		.uleb128 0xe
 1976 01ab 3A       		.uleb128 0x3a
 1977 01ac 0B       		.uleb128 0xb
 1978 01ad 3B       		.uleb128 0x3b
 1979 01ae 05       		.uleb128 0x5
 1980 01af 49       		.uleb128 0x49
 1981 01b0 13       		.uleb128 0x13
 1982 01b1 3F       		.uleb128 0x3f
 1983 01b2 19       		.uleb128 0x19
 1984 01b3 3C       		.uleb128 0x3c
 1985 01b4 19       		.uleb128 0x19
 1986 01b5 00       		.byte	0
 1987 01b6 00       		.byte	0
 1988 01b7 1E       		.uleb128 0x1e
 1989 01b8 34       		.uleb128 0x34
 1990 01b9 00       		.byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 71


 1991 01ba 03       		.uleb128 0x3
 1992 01bb 0E       		.uleb128 0xe
 1993 01bc 3A       		.uleb128 0x3a
 1994 01bd 0B       		.uleb128 0xb
 1995 01be 3B       		.uleb128 0x3b
 1996 01bf 0B       		.uleb128 0xb
 1997 01c0 49       		.uleb128 0x49
 1998 01c1 13       		.uleb128 0x13
 1999 01c2 3F       		.uleb128 0x3f
 2000 01c3 19       		.uleb128 0x19
 2001 01c4 02       		.uleb128 0x2
 2002 01c5 18       		.uleb128 0x18
 2003 01c6 00       		.byte	0
 2004 01c7 00       		.byte	0
 2005 01c8 1F       		.uleb128 0x1f
 2006 01c9 26       		.uleb128 0x26
 2007 01ca 00       		.byte	0
 2008 01cb 49       		.uleb128 0x49
 2009 01cc 13       		.uleb128 0x13
 2010 01cd 00       		.byte	0
 2011 01ce 00       		.byte	0
 2012 01cf 20       		.uleb128 0x20
 2013 01d0 2E       		.uleb128 0x2e
 2014 01d1 01       		.byte	0x1
 2015 01d2 3F       		.uleb128 0x3f
 2016 01d3 19       		.uleb128 0x19
 2017 01d4 03       		.uleb128 0x3
 2018 01d5 0E       		.uleb128 0xe
 2019 01d6 3A       		.uleb128 0x3a
 2020 01d7 0B       		.uleb128 0xb
 2021 01d8 3B       		.uleb128 0x3b
 2022 01d9 0B       		.uleb128 0xb
 2023 01da 27       		.uleb128 0x27
 2024 01db 19       		.uleb128 0x19
 2025 01dc 3C       		.uleb128 0x3c
 2026 01dd 19       		.uleb128 0x19
 2027 01de 01       		.uleb128 0x1
 2028 01df 13       		.uleb128 0x13
 2029 01e0 00       		.byte	0
 2030 01e1 00       		.byte	0
 2031 01e2 21       		.uleb128 0x21
 2032 01e3 05       		.uleb128 0x5
 2033 01e4 00       		.byte	0
 2034 01e5 49       		.uleb128 0x49
 2035 01e6 13       		.uleb128 0x13
 2036 01e7 00       		.byte	0
 2037 01e8 00       		.byte	0
 2038 01e9 22       		.uleb128 0x22
 2039 01ea 2E       		.uleb128 0x2e
 2040 01eb 00       		.byte	0
 2041 01ec 3F       		.uleb128 0x3f
 2042 01ed 19       		.uleb128 0x19
 2043 01ee 03       		.uleb128 0x3
 2044 01ef 0E       		.uleb128 0xe
 2045 01f0 3A       		.uleb128 0x3a
 2046 01f1 0B       		.uleb128 0xb
 2047 01f2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 72


 2048 01f3 0B       		.uleb128 0xb
 2049 01f4 27       		.uleb128 0x27
 2050 01f5 19       		.uleb128 0x19
 2051 01f6 49       		.uleb128 0x49
 2052 01f7 13       		.uleb128 0x13
 2053 01f8 3C       		.uleb128 0x3c
 2054 01f9 19       		.uleb128 0x19
 2055 01fa 00       		.byte	0
 2056 01fb 00       		.byte	0
 2057 01fc 23       		.uleb128 0x23
 2058 01fd 2E       		.uleb128 0x2e
 2059 01fe 00       		.byte	0
 2060 01ff 3F       		.uleb128 0x3f
 2061 0200 19       		.uleb128 0x19
 2062 0201 03       		.uleb128 0x3
 2063 0202 0E       		.uleb128 0xe
 2064 0203 3A       		.uleb128 0x3a
 2065 0204 0B       		.uleb128 0xb
 2066 0205 3B       		.uleb128 0x3b
 2067 0206 0B       		.uleb128 0xb
 2068 0207 27       		.uleb128 0x27
 2069 0208 19       		.uleb128 0x19
 2070 0209 3C       		.uleb128 0x3c
 2071 020a 19       		.uleb128 0x19
 2072 020b 00       		.byte	0
 2073 020c 00       		.byte	0
 2074 020d 24       		.uleb128 0x24
 2075 020e 2E       		.uleb128 0x2e
 2076 020f 01       		.byte	0x1
 2077 0210 3F       		.uleb128 0x3f
 2078 0211 19       		.uleb128 0x19
 2079 0212 03       		.uleb128 0x3
 2080 0213 0E       		.uleb128 0xe
 2081 0214 3A       		.uleb128 0x3a
 2082 0215 0B       		.uleb128 0xb
 2083 0216 3B       		.uleb128 0x3b
 2084 0217 0B       		.uleb128 0xb
 2085 0218 27       		.uleb128 0x27
 2086 0219 19       		.uleb128 0x19
 2087 021a 3C       		.uleb128 0x3c
 2088 021b 19       		.uleb128 0x19
 2089 021c 00       		.byte	0
 2090 021d 00       		.byte	0
 2091 021e 00       		.byte	0
 2092              		.section	.debug_loc,"",%progbits
 2093              	.Ldebug_loc0:
 2094              	.LLST0:
 2095 0000 06000000 		.4byte	.LVL1
 2096 0004 08000000 		.4byte	.LVL2
 2097 0008 0500     		.2byte	0x5
 2098 000a 73       		.byte	0x73
 2099 000b 00       		.sleb128 0
 2100 000c 70       		.byte	0x70
 2101 000d 00       		.sleb128 0
 2102 000e 22       		.byte	0x22
 2103 000f 08000000 		.4byte	.LVL2
 2104 0013 50000000 		.4byte	.LFE0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 73


 2105 0017 0200     		.2byte	0x2
 2106 0019 70       		.byte	0x70
 2107 001a 00       		.sleb128 0
 2108 001b 00000000 		.4byte	0
 2109 001f 00000000 		.4byte	0
 2110              	.LLST1:
 2111 0023 00000000 		.4byte	.LVL3
 2112 0027 07000000 		.4byte	.LVL4-1
 2113 002b 0100     		.2byte	0x1
 2114 002d 50       		.byte	0x50
 2115 002e 07000000 		.4byte	.LVL4-1
 2116 0032 18000000 		.4byte	.LFE1
 2117 0036 0400     		.2byte	0x4
 2118 0038 F3       		.byte	0xf3
 2119 0039 01       		.uleb128 0x1
 2120 003a 50       		.byte	0x50
 2121 003b 9F       		.byte	0x9f
 2122 003c 00000000 		.4byte	0
 2123 0040 00000000 		.4byte	0
 2124              	.LLST2:
 2125 0044 02000000 		.4byte	.LVL7
 2126 0048 06000000 		.4byte	.LVL8
 2127 004c 0200     		.2byte	0x2
 2128 004e 30       		.byte	0x30
 2129 004f 9F       		.byte	0x9f
 2130 0050 06000000 		.4byte	.LVL8
 2131 0054 0E000000 		.4byte	.LVL10
 2132 0058 0100     		.2byte	0x1
 2133 005a 54       		.byte	0x54
 2134 005b 0E000000 		.4byte	.LVL10
 2135 005f 10000000 		.4byte	.LVL11
 2136 0063 0300     		.2byte	0x3
 2137 0065 74       		.byte	0x74
 2138 0066 7F       		.sleb128 -1
 2139 0067 9F       		.byte	0x9f
 2140 0068 10000000 		.4byte	.LVL11
 2141 006c 16000000 		.4byte	.LFE2
 2142 0070 0100     		.2byte	0x1
 2143 0072 54       		.byte	0x54
 2144 0073 00000000 		.4byte	0
 2145 0077 00000000 		.4byte	0
 2146              	.LLST3:
 2147 007b 18000000 		.4byte	.LVL14
 2148 007f 36000000 		.4byte	.LVL17
 2149 0083 0100     		.2byte	0x1
 2150 0085 54       		.byte	0x54
 2151 0086 36000000 		.4byte	.LVL17
 2152 008a 38000000 		.4byte	.LVL18
 2153 008e 0300     		.2byte	0x3
 2154 0090 74       		.byte	0x74
 2155 0091 7F       		.sleb128 -1
 2156 0092 9F       		.byte	0x9f
 2157 0093 38000000 		.4byte	.LVL18
 2158 0097 3E000000 		.4byte	.LVL19
 2159 009b 0100     		.2byte	0x1
 2160 009d 54       		.byte	0x54
 2161 009e 00000000 		.4byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 74


 2162 00a2 00000000 		.4byte	0
 2163              	.LLST4:
 2164 00a6 22000000 		.4byte	.LVL15
 2165 00aa 33000000 		.4byte	.LVL16-1
 2166 00ae 0100     		.2byte	0x1
 2167 00b0 52       		.byte	0x52
 2168 00b1 33000000 		.4byte	.LVL16-1
 2169 00b5 36000000 		.4byte	.LVL17
 2170 00b9 0800     		.2byte	0x8
 2171 00bb 76       		.byte	0x76
 2172 00bc 00       		.sleb128 0
 2173 00bd 74       		.byte	0x74
 2174 00be 00       		.sleb128 0
 2175 00bf 37       		.byte	0x37
 2176 00c0 1A       		.byte	0x1a
 2177 00c1 24       		.byte	0x24
 2178 00c2 9F       		.byte	0x9f
 2179 00c3 36000000 		.4byte	.LVL17
 2180 00c7 38000000 		.4byte	.LVL18
 2181 00cb 0800     		.2byte	0x8
 2182 00cd 76       		.byte	0x76
 2183 00ce 00       		.sleb128 0
 2184 00cf 74       		.byte	0x74
 2185 00d0 7F       		.sleb128 -1
 2186 00d1 37       		.byte	0x37
 2187 00d2 1A       		.byte	0x1a
 2188 00d3 24       		.byte	0x24
 2189 00d4 9F       		.byte	0x9f
 2190 00d5 00000000 		.4byte	0
 2191 00d9 00000000 		.4byte	0
 2192              	.LLST5:
 2193 00dd 00000000 		.4byte	.LVL20
 2194 00e1 2C000000 		.4byte	.LVL27
 2195 00e5 0100     		.2byte	0x1
 2196 00e7 50       		.byte	0x50
 2197 00e8 2C000000 		.4byte	.LVL27
 2198 00ec 40000000 		.4byte	.LVL28
 2199 00f0 0400     		.2byte	0x4
 2200 00f2 F3       		.byte	0xf3
 2201 00f3 01       		.uleb128 0x1
 2202 00f4 50       		.byte	0x50
 2203 00f5 9F       		.byte	0x9f
 2204 00f6 40000000 		.4byte	.LVL28
 2205 00fa 48000000 		.4byte	.LVL29
 2206 00fe 0100     		.2byte	0x1
 2207 0100 50       		.byte	0x50
 2208 0101 48000000 		.4byte	.LVL29
 2209 0105 90000000 		.4byte	.LFE6
 2210 0109 0400     		.2byte	0x4
 2211 010b F3       		.byte	0xf3
 2212 010c 01       		.uleb128 0x1
 2213 010d 50       		.byte	0x50
 2214 010e 9F       		.byte	0x9f
 2215 010f 00000000 		.4byte	0
 2216 0113 00000000 		.4byte	0
 2217              	.LLST6:
 2218 0117 18000000 		.4byte	.LVL23
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 75


 2219 011b 1A000000 		.4byte	.LVL24
 2220 011f 0200     		.2byte	0x2
 2221 0121 75       		.byte	0x75
 2222 0122 04       		.sleb128 4
 2223 0123 1A000000 		.4byte	.LVL24
 2224 0127 1E000000 		.4byte	.LVL26
 2225 012b 0700     		.2byte	0x7
 2226 012d 74       		.byte	0x74
 2227 012e 00       		.sleb128 0
 2228 012f 73       		.byte	0x73
 2229 0130 00       		.sleb128 0
 2230 0131 22       		.byte	0x22
 2231 0132 23       		.byte	0x23
 2232 0133 04       		.uleb128 0x4
 2233 0134 1E000000 		.4byte	.LVL26
 2234 0138 6A000000 		.4byte	.LVL30
 2235 013c 0800     		.2byte	0x8
 2236 013e 73       		.byte	0x73
 2237 013f 00       		.sleb128 0
 2238 0140 03       		.byte	0x3
 2239 0141 04000000 		.4byte	.LANCHOR0+4
 2240 0145 22       		.byte	0x22
 2241 0146 6A000000 		.4byte	.LVL30
 2242 014a 78000000 		.4byte	.LVL31
 2243 014e 0100     		.2byte	0x1
 2244 0150 56       		.byte	0x56
 2245 0151 00000000 		.4byte	0
 2246 0155 00000000 		.4byte	0
 2247              	.LLST7:
 2248 0159 1A000000 		.4byte	.LVL24
 2249 015d 1E000000 		.4byte	.LVL26
 2250 0161 0700     		.2byte	0x7
 2251 0163 74       		.byte	0x74
 2252 0164 00       		.sleb128 0
 2253 0165 73       		.byte	0x73
 2254 0166 00       		.sleb128 0
 2255 0167 22       		.byte	0x22
 2256 0168 23       		.byte	0x23
 2257 0169 08       		.uleb128 0x8
 2258 016a 1E000000 		.4byte	.LVL26
 2259 016e 6A000000 		.4byte	.LVL30
 2260 0172 0800     		.2byte	0x8
 2261 0174 73       		.byte	0x73
 2262 0175 00       		.sleb128 0
 2263 0176 03       		.byte	0x3
 2264 0177 08000000 		.4byte	.LANCHOR0+8
 2265 017b 22       		.byte	0x22
 2266 017c 00000000 		.4byte	0
 2267 0180 00000000 		.4byte	0
 2268              	.LLST8:
 2269 0184 1C000000 		.4byte	.LVL25
 2270 0188 1E000000 		.4byte	.LVL26
 2271 018c 0500     		.2byte	0x5
 2272 018e 74       		.byte	0x74
 2273 018f 00       		.sleb128 0
 2274 0190 73       		.byte	0x73
 2275 0191 00       		.sleb128 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 76


 2276 0192 22       		.byte	0x22
 2277 0193 1E000000 		.4byte	.LVL26
 2278 0197 6A000000 		.4byte	.LVL30
 2279 019b 0800     		.2byte	0x8
 2280 019d 73       		.byte	0x73
 2281 019e 00       		.sleb128 0
 2282 019f 03       		.byte	0x3
 2283 01a0 00000000 		.4byte	.LANCHOR0
 2284 01a4 22       		.byte	0x22
 2285 01a5 6A000000 		.4byte	.LVL30
 2286 01a9 78000000 		.4byte	.LVL31
 2287 01ad 0100     		.2byte	0x1
 2288 01af 57       		.byte	0x57
 2289 01b0 00000000 		.4byte	0
 2290 01b4 00000000 		.4byte	0
 2291              	.LLST9:
 2292 01b8 00000000 		.4byte	.LVL32
 2293 01bc 04000000 		.4byte	.LVL34
 2294 01c0 0100     		.2byte	0x1
 2295 01c2 50       		.byte	0x50
 2296 01c3 04000000 		.4byte	.LVL34
 2297 01c7 0E000000 		.4byte	.LFE7
 2298 01cb 0400     		.2byte	0x4
 2299 01cd F3       		.byte	0xf3
 2300 01ce 01       		.uleb128 0x1
 2301 01cf 50       		.byte	0x50
 2302 01d0 9F       		.byte	0x9f
 2303 01d1 00000000 		.4byte	0
 2304 01d5 00000000 		.4byte	0
 2305              	.LLST10:
 2306 01d9 02000000 		.4byte	.LVL33
 2307 01dd 0C000000 		.4byte	.LVL36
 2308 01e1 0200     		.2byte	0x2
 2309 01e3 30       		.byte	0x30
 2310 01e4 9F       		.byte	0x9f
 2311 01e5 0C000000 		.4byte	.LVL36
 2312 01e9 0E000000 		.4byte	.LFE7
 2313 01ed 0200     		.2byte	0x2
 2314 01ef 31       		.byte	0x31
 2315 01f0 9F       		.byte	0x9f
 2316 01f1 00000000 		.4byte	0
 2317 01f5 00000000 		.4byte	0
 2318              	.LLST11:
 2319 01f9 02000000 		.4byte	.LVL33
 2320 01fd 0C000000 		.4byte	.LVL36
 2321 0201 0200     		.2byte	0x2
 2322 0203 30       		.byte	0x30
 2323 0204 9F       		.byte	0x9f
 2324 0205 0C000000 		.4byte	.LVL36
 2325 0209 0E000000 		.4byte	.LFE7
 2326 020d 0100     		.2byte	0x1
 2327 020f 50       		.byte	0x50
 2328 0210 00000000 		.4byte	0
 2329 0214 00000000 		.4byte	0
 2330              	.LLST12:
 2331 0218 02000000 		.4byte	.LVL37
 2332 021c 0A000000 		.4byte	.LVL38
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 77


 2333 0220 0200     		.2byte	0x2
 2334 0222 30       		.byte	0x30
 2335 0223 9F       		.byte	0x9f
 2336 0224 0A000000 		.4byte	.LVL38
 2337 0228 16000000 		.4byte	.LVL40
 2338 022c 0100     		.2byte	0x1
 2339 022e 54       		.byte	0x54
 2340 022f 16000000 		.4byte	.LVL40
 2341 0233 18000000 		.4byte	.LVL41
 2342 0237 0300     		.2byte	0x3
 2343 0239 74       		.byte	0x74
 2344 023a 7F       		.sleb128 -1
 2345 023b 9F       		.byte	0x9f
 2346 023c 18000000 		.4byte	.LVL41
 2347 0240 20000000 		.4byte	.LFE8
 2348 0244 0100     		.2byte	0x1
 2349 0246 54       		.byte	0x54
 2350 0247 00000000 		.4byte	0
 2351 024b 00000000 		.4byte	0
 2352              	.LLST13:
 2353 024f 02000000 		.4byte	.LVL37
 2354 0253 0A000000 		.4byte	.LVL38
 2355 0257 0200     		.2byte	0x2
 2356 0259 30       		.byte	0x30
 2357 025a 9F       		.byte	0x9f
 2358 025b 00000000 		.4byte	0
 2359 025f 00000000 		.4byte	0
 2360              	.LLST14:
 2361 0263 00000000 		.4byte	.LVL42
 2362 0267 0A000000 		.4byte	.LVL43
 2363 026b 0200     		.2byte	0x2
 2364 026d 30       		.byte	0x30
 2365 026e 9F       		.byte	0x9f
 2366 026f 0A000000 		.4byte	.LVL43
 2367 0273 10000000 		.4byte	.LFE9
 2368 0277 0200     		.2byte	0x2
 2369 0279 31       		.byte	0x31
 2370 027a 9F       		.byte	0x9f
 2371 027b 00000000 		.4byte	0
 2372 027f 00000000 		.4byte	0
 2373              	.LLST15:
 2374 0283 00000000 		.4byte	.LVL44
 2375 0287 0A000000 		.4byte	.LVL45
 2376 028b 0200     		.2byte	0x2
 2377 028d 30       		.byte	0x30
 2378 028e 9F       		.byte	0x9f
 2379 028f 0A000000 		.4byte	.LVL45
 2380 0293 10000000 		.4byte	.LFE10
 2381 0297 0200     		.2byte	0x2
 2382 0299 31       		.byte	0x31
 2383 029a 9F       		.byte	0x9f
 2384 029b 00000000 		.4byte	0
 2385 029f 00000000 		.4byte	0
 2386              	.LLST16:
 2387 02a3 00000000 		.4byte	.LVL46
 2388 02a7 04000000 		.4byte	.LVL47
 2389 02ab 0100     		.2byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 78


 2390 02ad 50       		.byte	0x50
 2391 02ae 04000000 		.4byte	.LVL47
 2392 02b2 0C000000 		.4byte	.LFE11
 2393 02b6 0400     		.2byte	0x4
 2394 02b8 F3       		.byte	0xf3
 2395 02b9 01       		.uleb128 0x1
 2396 02ba 50       		.byte	0x50
 2397 02bb 9F       		.byte	0x9f
 2398 02bc 00000000 		.4byte	0
 2399 02c0 00000000 		.4byte	0
 2400              	.LLST17:
 2401 02c4 06000000 		.4byte	.LVL48
 2402 02c8 0A000000 		.4byte	.LVL49
 2403 02cc 0500     		.2byte	0x5
 2404 02ce 70       		.byte	0x70
 2405 02cf 00       		.sleb128 0
 2406 02d0 32       		.byte	0x32
 2407 02d1 25       		.byte	0x25
 2408 02d2 9F       		.byte	0x9f
 2409 02d3 00000000 		.4byte	0
 2410 02d7 00000000 		.4byte	0
 2411              	.LLST18:
 2412 02db 00000000 		.4byte	.LVL50
 2413 02df 18000000 		.4byte	.LVL54
 2414 02e3 0100     		.2byte	0x1
 2415 02e5 50       		.byte	0x50
 2416 02e6 18000000 		.4byte	.LVL54
 2417 02ea E8000000 		.4byte	.LFE4
 2418 02ee 0400     		.2byte	0x4
 2419 02f0 F3       		.byte	0xf3
 2420 02f1 01       		.uleb128 0x1
 2421 02f2 50       		.byte	0x50
 2422 02f3 9F       		.byte	0x9f
 2423 02f4 00000000 		.4byte	0
 2424 02f8 00000000 		.4byte	0
 2425              	.LLST19:
 2426 02fc 7E000000 		.4byte	.LVL64
 2427 0300 86000000 		.4byte	.LVL65
 2428 0304 0500     		.2byte	0x5
 2429 0306 73       		.byte	0x73
 2430 0307 00       		.sleb128 0
 2431 0308 38       		.byte	0x38
 2432 0309 24       		.byte	0x24
 2433 030a 9F       		.byte	0x9f
 2434 030b 86000000 		.4byte	.LVL65
 2435 030f 88000000 		.4byte	.LVL66
 2436 0313 0100     		.2byte	0x1
 2437 0315 51       		.byte	0x51
 2438 0316 88000000 		.4byte	.LVL66
 2439 031a 8A000000 		.4byte	.LVL67
 2440 031e 0100     		.2byte	0x1
 2441 0320 55       		.byte	0x55
 2442 0321 8A000000 		.4byte	.LVL67
 2443 0325 9A000000 		.4byte	.LVL68
 2444 0329 0100     		.2byte	0x1
 2445 032b 53       		.byte	0x53
 2446 032c 00000000 		.4byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 79


 2447 0330 00000000 		.4byte	0
 2448              	.LLST20:
 2449 0334 3A000000 		.4byte	.LVL59
 2450 0338 40000000 		.4byte	.LVL60
 2451 033c 0100     		.2byte	0x1
 2452 033e 56       		.byte	0x56
 2453 033f 44000000 		.4byte	.LVL61
 2454 0343 C6000000 		.4byte	.LVL71
 2455 0347 0100     		.2byte	0x1
 2456 0349 56       		.byte	0x56
 2457 034a 00000000 		.4byte	0
 2458 034e 00000000 		.4byte	0
 2459              	.LLST21:
 2460 0352 10000000 		.4byte	.LVL52
 2461 0356 18000000 		.4byte	.LVL54
 2462 035a 0400     		.2byte	0x4
 2463 035c 70       		.byte	0x70
 2464 035d 00       		.sleb128 0
 2465 035e 31       		.byte	0x31
 2466 035f 24       		.byte	0x24
 2467 0360 18000000 		.4byte	.LVL54
 2468 0364 1F000000 		.4byte	.LVL55-1
 2469 0368 0400     		.2byte	0x4
 2470 036a 74       		.byte	0x74
 2471 036b 00       		.sleb128 0
 2472 036c 31       		.byte	0x31
 2473 036d 24       		.byte	0x24
 2474 036e 22000000 		.4byte	.LVL56
 2475 0372 28000000 		.4byte	.LVL57
 2476 0376 0100     		.2byte	0x1
 2477 0378 50       		.byte	0x50
 2478 0379 28000000 		.4byte	.LVL57
 2479 037d 88000000 		.4byte	.LVL66
 2480 0381 0100     		.2byte	0x1
 2481 0383 55       		.byte	0x55
 2482 0384 00000000 		.4byte	0
 2483 0388 00000000 		.4byte	0
 2484              	.LLST22:
 2485 038c 0A000000 		.4byte	.LVL51
 2486 0390 18000000 		.4byte	.LVL54
 2487 0394 0200     		.2byte	0x2
 2488 0396 70       		.byte	0x70
 2489 0397 00       		.sleb128 0
 2490 0398 18000000 		.4byte	.LVL54
 2491 039c 3A000000 		.4byte	.LVL59
 2492 03a0 0200     		.2byte	0x2
 2493 03a2 74       		.byte	0x74
 2494 03a3 00       		.sleb128 0
 2495 03a4 3A000000 		.4byte	.LVL59
 2496 03a8 40000000 		.4byte	.LVL60
 2497 03ac 0200     		.2byte	0x2
 2498 03ae 31       		.byte	0x31
 2499 03af 9F       		.byte	0x9f
 2500 03b0 40000000 		.4byte	.LVL60
 2501 03b4 44000000 		.4byte	.LVL61
 2502 03b8 0200     		.2byte	0x2
 2503 03ba 74       		.byte	0x74
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 80


 2504 03bb 00       		.sleb128 0
 2505 03bc 44000000 		.4byte	.LVL61
 2506 03c0 48000000 		.4byte	.LVL62
 2507 03c4 0200     		.2byte	0x2
 2508 03c6 30       		.byte	0x30
 2509 03c7 9F       		.byte	0x9f
 2510 03c8 48000000 		.4byte	.LVL62
 2511 03cc C6000000 		.4byte	.LVL71
 2512 03d0 0100     		.2byte	0x1
 2513 03d2 58       		.byte	0x58
 2514 03d3 00000000 		.4byte	0
 2515 03d7 00000000 		.4byte	0
 2516              	.LLST23:
 2517 03db 10000000 		.4byte	.LVL52
 2518 03df 14000000 		.4byte	.LVL53
 2519 03e3 0200     		.2byte	0x2
 2520 03e5 73       		.byte	0x73
 2521 03e6 0C       		.sleb128 12
 2522 03e7 14000000 		.4byte	.LVL53
 2523 03eb 18000000 		.4byte	.LVL54
 2524 03ef 0C00     		.2byte	0xc
 2525 03f1 70       		.byte	0x70
 2526 03f2 00       		.sleb128 0
 2527 03f3 94       		.byte	0x94
 2528 03f4 01       		.byte	0x1
 2529 03f5 08       		.byte	0x8
 2530 03f6 FF       		.byte	0xff
 2531 03f7 1A       		.byte	0x1a
 2532 03f8 72       		.byte	0x72
 2533 03f9 00       		.sleb128 0
 2534 03fa 22       		.byte	0x22
 2535 03fb 23       		.byte	0x23
 2536 03fc 0C       		.uleb128 0xc
 2537 03fd 18000000 		.4byte	.LVL54
 2538 0401 1F000000 		.4byte	.LVL55-1
 2539 0405 0C00     		.2byte	0xc
 2540 0407 74       		.byte	0x74
 2541 0408 00       		.sleb128 0
 2542 0409 94       		.byte	0x94
 2543 040a 01       		.byte	0x1
 2544 040b 08       		.byte	0x8
 2545 040c FF       		.byte	0xff
 2546 040d 1A       		.byte	0x1a
 2547 040e 72       		.byte	0x72
 2548 040f 00       		.sleb128 0
 2549 0410 22       		.byte	0x22
 2550 0411 23       		.byte	0x23
 2551 0412 0C       		.uleb128 0xc
 2552 0413 1F000000 		.4byte	.LVL55-1
 2553 0417 C6000000 		.4byte	.LVL71
 2554 041b 0100     		.2byte	0x1
 2555 041d 57       		.byte	0x57
 2556 041e 00000000 		.4byte	0
 2557 0422 00000000 		.4byte	0
 2558              	.LLST24:
 2559 0426 02000000 		.4byte	.LVL72
 2560 042a 0A000000 		.4byte	.LVL73
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 81


 2561 042e 0200     		.2byte	0x2
 2562 0430 30       		.byte	0x30
 2563 0431 9F       		.byte	0x9f
 2564 0432 0A000000 		.4byte	.LVL73
 2565 0436 22000000 		.4byte	.LVL76
 2566 043a 0100     		.2byte	0x1
 2567 043c 54       		.byte	0x54
 2568 043d 22000000 		.4byte	.LVL76
 2569 0441 24000000 		.4byte	.LVL77
 2570 0445 0300     		.2byte	0x3
 2571 0447 74       		.byte	0x74
 2572 0448 7F       		.sleb128 -1
 2573 0449 9F       		.byte	0x9f
 2574 044a 24000000 		.4byte	.LVL77
 2575 044e 2A000000 		.4byte	.LVL78
 2576 0452 0100     		.2byte	0x1
 2577 0454 54       		.byte	0x54
 2578 0455 00000000 		.4byte	0
 2579 0459 00000000 		.4byte	0
 2580              	.LLST25:
 2581 045d 14000000 		.4byte	.LVL74
 2582 0461 1F000000 		.4byte	.LVL75-1
 2583 0465 0100     		.2byte	0x1
 2584 0467 52       		.byte	0x52
 2585 0468 1F000000 		.4byte	.LVL75-1
 2586 046c 22000000 		.4byte	.LVL76
 2587 0470 0800     		.2byte	0x8
 2588 0472 76       		.byte	0x76
 2589 0473 00       		.sleb128 0
 2590 0474 74       		.byte	0x74
 2591 0475 00       		.sleb128 0
 2592 0476 37       		.byte	0x37
 2593 0477 1A       		.byte	0x1a
 2594 0478 24       		.byte	0x24
 2595 0479 9F       		.byte	0x9f
 2596 047a 22000000 		.4byte	.LVL76
 2597 047e 24000000 		.4byte	.LVL77
 2598 0482 0800     		.2byte	0x8
 2599 0484 76       		.byte	0x76
 2600 0485 00       		.sleb128 0
 2601 0486 74       		.byte	0x74
 2602 0487 7F       		.sleb128 -1
 2603 0488 37       		.byte	0x37
 2604 0489 1A       		.byte	0x1a
 2605 048a 24       		.byte	0x24
 2606 048b 9F       		.byte	0x9f
 2607 048c 00000000 		.4byte	0
 2608 0490 00000000 		.4byte	0
 2609              		.section	.debug_aranges,"",%progbits
 2610 0000 74000000 		.4byte	0x74
 2611 0004 0200     		.2byte	0x2
 2612 0006 00000000 		.4byte	.Ldebug_info0
 2613 000a 04       		.byte	0x4
 2614 000b 00       		.byte	0
 2615 000c 0000     		.2byte	0
 2616 000e 0000     		.2byte	0
 2617 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 82


 2618 0014 50000000 		.4byte	.LFE0-.LFB0
 2619 0018 00000000 		.4byte	.LFB1
 2620 001c 18000000 		.4byte	.LFE1-.LFB1
 2621 0020 00000000 		.4byte	.LFB2
 2622 0024 16000000 		.4byte	.LFE2-.LFB2
 2623 0028 00000000 		.4byte	.LFB3
 2624 002c 48000000 		.4byte	.LFE3-.LFB3
 2625 0030 00000000 		.4byte	.LFB6
 2626 0034 90000000 		.4byte	.LFE6-.LFB6
 2627 0038 00000000 		.4byte	.LFB7
 2628 003c 0E000000 		.4byte	.LFE7-.LFB7
 2629 0040 00000000 		.4byte	.LFB8
 2630 0044 20000000 		.4byte	.LFE8-.LFB8
 2631 0048 00000000 		.4byte	.LFB9
 2632 004c 10000000 		.4byte	.LFE9-.LFB9
 2633 0050 00000000 		.4byte	.LFB10
 2634 0054 10000000 		.4byte	.LFE10-.LFB10
 2635 0058 00000000 		.4byte	.LFB11
 2636 005c 0C000000 		.4byte	.LFE11-.LFB11
 2637 0060 00000000 		.4byte	.LFB4
 2638 0064 E8000000 		.4byte	.LFE4-.LFB4
 2639 0068 00000000 		.4byte	.LFB5
 2640 006c 30000000 		.4byte	.LFE5-.LFB5
 2641 0070 00000000 		.4byte	0
 2642 0074 00000000 		.4byte	0
 2643              		.section	.debug_ranges,"",%progbits
 2644              	.Ldebug_ranges0:
 2645 0000 00000000 		.4byte	.LFB0
 2646 0004 50000000 		.4byte	.LFE0
 2647 0008 00000000 		.4byte	.LFB1
 2648 000c 18000000 		.4byte	.LFE1
 2649 0010 00000000 		.4byte	.LFB2
 2650 0014 16000000 		.4byte	.LFE2
 2651 0018 00000000 		.4byte	.LFB3
 2652 001c 48000000 		.4byte	.LFE3
 2653 0020 00000000 		.4byte	.LFB6
 2654 0024 90000000 		.4byte	.LFE6
 2655 0028 00000000 		.4byte	.LFB7
 2656 002c 0E000000 		.4byte	.LFE7
 2657 0030 00000000 		.4byte	.LFB8
 2658 0034 20000000 		.4byte	.LFE8
 2659 0038 00000000 		.4byte	.LFB9
 2660 003c 10000000 		.4byte	.LFE9
 2661 0040 00000000 		.4byte	.LFB10
 2662 0044 10000000 		.4byte	.LFE10
 2663 0048 00000000 		.4byte	.LFB11
 2664 004c 0C000000 		.4byte	.LFE11
 2665 0050 00000000 		.4byte	.LFB4
 2666 0054 E8000000 		.4byte	.LFE4
 2667 0058 00000000 		.4byte	.LFB5
 2668 005c 30000000 		.4byte	.LFE5
 2669 0060 00000000 		.4byte	0
 2670 0064 00000000 		.4byte	0
 2671              		.section	.debug_line,"",%progbits
 2672              	.Ldebug_line0:
 2673 0000 FD010000 		.section	.debug_str,"MS",%progbits,1
 2673      02007300 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 83


 2673      00000201 
 2673      FB0E0D00 
 2673      01010101 
 2674              	.LASF10:
 2675 0000 75696E74 		.ascii	"uint16\000"
 2675      313600
 2676              	.LASF40:
 2677 0007 66696C74 		.ascii	"filteredRawData\000"
 2677      65726564 
 2677      52617744 
 2677      61746100 
 2678              	.LASF59:
 2679 0017 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2679      4320342E 
 2679      382E3420 
 2679      32303134 
 2679      30353236 
 2680 004a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2680      20726576 
 2680      6973696F 
 2680      6E203231 
 2680      31333538 
 2681 007d 67202D66 		.ascii	"g -ffunction-sections\000"
 2681      66756E63 
 2681      74696F6E 
 2681      2D736563 
 2681      74696F6E 
 2682              	.LASF25:
 2683 0093 66696E67 		.ascii	"fingerThreshold\000"
 2683      65725468 
 2683      72657368 
 2683      6F6C6400 
 2684              	.LASF19:
 2685 00a3 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 2685      656E7365 
 2685      5F315F49 
 2685      6E697469 
 2685      616C697A 
 2686              	.LASF16:
 2687 00c5 43617053 		.ascii	"CapSense_1_BaseInit\000"
 2687      656E7365 
 2687      5F315F42 
 2687      61736549 
 2687      6E697400 
 2688              	.LASF7:
 2689 00d9 6C6F6E67 		.ascii	"long long unsigned int\000"
 2689      206C6F6E 
 2689      6720756E 
 2689      7369676E 
 2689      65642069 
 2690              	.LASF34:
 2691 00f0 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 2691      656E7365 
 2691      5F315F45 
 2691      6E61626C 
 2691      65576964 
 2692              	.LASF29:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 84


 2693 0108 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 2693      656E7365 
 2693      5F315F43 
 2693      6865636B 
 2693      49735769 
 2694              	.LASF53:
 2695 0127 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 2695      656E7365 
 2695      5F315F6E 
 2695      6F697365 
 2695      54687265 
 2696              	.LASF55:
 2697 0141 43617053 		.ascii	"CapSense_1_debounce\000"
 2697      656E7365 
 2697      5F315F64 
 2697      65626F75 
 2697      6E636500 
 2698              	.LASF43:
 2699 0155 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 2699      656E7365 
 2699      5F315F73 
 2699      656E736F 
 2699      72526177 
 2700              	.LASF6:
 2701 016a 6C6F6E67 		.ascii	"long long int\000"
 2701      206C6F6E 
 2701      6720696E 
 2701      7400
 2702              	.LASF0:
 2703 0178 7369676E 		.ascii	"signed char\000"
 2703      65642063 
 2703      68617200 
 2704              	.LASF30:
 2705 0184 72617749 		.ascii	"rawIndex\000"
 2705      6E646578 
 2705      00
 2706              	.LASF31:
 2707 018d 6E756D62 		.ascii	"numberOfSensors\000"
 2707      65724F66 
 2707      53656E73 
 2707      6F727300 
 2708              	.LASF32:
 2709 019d 73746174 		.ascii	"state\000"
 2709      6500
 2710              	.LASF4:
 2711 01a3 6C6F6E67 		.ascii	"long int\000"
 2711      20696E74 
 2711      00
 2712              	.LASF35:
 2713 01ac 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 2713      656E7365 
 2713      5F315F44 
 2713      69736162 
 2713      6C655769 
 2714              	.LASF9:
 2715 01c5 75696E74 		.ascii	"uint8\000"
 2715      3800
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 85


 2716              	.LASF13:
 2717 01cb 646F7562 		.ascii	"double\000"
 2717      6C6500
 2718              	.LASF60:
 2719 01d2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 2719      6E657261 
 2719      7465645F 
 2719      536F7572 
 2719      63655C50 
 2720              	.LASF11:
 2721 01fd 75696E74 		.ascii	"uint32\000"
 2721      333200
 2722              	.LASF26:
 2723 0204 68797374 		.ascii	"hysteresis\000"
 2723      65726573 
 2723      697300
 2724              	.LASF62:
 2725 020f 43617053 		.ascii	"CapSense_1_ScanSensor\000"
 2725      656E7365 
 2725      5F315F53 
 2725      63616E53 
 2725      656E736F 
 2726              	.LASF54:
 2727 0225 43617053 		.ascii	"CapSense_1_hysteresis\000"
 2727      656E7365 
 2727      5F315F68 
 2727      79737465 
 2727      72657369 
 2728              	.LASF57:
 2729 023b 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 2729      656E7365 
 2729      5F315F72 
 2729      61774461 
 2729      7461496E 
 2730              	.LASF52:
 2731 0253 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 2731      656E7365 
 2731      5F315F66 
 2731      696E6765 
 2731      72546872 
 2732              	.LASF8:
 2733 026e 756E7369 		.ascii	"unsigned int\000"
 2733      676E6564 
 2733      20696E74 
 2733      00
 2734              	.LASF64:
 2735 027b 43617053 		.ascii	"CapSense_1_ScanEnabledWidgets\000"
 2735      656E7365 
 2735      5F315F53 
 2735      63616E45 
 2735      6E61626C 
 2736              	.LASF5:
 2737 0299 6C6F6E67 		.ascii	"long unsigned int\000"
 2737      20756E73 
 2737      69676E65 
 2737      6420696E 
 2737      7400
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 86


 2738              	.LASF3:
 2739 02ab 73686F72 		.ascii	"short unsigned int\000"
 2739      7420756E 
 2739      7369676E 
 2739      65642069 
 2739      6E7400
 2740              	.LASF18:
 2741 02be 73656E73 		.ascii	"sensor\000"
 2741      6F7200
 2742              	.LASF58:
 2743 02c5 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 2743      656E7365 
 2743      5F315F6E 
 2743      756D6265 
 2743      724F6653 
 2744              	.LASF38:
 2745 02e0 63616C63 		.ascii	"calc\000"
 2745      00
 2746              	.LASF45:
 2747 02e5 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 2747      656E7365 
 2747      5F315F73 
 2747      656E736F 
 2747      72456E61 
 2748              	.LASF27:
 2749 0301 6465626F 		.ascii	"debounce\000"
 2749      756E6365 
 2749      00
 2750              	.LASF22:
 2751 030a 656E4D61 		.ascii	"enMask\000"
 2751      736B00
 2752              	.LASF15:
 2753 0311 73697A65 		.ascii	"sizetype\000"
 2753      74797065 
 2753      00
 2754              	.LASF51:
 2755 031a 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 2755      656E7365 
 2755      5F315F6C 
 2755      6F774261 
 2755      73656C69 
 2756              	.LASF46:
 2757 0339 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 2757      656E7365 
 2757      5F315F77 
 2757      69646765 
 2757      744E756D 
 2758              	.LASF17:
 2759 0351 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 2759      656E7365 
 2759      5F315F49 
 2759      6E697469 
 2759      616C697A 
 2760              	.LASF42:
 2761 0375 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 2761      656E7365 
 2761      5F315F55 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 87


 2761      70646174 
 2761      65456E61 
 2762              	.LASF65:
 2763 0397 43617053 		.ascii	"CapSense_1_CalculateThresholds\000"
 2763      656E7365 
 2763      5F315F43 
 2763      616C6375 
 2763      6C617465 
 2764              	.LASF12:
 2765 03b6 666C6F61 		.ascii	"float\000"
 2765      7400
 2766              	.LASF50:
 2767 03bc 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 2767      656E7365 
 2767      5F315F73 
 2767      656E736F 
 2767      724F6E4D 
 2768              	.LASF44:
 2769 03d4 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 2769      656E7365 
 2769      5F315F72 
 2769      61774669 
 2769      6C746572 
 2770              	.LASF28:
 2771 03ee 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 2771      656E7365 
 2771      5F315F43 
 2771      6865636B 
 2771      49735365 
 2772              	.LASF33:
 2773 040d 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 2773      656E7365 
 2773      5F315F43 
 2773      6865636B 
 2773      4973416E 
 2774              	.LASF1:
 2775 042f 756E7369 		.ascii	"unsigned char\000"
 2775      676E6564 
 2775      20636861 
 2775      7200
 2776              	.LASF21:
 2777 043d 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 2777      656E7365 
 2777      5F315F49 
 2777      6E697469 
 2777      616C697A 
 2778              	.LASF41:
 2779 0463 6E6F6973 		.ascii	"noiseThreshold\000"
 2779      65546872 
 2779      6573686F 
 2779      6C6400
 2780              	.LASF2:
 2781 0472 73686F72 		.ascii	"short int\000"
 2781      7420696E 
 2781      7400
 2782              	.LASF20:
 2783 047c 77696467 		.ascii	"widget\000"
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 88


 2783      657400
 2784              	.LASF23:
 2785 0483 6F6E4D61 		.ascii	"onMask\000"
 2785      736B00
 2786              	.LASF37:
 2787 048a 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 2787      656E7365 
 2787      5F315F55 
 2787      70646174 
 2787      6553656E 
 2788              	.LASF49:
 2789 04aa 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 2789      656E7365 
 2789      5F315F73 
 2789      656E736F 
 2789      72536967 
 2790              	.LASF56:
 2791 04c2 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 2791      656E7365 
 2791      5F315F64 
 2791      65626F75 
 2791      6E636543 
 2792              	.LASF14:
 2793 04dd 63686172 		.ascii	"char\000"
 2793      00
 2794              	.LASF63:
 2795 04e2 43617053 		.ascii	"CapSense_1_IsBusy\000"
 2795      656E7365 
 2795      5F315F49 
 2795      73427573 
 2795      7900
 2796              	.LASF48:
 2797 04f4 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 2797      656E7365 
 2797      5F315F73 
 2797      656E736F 
 2797      72426173 
 2798              	.LASF24:
 2799 0511 6465626F 		.ascii	"debounceIndex\000"
 2799      756E6365 
 2799      496E6465 
 2799      7800
 2800              	.LASF47:
 2801 051f 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 2801      656E7365 
 2801      5F315F73 
 2801      656E736F 
 2801      72426173 
 2802              	.LASF61:
 2803 0539 433A5C55 		.ascii	"C:\\Users\\JohnP\\OneDrive\\College\\2015-2016 Seni"
 2803      73657273 
 2803      5C4A6F68 
 2803      6E505C4F 
 2803      6E654472 
 2804 0567 6F722059 		.ascii	"or Year\\0 Fall Quarter\\CE4920\\Lab\\project\\CE49"
 2804      6561725C 
 2804      30204661 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\ccMCOjex.s 			page 89


 2804      6C6C2051 
 2804      75617274 
 2805 0595 32305072 		.ascii	"20Project1\\Design01.cydsn\000"
 2805      6F6A6563 
 2805      74315C44 
 2805      65736967 
 2805      6E30312E 
 2806              	.LASF36:
 2807 05af 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 2807      656E7365 
 2807      5F315F49 
 2807      49523446 
 2807      696C7465 
 2808              	.LASF39:
 2809 05c5 74656D70 		.ascii	"tempRaw\000"
 2809      52617700 
 2810              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
