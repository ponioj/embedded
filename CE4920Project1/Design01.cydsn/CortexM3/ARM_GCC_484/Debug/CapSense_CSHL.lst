ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CapSense_BaseInit,"ax",%progbits
  19              		.align	2
  20              		.global	CapSense_BaseInit
  21              		.thumb
  22              		.thumb_func
  23              		.type	CapSense_BaseInit, %function
  24              	CapSense_BaseInit:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 2


  32:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     100u, 100u, 100u, 
  50:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 20u, 20u, 
  54:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 10u, 10u, 
  58:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 
  62:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* LinearSlider0__LS */
  70:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  71:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  72:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  74:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  76:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  77:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  78:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  79:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  81:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint16 CYCODE CapSense_centroidMult[] = {
  83:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     6400u, 
  84:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  85:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  86:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_posFiltersMask[] = {
  87:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0x8u, 
  88:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 3


  89:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  90:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_posFiltersData[] = {
  91:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 0u, 0u, 
  92:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  93:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  94:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  95:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  96:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
  98:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
  99:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 100:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 101:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 102:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 103:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 104:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 105:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 106:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 107:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 108:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 109:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 110:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 111:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 113:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 114:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 115:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 117:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 118:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 119:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 120:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 121:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 122:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 123:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 124:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 125:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 126:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 127:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 128:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 129:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 130:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 131:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 132:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 133:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 134:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 135:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 136:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 137:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 138:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
  27              		.loc 1 138 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 4


 140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  33              		.loc 1 141 0
  34 0000 094B     		ldr	r3, .L3
  35 0002 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
  36              	.LVL1:
 142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 155:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  37              		.loc 1 155 0
  38 0004 094A     		ldr	r2, .L3+4
  39 0006 32F81010 		ldrh	r1, [r2, r0, lsl #1]
  40 000a 094A     		ldr	r2, .L3+8
  41 000c 22F81010 		strh	r1, [r2, r0, lsl #1]	@ movhi
 156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  42              		.loc 1 156 0
  43 0010 0022     		movs	r2, #0
  44 0012 0849     		ldr	r1, .L3+12
  45 0014 0A54     		strb	r2, [r1, r0]
 157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  46              		.loc 1 157 0
  47 0016 0849     		ldr	r1, .L3+16
  48 0018 0A54     		strb	r2, [r1, r0]
 158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
  49              		.loc 1 159 0
  50 001a 23B1     		cbz	r3, .L1
 160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_deboun
  51              		.loc 1 161 0
  52 001c 5A1E     		subs	r2, r3, #1
  53 001e 0749     		ldr	r1, .L3+20
  54 0020 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
  55 0022 074B     		ldr	r3, .L3+24
  56 0024 9954     		strb	r1, [r3, r2]
  57              	.L1:
  58 0026 7047     		bx	lr
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0028 00000000 		.word	CapSense_widgetNumber
  63 002c 00000000 		.word	CapSense_sensorRaw
  64 0030 00000000 		.word	CapSense_sensorBaseline
  65 0034 00000000 		.word	CapSense_sensorBaselineLow
  66 0038 00000000 		.word	CapSense_sensorSignal
  67 003c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 5


  68 0040 00000000 		.word	.LANCHOR1
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  72              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  73              		.align	2
  74              		.global	CapSense_InitializeSensorBaseline
  75              		.thumb
  76              		.thumb_func
  77              		.type	CapSense_InitializeSensorBaseline, %function
  78              	CapSense_InitializeSensorBaseline:
  79              	.LFB1:
 162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 167:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 175:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 179:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 181:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 182:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 184:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 187:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 188:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 191:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 194:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 195:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 196:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 197:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 198:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 199:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 200:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 201:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 202:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 203:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 204:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 205:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 206:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 6


 207:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 208:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 209:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 210:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 211:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 212:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 213:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 215:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
  80              		.loc 1 215 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              	.LVL2:
  85 0000 10B5     		push	{r4, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 0446     		mov	r4, r0
 216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  90              		.loc 1 217 0
  91 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  92              	.LVL3:
  93              	.L6:
 218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  94              		.loc 1 218 0 discriminator 1
  95 0008 FFF7FEFF 		bl	CapSense_IsBusy
  96              	.LVL4:
  97 000c 0028     		cmp	r0, #0
  98 000e FBD1     		bne	.L6
 219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
  99              		.loc 1 225 0
 100 0010 2046     		mov	r0, r4
 101 0012 FFF7FEFF 		bl	CapSense_BaseInit
 102              	.LVL5:
 103 0016 10BD     		pop	{r4, pc}
 104              		.cfi_endproc
 105              	.LFE1:
 106              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 107              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 108              		.align	2
 109              		.global	CapSense_InitializeAllBaselines
 110              		.thumb
 111              		.thumb_func
 112              		.type	CapSense_InitializeAllBaselines, %function
 113              	CapSense_InitializeAllBaselines:
 114              	.LFB2:
 226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 7


 229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 242:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 243:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 244:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 245:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 246:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 247:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 248:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 249:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 251:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 252:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 253:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 255:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 256:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 257:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 258:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 259:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 260:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 262:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 265:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 115              		.loc 1 267 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119 0000 10B5     		push	{r4, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 123              	.LVL6:
 268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 124              		.loc 1 271 0
 125 0002 0024     		movs	r4, #0
 126 0004 04E0     		b	.L9
 127              	.LVL7:
 128              	.L10:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 8


 272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 129              		.loc 1 273 0 discriminator 2
 130 0006 2046     		mov	r0, r4
 131 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 132              	.LVL8:
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 271 0 discriminator 2
 134 000c 0134     		adds	r4, r4, #1
 135              	.LVL9:
 136 000e E4B2     		uxtb	r4, r4
 137              	.LVL10:
 138              	.L9:
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 139              		.loc 1 271 0 is_stmt 0 discriminator 1
 140 0010 062C     		cmp	r4, #6
 141 0012 F8D9     		bls	.L10
 274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 275:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 142              		.loc 1 275 0 is_stmt 1
 143 0014 10BD     		pop	{r4, pc}
 144              		.cfi_endproc
 145              	.LFE2:
 146              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 147 0016 00BF     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 148              		.align	2
 149              		.global	CapSense_InitializeEnabledBaselines
 150              		.thumb
 151              		.thumb_func
 152              		.type	CapSense_InitializeEnabledBaselines, %function
 153              	CapSense_InitializeEnabledBaselines:
 154              	.LFB3:
 276:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 277:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 278:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 279:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 280:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 281:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 282:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 283:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 284:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 285:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 286:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 287:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 288:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 289:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 290:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 291:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 292:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 293:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 295:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 296:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 297:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 300:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 9


 155              		.loc 1 300 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 160              		.cfi_def_cfa_offset 24
 161              		.cfi_offset 3, -24
 162              		.cfi_offset 4, -20
 163              		.cfi_offset 5, -16
 164              		.cfi_offset 6, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 167              		.loc 1 305 0
 168 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 169              	.LVL11:
 170              	.L12:
 306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 171              		.loc 1 306 0 discriminator 1
 172 0006 FFF7FEFF 		bl	CapSense_IsBusy
 173              	.LVL12:
 174 000a 0028     		cmp	r0, #0
 175 000c FBD1     		bne	.L12
 176 000e 0024     		movs	r4, #0
 307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 177              		.loc 1 314 0
 178 0010 0126     		movs	r6, #1
 315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 179              		.loc 1 317 0
 180 0012 0B4D     		ldr	r5, .L17
 318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 319:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 181              		.loc 1 319 0
 182 0014 0B4F     		ldr	r7, .L17+4
 183 0016 0FE0     		b	.L13
 184              	.LVL13:
 185              	.L15:
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 186              		.loc 1 313 0
 187 0018 E308     		lsrs	r3, r4, #3
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 188              		.loc 1 314 0
 189 001a 04F00702 		and	r2, r4, #7
 190 001e 06FA02F2 		lsl	r2, r6, r2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 10


 191              	.LVL14:
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 192              		.loc 1 317 0
 193 0022 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 194 0024 1A42     		tst	r2, r3
 195 0026 02D1     		bne	.L14
 196              		.loc 1 319 0
 197 0028 0023     		movs	r3, #0
 198 002a 27F81430 		strh	r3, [r7, r4, lsl #1]	@ movhi
 199              	.L14:
 320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 200              		.loc 1 323 0
 201 002e 2046     		mov	r0, r4
 202 0030 FFF7FEFF 		bl	CapSense_BaseInit
 203              	.LVL15:
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 204              		.loc 1 311 0
 205 0034 0134     		adds	r4, r4, #1
 206              	.LVL16:
 207 0036 E4B2     		uxtb	r4, r4
 208              	.LVL17:
 209              	.L13:
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 210              		.loc 1 311 0 is_stmt 0 discriminator 1
 211 0038 062C     		cmp	r4, #6
 212 003a EDD9     		bls	.L15
 324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 325:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 213              		.loc 1 325 0 is_stmt 1
 214 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 215              	.LVL18:
 216              	.L18:
 217 003e 00BF     		.align	2
 218              	.L17:
 219 0040 00000000 		.word	CapSense_sensorEnableMask
 220 0044 00000000 		.word	CapSense_sensorRaw
 221              		.cfi_endproc
 222              	.LFE3:
 223              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 224              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 225              		.align	2
 226              		.global	CapSense_UpdateSensorBaseline
 227              		.thumb
 228              		.thumb_func
 229              		.type	CapSense_UpdateSensorBaseline, %function
 230              	CapSense_UpdateSensorBaseline:
 231              	.LFB4:
 326:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 327:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 328:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 329:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 330:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 331:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 11


 333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 334:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 337:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 338:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 340:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 341:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 343:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 344:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 345:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 346:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 348:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 349:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 351:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 352:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 353:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 354:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 355:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 356:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 357:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 358:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 359:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 360:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 361:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 362:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 363:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 364:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 367:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 232              		.loc 1 367 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL19:
 237 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 238              		.cfi_def_cfa_offset 24
 239              		.cfi_offset 4, -24
 240              		.cfi_offset 5, -20
 241              		.cfi_offset 6, -16
 242              		.cfi_offset 7, -12
 243              		.cfi_offset 8, -8
 244              		.cfi_offset 14, -4
 245 0004 0446     		mov	r4, r0
 368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 246              		.loc 1 371 0
 247 0006 2B4B     		ldr	r3, .L29
 248 0008 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 249              	.LVL20:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 12


 372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 250              		.loc 1 372 0
 251 000a 2B4A     		ldr	r2, .L29+4
 252 000c 1344     		add	r3, r3, r2
 253 000e 1F79     		ldrb	r7, [r3, #4]	@ zero_extendqisi2
 254              	.LVL21:
 373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 255              		.loc 1 380 0
 256 0010 2A4B     		ldr	r3, .L29+8
 257              	.LVL22:
 258 0012 33F81060 		ldrh	r6, [r3, r0, lsl #1]
 259              	.LVL23:
 381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 391:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 13


 419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 260              		.loc 1 421 0
 261 0016 FFF7FEFF 		bl	CapSense_CalculateThresholds
 262              	.LVL24:
 422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 424:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 263              		.loc 1 427 0
 264 001a 294B     		ldr	r3, .L29+12
 265 001c 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 266 0020 B342     		cmp	r3, r6
 267 0022 04D8     		bhi	.L20
 428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 268              		.loc 1 429 0
 269 0024 F51A     		subs	r5, r6, r3
 270 0026 ADB2     		uxth	r5, r5
 271              	.LVL25:
 430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 272              		.loc 1 430 0
 273 0028 4FF00108 		mov	r8, #1
 274 002c 03E0     		b	.L21
 275              	.LVL26:
 276              	.L20:
 431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 277              		.loc 1 434 0
 278 002e 9D1B     		subs	r5, r3, r6
 279 0030 ADB2     		uxth	r5, r5
 280              	.LVL27:
 435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 281              		.loc 1 435 0
 282 0032 4FF00008 		mov	r8, #0
 283              	.LVL28:
 284              	.L21:
 436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 437:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 285              		.loc 1 438 0
 286 0036 B8F1000F 		cmp	r8, #0
 287 003a 10D1     		bne	.L22
 288              		.loc 1 438 0 is_stmt 0 discriminator 1
 289 003c 142D     		cmp	r5, #20
 290 003e 0ED9     		bls	.L22
 439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 291              		.loc 1 440 0 is_stmt 1
 292 0040 204B     		ldr	r3, .L29+16
 293 0042 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 294 0044 042B     		cmp	r3, #4
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 14


 295 0046 06D9     		bls	.L23
 441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 296              		.loc 1 442 0
 297 0048 2046     		mov	r0, r4
 298 004a FFF7FEFF 		bl	CapSense_BaseInit
 299              	.LVL29:
 443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 300              		.loc 1 443 0
 301 004e 0022     		movs	r2, #0
 302 0050 1C4B     		ldr	r3, .L29+16
 303 0052 1A55     		strb	r2, [r3, r4]
 304 0054 19E0     		b	.L24
 305              	.L23:
 444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 306              		.loc 1 447 0
 307 0056 0133     		adds	r3, r3, #1
 308 0058 1A4A     		ldr	r2, .L29+16
 309 005a 1355     		strb	r3, [r2, r4]
 310 005c 15E0     		b	.L24
 311              	.L22:
 448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 312              		.loc 1 454 0
 313 005e AF42     		cmp	r7, r5
 314 0060 04D2     		bcs	.L25
 315              		.loc 1 454 0 is_stmt 0 discriminator 1
 316 0062 132D     		cmp	r5, #19
 317 0064 11D8     		bhi	.L24
 455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 318              		.loc 1 456 0 is_stmt 1
 319 0066 B8F1000F 		cmp	r8, #0
 320 006a 0ED1     		bne	.L24
 321              	.L25:
 322              	.LVL30:
 457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 323              		.loc 1 461 0
 324 006c 164A     		ldr	r2, .L29+20
 325 006e 115D     		ldrb	r1, [r2, r4]	@ zero_extendqisi2
 326 0070 41EA0321 		orr	r1, r1, r3, lsl #8
 327              	.LVL31:
 462:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 15


 328              		.loc 1 464 0
 329 0074 0E44     		add	r6, r6, r1
 330              	.LVL32:
 465:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 331              		.loc 1 467 0
 332 0076 F31A     		subs	r3, r6, r3
 333              	.LVL33:
 468:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 334              		.loc 1 470 0
 335 0078 C3F30F20 		ubfx	r0, r3, #8, #16
 336 007c 1049     		ldr	r1, .L29+12
 337 007e 21F81400 		strh	r0, [r1, r4, lsl #1]	@ movhi
 471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 338              		.loc 1 471 0
 339 0082 1355     		strb	r3, [r2, r4]
 472:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 340              		.loc 1 473 0
 341 0084 0022     		movs	r2, #0
 342 0086 0F4B     		ldr	r3, .L29+16
 343              	.LVL34:
 344 0088 1A55     		strb	r2, [r3, r4]
 345              	.L24:
 474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 478:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 346              		.loc 1 480 0
 347 008a AF42     		cmp	r7, r5
 348 008c 0DD2     		bcs	.L26
 349              		.loc 1 480 0 is_stmt 0 discriminator 1
 350 008e B8F1000F 		cmp	r8, #0
 351 0092 0AD0     		beq	.L26
 481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 352              		.loc 1 484 0 is_stmt 1
 353 0094 FF2D     		cmp	r5, #255
 354 0096 04D9     		bls	.L27
 485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 355              		.loc 1 486 0
 356 0098 FF22     		movs	r2, #255
 357 009a 0C4B     		ldr	r3, .L29+24
 358 009c 1A55     		strb	r2, [r3, r4]
 359 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 360              	.LVL35:
 361              	.L27:
 487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 16


 488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 362              		.loc 1 490 0
 363 00a2 0A4B     		ldr	r3, .L29+24
 364 00a4 1D55     		strb	r5, [r3, r4]
 365 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 366              	.LVL36:
 367              	.L26:
 491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 368              		.loc 1 499 0
 369 00aa 0022     		movs	r2, #0
 370 00ac 074B     		ldr	r3, .L29+24
 371 00ae 1A55     		strb	r2, [r3, r4]
 372 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 373              	.LVL37:
 374              	.L30:
 375              		.align	2
 376              	.L29:
 377 00b4 00000000 		.word	CapSense_widgetNumber
 378 00b8 00000000 		.word	.LANCHOR0
 379 00bc 00000000 		.word	CapSense_sensorRaw
 380 00c0 00000000 		.word	CapSense_sensorBaseline
 381 00c4 00000000 		.word	CapSense_lowBaselineResetCnt
 382 00c8 00000000 		.word	CapSense_sensorBaselineLow
 383 00cc 00000000 		.word	CapSense_sensorSignal
 384              		.cfi_endproc
 385              	.LFE4:
 386              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 387              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 388              		.align	2
 389              		.global	CapSense_UpdateEnabledBaselines
 390              		.thumb
 391              		.thumb_func
 392              		.type	CapSense_UpdateEnabledBaselines, %function
 393              	CapSense_UpdateEnabledBaselines:
 394              	.LFB5:
 500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 501:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 506:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 507:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 508:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 510:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 511:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 17


 512:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 514:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 515:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 516:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 517:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 518:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 519:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 520:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 521:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 522:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 523:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 524:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 525:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 526:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 527:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 529:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 530:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 531:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 532:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 533:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 534:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 535:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 536:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 540:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 395              		.loc 1 540 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 70B5     		push	{r4, r5, r6, lr}
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 4, -16
 402              		.cfi_offset 5, -12
 403              		.cfi_offset 6, -8
 404              		.cfi_offset 14, -4
 405              	.LVL38:
 541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 406              		.loc 1 545 0
 407 0002 0024     		movs	r4, #0
 546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 408              		.loc 1 548 0
 409 0004 0126     		movs	r6, #1
 549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 410              		.loc 1 549 0
 411 0006 094D     		ldr	r5, .L35
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 412              		.loc 1 545 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 18


 413 0008 0CE0     		b	.L32
 414              	.LVL39:
 415              	.L34:
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 416              		.loc 1 547 0
 417 000a E308     		lsrs	r3, r4, #3
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 418              		.loc 1 548 0
 419 000c 04F00702 		and	r2, r4, #7
 420 0010 06FA02F2 		lsl	r2, r6, r2
 421              	.LVL40:
 422              		.loc 1 549 0
 423 0014 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 424 0016 1A42     		tst	r2, r3
 425 0018 02D0     		beq	.L33
 550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 426              		.loc 1 551 0
 427 001a 2046     		mov	r0, r4
 428 001c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 429              	.LVL41:
 430              	.L33:
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 431              		.loc 1 545 0
 432 0020 0134     		adds	r4, r4, #1
 433              	.LVL42:
 434 0022 E4B2     		uxtb	r4, r4
 435              	.LVL43:
 436              	.L32:
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 437              		.loc 1 545 0 is_stmt 0 discriminator 1
 438 0024 062C     		cmp	r4, #6
 439 0026 F0D9     		bls	.L34
 552:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 554:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 440              		.loc 1 554 0 is_stmt 1
 441 0028 70BD     		pop	{r4, r5, r6, pc}
 442              	.LVL44:
 443              	.L36:
 444 002a 00BF     		.align	2
 445              	.L35:
 446 002c 00000000 		.word	CapSense_sensorEnableMask
 447              		.cfi_endproc
 448              	.LFE5:
 449              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 450              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 451              		.align	2
 452              		.global	CapSense_CheckIsSensorActive
 453              		.thumb
 454              		.thumb_func
 455              		.type	CapSense_CheckIsSensorActive, %function
 456              	CapSense_CheckIsSensorActive:
 457              	.LFB6:
 555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 556:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 19


 558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 559:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 560:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 561:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 563:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 564:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 565:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 566:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 567:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 569:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 571:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 572:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 573:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 575:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 576:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 577:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 579:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 580:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 582:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 583:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 584:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 585:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 586:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 587:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 588:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 589:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 590:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 591:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 592:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 593:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 594:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 595:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 598:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 458              		.loc 1 598 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.LVL45:
 464 0000 F0B4     		push	{r4, r5, r6, r7}
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 4, -16
 467              		.cfi_offset 5, -12
 468              		.cfi_offset 6, -8
 469              		.cfi_offset 7, -4
 599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 470              		.loc 1 601 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 20


 471 0002 C108     		lsrs	r1, r0, #3
 472              	.LVL46:
 602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 473              		.loc 1 602 0
 474 0004 00F00703 		and	r3, r0, #7
 475 0008 0122     		movs	r2, #1
 476 000a 9A40     		lsls	r2, r2, r3
 477 000c D2B2     		uxtb	r2, r2
 478              	.LVL47:
 603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 479              		.loc 1 604 0
 480 000e 1F4B     		ldr	r3, .L46
 481 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 482              	.LVL48:
 605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 483              		.loc 1 605 0
 484 0012 1F4C     		ldr	r4, .L46+4
 485 0014 E518     		adds	r5, r4, r3
 486 0016 2E7A     		ldrb	r6, [r5, #8]	@ zero_extendqisi2
 487              	.LVL49:
 606:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 488              		.loc 1 606 0
 489 0018 2D7B     		ldrb	r5, [r5, #12]	@ zero_extendqisi2
 490              	.LVL50:
 607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 491              		.loc 1 607 0
 492 001a E75C     		ldrb	r7, [r4, r3]	@ zero_extendqisi2
 493              	.LVL51:
 608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 494              		.loc 1 609 0
 495 001c 23B9     		cbnz	r3, .L38
 496              	.LVL52:
 610:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 612:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 497              		.loc 1 612 0
 498 001e 0124     		movs	r4, #1
 499              	.LVL53:
 500 0020 1C4B     		ldr	r3, .L46+8
 501              	.LVL54:
 502 0022 9C70     		strb	r4, [r3, #2]
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 503              		.loc 1 611 0
 504 0024 0223     		movs	r3, #2
 505 0026 01E0     		b	.L39
 506              	.LVL55:
 507              	.L38:
 613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1);
 508              		.loc 1 616 0
 509 0028 013B     		subs	r3, r3, #1
 510              	.LVL56:
 511 002a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 21


 512              	.LVL57:
 513              	.L39:
 617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 618:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 514              		.loc 1 621 0
 515 002c 1A4C     		ldr	r4, .L46+12
 516 002e 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 517 0030 1442     		tst	r4, r2
 518 0032 0DD0     		beq	.L40
 622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 624:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 519              		.loc 1 624 0
 520 0034 DFF864C0 		ldr	ip, .L46+16
 521 0038 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 522              	.LVL58:
 523 003c 751B     		subs	r5, r6, r5
 524              	.LVL59:
 525 003e A842     		cmp	r0, r5
 526 0040 1BDA     		bge	.L41
 625:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 626:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 527              		.loc 1 626 0
 528 0042 24EA0204 		bic	r4, r4, r2
 529 0046 1448     		ldr	r0, .L46+12
 530 0048 4454     		strb	r4, [r0, r1]
 627:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 531              		.loc 1 627 0
 532 004a 1248     		ldr	r0, .L46+8
 533 004c C754     		strb	r7, [r0, r3]
 534 004e 14E0     		b	.L41
 535              	.LVL60:
 536              	.L40:
 628:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 630:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 537              		.loc 1 633 0
 538 0050 DFF848C0 		ldr	ip, .L46+16
 539 0054 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 540              	.LVL61:
 541 0058 3544     		add	r5, r5, r6
 542              	.LVL62:
 543 005a A842     		cmp	r0, r5
 544 005c 0BDD     		ble	.L42
 634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 635:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 545              		.loc 1 636 0
 546 005e 1846     		mov	r0, r3
 547 0060 0C4D     		ldr	r5, .L46+8
 548 0062 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 22


 549              	.LVL63:
 550 0064 012B     		cmp	r3, #1
 551 0066 02D8     		bhi	.L43
 637:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 552              		.loc 1 638 0
 553 0068 1443     		orrs	r4, r4, r2
 554 006a 0B4D     		ldr	r5, .L46+12
 555 006c 6C54     		strb	r4, [r5, r1]
 556              	.L43:
 639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 557              		.loc 1 640 0
 558 006e 013B     		subs	r3, r3, #1
 559 0070 084C     		ldr	r4, .L46+8
 560 0072 2354     		strb	r3, [r4, r0]
 561 0074 01E0     		b	.L41
 562              	.LVL64:
 563              	.L42:
 641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 564              		.loc 1 645 0
 565 0076 0748     		ldr	r0, .L46+8
 566 0078 C754     		strb	r7, [r0, r3]
 567              	.LVL65:
 568              	.L41:
 646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 569              		.loc 1 649 0
 570 007a 074B     		ldr	r3, .L46+12
 571 007c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 572 007e 1342     		tst	r3, r2
 573 0080 01D0     		beq	.L45
 574 0082 0120     		movs	r0, #1
 575 0084 00E0     		b	.L44
 576              	.L45:
 577 0086 0020     		movs	r0, #0
 578              	.L44:
 650:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 579              		.loc 1 650 0 discriminator 3
 580 0088 F0BC     		pop	{r4, r5, r6, r7}
 581              	.LVL66:
 582 008a 7047     		bx	lr
 583              	.L47:
 584              		.align	2
 585              	.L46:
 586 008c 00000000 		.word	CapSense_widgetNumber
 587 0090 00000000 		.word	.LANCHOR0
 588 0094 00000000 		.word	.LANCHOR1
 589 0098 00000000 		.word	CapSense_sensorOnMask
 590 009c 00000000 		.word	CapSense_sensorSignal
 591              		.cfi_endproc
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 23


 592              	.LFE6:
 593              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 594              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 595              		.align	2
 596              		.global	CapSense_CheckIsWidgetActive
 597              		.thumb
 598              		.thumb_func
 599              		.type	CapSense_CheckIsWidgetActive, %function
 600              	CapSense_CheckIsWidgetActive:
 601              	.LFB7:
 651:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 652:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 653:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 654:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 655:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 656:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 657:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 658:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 659:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 660:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 661:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 662:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 663:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 664:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 665:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 666:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 667:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 668:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 669:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 670:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 671:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 672:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 673:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 674:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 675:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 676:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 678:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 602              		.loc 1 678 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              	.LVL67:
 607 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 608              		.cfi_def_cfa_offset 24
 609              		.cfi_offset 3, -24
 610              		.cfi_offset 4, -20
 611              		.cfi_offset 5, -16
 612              		.cfi_offset 6, -12
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 615              		.loc 1 679 0
 616 0002 094B     		ldr	r3, .L53
 617 0004 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 618              	.LVL68:
 680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 24


 619              		.loc 1 680 0
 620 0006 1844     		add	r0, r0, r3
 621              	.LVL69:
 622 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 623 000a 2544     		add	r5, r5, r4
 624 000c EDB2     		uxtb	r5, r5
 625              	.LVL70:
 681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 626              		.loc 1 681 0
 627 000e 0026     		movs	r6, #0
 682:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 628              		.loc 1 688 0
 629 0010 0127     		movs	r7, #1
 630              	.LVL71:
 631              	.L50:
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 632              		.loc 1 686 0
 633 0012 2046     		mov	r0, r4
 634 0014 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 635              	.LVL72:
 636 0018 00B1     		cbz	r0, .L49
 637              		.loc 1 688 0
 638 001a 3E46     		mov	r6, r7
 639              	.L49:
 689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 640              		.loc 1 690 0
 641 001c 0134     		adds	r4, r4, #1
 642              	.LVL73:
 643 001e E4B2     		uxtb	r4, r4
 644              	.LVL74:
 691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 645              		.loc 1 692 0
 646 0020 AC42     		cmp	r4, r5
 647 0022 F6D3     		bcc	.L50
 693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 694:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 697:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 648              		.loc 1 697 0
 649 0024 3046     		mov	r0, r6
 650 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 651              	.LVL75:
 652              	.L54:
 653              		.align	2
 654              	.L53:
 655 0028 00000000 		.word	.LANCHOR2
 656              		.cfi_endproc
 657              	.LFE7:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 25


 658              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 659              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 660              		.align	2
 661              		.global	CapSense_CheckIsAnyWidgetActive
 662              		.thumb
 663              		.thumb_func
 664              		.type	CapSense_CheckIsAnyWidgetActive, %function
 665              	CapSense_CheckIsAnyWidgetActive:
 666              	.LFB8:
 698:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 700:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 702:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 703:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 704:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 705:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 707:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 708:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 709:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 711:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 712:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 714:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 715:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 716:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 717:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 719:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 722:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 667              		.loc 1 722 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671 0000 70B5     		push	{r4, r5, r6, lr}
 672              		.cfi_def_cfa_offset 16
 673              		.cfi_offset 4, -16
 674              		.cfi_offset 5, -12
 675              		.cfi_offset 6, -8
 676              		.cfi_offset 14, -4
 677              	.LVL76:
 723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 678              		.loc 1 724 0
 679 0002 0025     		movs	r5, #0
 725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 680              		.loc 1 726 0
 681 0004 2C46     		mov	r4, r5
 727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 26


 682              		.loc 1 730 0
 683 0006 0126     		movs	r6, #1
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 684              		.loc 1 726 0
 685 0008 06E0     		b	.L56
 686              	.LVL77:
 687              	.L58:
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 688              		.loc 1 728 0
 689 000a 2046     		mov	r0, r4
 690 000c FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 691              	.LVL78:
 692 0010 00B1     		cbz	r0, .L57
 693              		.loc 1 730 0
 694 0012 3546     		mov	r5, r6
 695              	.L57:
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 696              		.loc 1 726 0
 697 0014 0134     		adds	r4, r4, #1
 698              	.LVL79:
 699 0016 E4B2     		uxtb	r4, r4
 700              	.LVL80:
 701              	.L56:
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 702              		.loc 1 726 0 is_stmt 0 discriminator 1
 703 0018 022C     		cmp	r4, #2
 704 001a F6D9     		bls	.L58
 731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 732:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 734:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 736:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 705              		.loc 1 736 0 is_stmt 1
 706 001c 2846     		mov	r0, r5
 707 001e 70BD     		pop	{r4, r5, r6, pc}
 708              		.cfi_endproc
 709              	.LFE8:
 710              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 711              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 712              		.align	2
 713              		.global	CapSense_EnableWidget
 714              		.thumb
 715              		.thumb_func
 716              		.type	CapSense_EnableWidget, %function
 717              	CapSense_EnableWidget:
 718              	.LFB9:
 737:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 738:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 739:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 740:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 741:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 742:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 743:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 744:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 745:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 746:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 27


 747:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 748:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 749:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 750:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 751:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 752:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 753:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 754:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 755:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 756:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 757:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 758:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 759:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 760:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 761:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 762:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 763:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 764:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 765:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 768:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 719              		.loc 1 768 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 724              	.LVL81:
 725 0000 70B4     		push	{r4, r5, r6}
 726              		.cfi_def_cfa_offset 12
 727              		.cfi_offset 4, -12
 728              		.cfi_offset 5, -8
 729              		.cfi_offset 6, -4
 769:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 730              		.loc 1 771 0
 731 0002 0B4A     		ldr	r2, .L63
 732 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 733              	.LVL82:
 772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 734              		.loc 1 772 0
 735 0006 1044     		add	r0, r0, r2
 736              	.LVL83:
 737 0008 0679     		ldrb	r6, [r0, #4]	@ zero_extendqisi2
 738 000a 1E44     		add	r6, r6, r3
 739 000c F6B2     		uxtb	r6, r6
 740              	.LVL84:
 773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 741              		.loc 1 778 0
 742 000e 0125     		movs	r5, #1
 779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 28


 780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 743              		.loc 1 780 0
 744 0010 0849     		ldr	r1, .L63+4
 745              	.LVL85:
 746              	.L61:
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 747              		.loc 1 777 0 discriminator 1
 748 0012 DA08     		lsrs	r2, r3, #3
 749              	.LVL86:
 778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 750              		.loc 1 778 0 discriminator 1
 751 0014 03F00700 		and	r0, r3, #7
 752 0018 05FA00F0 		lsl	r0, r5, r0
 753              	.LVL87:
 754              		.loc 1 780 0 discriminator 1
 755 001c 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 756 001e 2043     		orrs	r0, r0, r4
 757              	.LVL88:
 758 0020 8854     		strb	r0, [r1, r2]
 781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 759              		.loc 1 781 0 discriminator 1
 760 0022 0133     		adds	r3, r3, #1
 761              	.LVL89:
 762 0024 DBB2     		uxtb	r3, r3
 763              	.LVL90:
 782:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 764              		.loc 1 783 0 discriminator 1
 765 0026 B342     		cmp	r3, r6
 766 0028 F3D3     		bcc	.L61
 784:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 785:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 786:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 767              		.loc 1 786 0
 768 002a 70BC     		pop	{r4, r5, r6}
 769              	.LVL91:
 770 002c 7047     		bx	lr
 771              	.L64:
 772 002e 00BF     		.align	2
 773              	.L63:
 774 0030 00000000 		.word	.LANCHOR2
 775 0034 00000000 		.word	CapSense_sensorEnableMask
 776              		.cfi_endproc
 777              	.LFE9:
 778              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 779              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 780              		.align	2
 781              		.global	CapSense_DisableWidget
 782              		.thumb
 783              		.thumb_func
 784              		.type	CapSense_DisableWidget, %function
 785              	CapSense_DisableWidget:
 786              	.LFB10:
 787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 788:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 789:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 29


 791:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 792:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 794:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 795:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 796:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 797:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 798:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 799:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 800:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 801:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 803:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 804:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 805:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 806:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 807:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 808:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 809:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 811:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 813:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 814:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 816:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 818:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 787              		.loc 1 818 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL92:
 793 0000 70B4     		push	{r4, r5, r6}
 794              		.cfi_def_cfa_offset 12
 795              		.cfi_offset 4, -12
 796              		.cfi_offset 5, -8
 797              		.cfi_offset 6, -4
 819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 798              		.loc 1 821 0
 799 0002 0B4A     		ldr	r2, .L68
 800 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 801              	.LVL93:
 822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 802              		.loc 1 822 0
 803 0006 1044     		add	r0, r0, r2
 804              	.LVL94:
 805 0008 0679     		ldrb	r6, [r0, #4]	@ zero_extendqisi2
 806 000a 1E44     		add	r6, r6, r3
 807 000c F6B2     		uxtb	r6, r6
 808              	.LVL95:
 823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****    
 824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 30


 826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 809              		.loc 1 828 0
 810 000e 0125     		movs	r5, #1
 829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 811              		.loc 1 830 0
 812 0010 0849     		ldr	r1, .L68+4
 813              	.LVL96:
 814              	.L66:
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 815              		.loc 1 827 0 discriminator 1
 816 0012 DA08     		lsrs	r2, r3, #3
 817              	.LVL97:
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 818              		.loc 1 828 0 discriminator 1
 819 0014 03F00700 		and	r0, r3, #7
 820 0018 05FA00F0 		lsl	r0, r5, r0
 821              	.LVL98:
 822              		.loc 1 830 0 discriminator 1
 823 001c 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 824 001e 24EA0000 		bic	r0, r4, r0
 825              	.LVL99:
 826 0022 8854     		strb	r0, [r1, r2]
 831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 827              		.loc 1 831 0 discriminator 1
 828 0024 0133     		adds	r3, r3, #1
 829              	.LVL100:
 830 0026 DBB2     		uxtb	r3, r3
 831              	.LVL101:
 832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 832              		.loc 1 833 0 discriminator 1
 833 0028 B342     		cmp	r3, r6
 834 002a F2D3     		bcc	.L66
 834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 835:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 836:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 835              		.loc 1 836 0
 836 002c 70BC     		pop	{r4, r5, r6}
 837              	.LVL102:
 838 002e 7047     		bx	lr
 839              	.L69:
 840              		.align	2
 841              	.L68:
 842 0030 00000000 		.word	.LANCHOR2
 843 0034 00000000 		.word	CapSense_sensorEnableMask
 844              		.cfi_endproc
 845              	.LFE10:
 846              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 847              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 848              		.align	2
 849              		.global	CapSense_FindMaximum
 850              		.thumb
 851              		.thumb_func
 852              		.type	CapSense_FindMaximum, %function
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 31


 853              	CapSense_FindMaximum:
 854              	.LFB11:
 837:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 838:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 839:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 856:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 864:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 867:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 855              		.loc 1 869 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860              	.LVL103:
 861 0000 70B4     		push	{r4, r5, r6}
 862              		.cfi_def_cfa_offset 12
 863              		.cfi_offset 4, -12
 864              		.cfi_offset 5, -8
 865              		.cfi_offset 6, -4
 866              	.LVL104:
 870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 32


 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset]; 
 867              		.loc 1 882 0
 868 0002 094D     		ldr	r5, .L75
 869 0004 0544     		add	r5, r5, r0
 870              	.LVL105:
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 871              		.loc 1 881 0
 872 0006 0026     		movs	r6, #0
 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 873              		.loc 1 880 0
 874 0008 FF20     		movs	r0, #255
 875              	.LVL106:
 883:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 33


 926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 945:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
 978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 876              		.loc 1 979 0
 877 000a 3346     		mov	r3, r6
 878 000c 08E0     		b	.L71
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 34


 879              	.LVL107:
 880              	.L73:
 980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
 982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 881              		.loc 1 982 0
 882 000e EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 883 0010 9442     		cmp	r4, r2
 884 0012 03D9     		bls	.L72
 983:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 885              		.loc 1 984 0
 886 0014 A642     		cmp	r6, r4
 887 0016 01D2     		bcs	.L72
 985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 987:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 888              		.loc 1 987 0
 889 0018 2646     		mov	r6, r4
 890              	.LVL108:
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 891              		.loc 1 986 0
 892 001a 1846     		mov	r0, r3
 893              	.L72:
 894              	.LVL109:
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 895              		.loc 1 979 0
 896 001c 0133     		adds	r3, r3, #1
 897              	.LVL110:
 898 001e DBB2     		uxtb	r3, r3
 899              	.LVL111:
 900              	.L71:
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 901              		.loc 1 979 0 is_stmt 0 discriminator 1
 902 0020 8B42     		cmp	r3, r1
 903 0022 F4D3     		bcc	.L73
 988:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 904              		.loc 1 993 0 is_stmt 1
 905 0024 70BC     		pop	{r4, r5, r6}
 906              	.LVL112:
 907 0026 7047     		bx	lr
 908              	.L76:
 909              		.align	2
 910              	.L75:
 911 0028 00000000 		.word	CapSense_sensorSignal
 912              		.cfi_endproc
 913              	.LFE11:
 914              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 915              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 916              		.align	2
 917              		.global	CapSense_CalcCentroid
 918              		.thumb
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 35


 919              		.thumb_func
 920              		.type	CapSense_CalcCentroid, %function
 921              	CapSense_CalcCentroid:
 922              	.LFB12:
 994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 995:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
 998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
1002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
1003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
1006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1017:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1018:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1019:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1020:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1021:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1022:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1023:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1024:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1025:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 923              		.loc 1 1025 0
 924              		.cfi_startproc
 925              		@ args = 4, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 928              	.LVL113:
 929 0000 F0B4     		push	{r4, r5, r6, r7}
 930              		.cfi_def_cfa_offset 16
 931              		.cfi_offset 4, -16
 932              		.cfi_offset 5, -12
 933              		.cfi_offset 6, -8
 934              		.cfi_offset 7, -4
 935 0002 9DF81050 		ldrb	r5, [sp, #16]	@ zero_extendqisi2
 936              	.LVL114:
1026:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
1028:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
1029:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1030:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                
1031:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1032:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 36


1033:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1034:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1035:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
1036:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint8 CapSense_centroid[3u];
1037:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1038:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1039:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
1040:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1041:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 937              		.loc 1 1041 0
 938 0006 2A4C     		ldr	r4, .L87
 939 0008 2144     		add	r1, r1, r4
 940              	.LVL115:
1042:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1043:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1044:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1045:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1046:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1047:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1048:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1049:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1050:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1051:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1052:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1053:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1054:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1055:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1056:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1057:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1058:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1059:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1060:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1061:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1062:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1063:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1064:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1065:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1066:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1067:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1068:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1069:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1070:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1071:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1072:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1073:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1074:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1075:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1076:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1077:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1078:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1079:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1080:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1081:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1082:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1083:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1084:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1085:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 37


1086:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1087:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1088:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1089:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1090:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1091:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1092:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1093:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1094:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1095:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1096:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1097:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1098:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1099:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1100:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
 941              		.loc 1 1100 0
 942 000a 0446     		mov	r4, r0
 943 000c 20B1     		cbz	r0, .L86
1101:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 944              		.loc 1 1102 0
 945 000e 00F1FF3C 		add	ip, r0, #-1
 946 0012 5FFA8CFC 		uxtb	ip, ip
 947              	.LVL116:
 948 0016 01E0     		b	.L78
 949              	.LVL117:
 950              	.L86:
1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
 951              		.loc 1 1027 0
 952 0018 4FF0000C 		mov	ip, #0
 953              	.LVL118:
 954              	.L78:
1103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1104:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
 955              		.loc 1 1104 0
 956 001c 601C     		adds	r0, r4, #1
 957              	.LVL119:
 958 001e C7B2     		uxtb	r7, r0
 959              	.LVL120:
1105:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1108:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1109:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 960              		.loc 1 1111 0
 961 0020 0E5D     		ldrb	r6, [r1, r4]	@ zero_extendqisi2
 962 0022 2448     		ldr	r0, .L87+4
 963              	.LVL121:
 964 0024 4671     		strb	r6, [r0, #5]
1112:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1113:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 965              		.loc 1 1115 0
 966 0026 2CB9     		cbnz	r4, .L79
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 38


1116:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1117:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 967              		.loc 1 1117 0
 968 0028 0246     		mov	r2, r0
 969              	.LVL122:
 970 002a 0020     		movs	r0, #0
 971 002c 1071     		strb	r0, [r2, #4]
1118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 972              		.loc 1 1118 0
 973 002e C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 974              	.LVL123:
 975 0030 9171     		strb	r1, [r2, #6]
 976 0032 0FE0     		b	.L80
 977              	.LVL124:
 978              	.L79:
1119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1120:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 979              		.loc 1 1120 0
 980 0034 013A     		subs	r2, r2, #1
 981              	.LVL125:
 982 0036 9442     		cmp	r4, r2
 983 0038 06D1     		bne	.L81
1121:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1122:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 984              		.loc 1 1122 0
 985 003a 11F80C10 		ldrb	r1, [r1, ip]	@ zero_extendqisi2
 986              	.LVL126:
 987 003e 1D4A     		ldr	r2, .L87+4
 988 0040 1171     		strb	r1, [r2, #4]
1123:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 989              		.loc 1 1123 0
 990 0042 0021     		movs	r1, #0
 991 0044 9171     		strb	r1, [r2, #6]
 992 0046 05E0     		b	.L80
 993              	.LVL127:
 994              	.L81:
1124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 995              		.loc 1 1127 0
 996 0048 11F80C00 		ldrb	r0, [r1, ip]	@ zero_extendqisi2
 997 004c 194A     		ldr	r2, .L87+4
 998 004e 1071     		strb	r0, [r2, #4]
1128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 999              		.loc 1 1128 0
 1000 0050 C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 1001              	.LVL128:
 1002 0052 9171     		strb	r1, [r2, #6]
 1003              	.L80:
1129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1131:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 39


1136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1004              		.loc 1 1137 0
 1005 0054 174A     		ldr	r2, .L87+4
 1006 0056 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 1007 0058 AA42     		cmp	r2, r5
 1008 005a 03D9     		bls	.L82
1138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1009              		.loc 1 1139 0
 1010 005c 521B     		subs	r2, r2, r5
 1011 005e 1549     		ldr	r1, .L87+4
 1012 0060 0A71     		strb	r2, [r1, #4]
 1013 0062 02E0     		b	.L83
 1014              	.L82:
1140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1015              		.loc 1 1143 0
 1016 0064 0021     		movs	r1, #0
 1017 0066 134A     		ldr	r2, .L87+4
 1018 0068 1171     		strb	r1, [r2, #4]
 1019              	.L83:
1144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1020              		.loc 1 1147 0
 1021 006a 124A     		ldr	r2, .L87+4
 1022 006c 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1023 006e 491B     		subs	r1, r1, r5
 1024 0070 C9B2     		uxtb	r1, r1
 1025 0072 5171     		strb	r1, [r2, #5]
1148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1026              		.loc 1 1150 0
 1027 0074 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 1028 0076 AA42     		cmp	r2, r5
 1029 0078 03D9     		bls	.L84
1151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1030              		.loc 1 1152 0
 1031 007a 551B     		subs	r5, r2, r5
 1032 007c 0D48     		ldr	r0, .L87+4
 1033 007e 8571     		strb	r5, [r0, #6]
 1034 0080 02E0     		b	.L85
 1035              	.L84:
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1155:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1036              		.loc 1 1156 0
 1037 0082 0020     		movs	r0, #0
 1038 0084 0B4A     		ldr	r2, .L87+4
 1039 0086 9071     		strb	r0, [r2, #6]
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 40


 1040              	.L85:
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1041              		.loc 1 1161 0
 1042 0088 0A48     		ldr	r0, .L87+4
 1043 008a 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
1162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1044              		.loc 1 1162 0
 1045 008c 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1046              		.loc 1 1161 0
 1047 008e 151A     		subs	r5, r2, r0
 1048              	.LVL129:
1163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1049              		.loc 1 1165 0
 1050 0090 0844     		add	r0, r0, r1
 1051 0092 0244     		add	r2, r2, r0
 1052              	.LVL130:
1166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1053              		.loc 1 1170 0
 1054 0094 2802     		lsls	r0, r5, #8
 1055 0096 90FBF2F0 		sdiv	r0, r0, r2
 1056 009a 00EB0420 		add	r0, r0, r4, lsl #8
 1057              	.LVL131:
1171:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1175:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1179:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1058              		.loc 1 1180 0
 1059 009e 1BB2     		sxth	r3, r3
 1060 00a0 00FB03F0 		mul	r0, r0, r3
 1061              	.LVL132:
1181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1182:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1062              		.loc 1 1183 0
 1063 00a4 00F5FE40 		add	r0, r0, #32512
 1064              	.LVL133:
1184:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
 1065              		.loc 1 1186 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 41


 1066 00a8 C0F30740 		ubfx	r0, r0, #16, #8
 1067              	.LVL134:
 1068 00ac F0BC     		pop	{r4, r5, r6, r7}
 1069              	.LVL135:
 1070 00ae 7047     		bx	lr
 1071              	.L88:
 1072              		.align	2
 1073              	.L87:
 1074 00b0 00000000 		.word	CapSense_sensorSignal
 1075 00b4 00000000 		.word	.LANCHOR1
 1076              		.cfi_endproc
 1077              	.LFE12:
 1078              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1079              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1080              		.align	2
 1081              		.global	CapSense_IIR4Filter
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	CapSense_IIR4Filter, %function
 1085              	CapSense_IIR4Filter:
 1086              	.LFB14:
1187:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1188:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1191:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 42


1223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1238:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1245:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1246:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1247:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1250:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1259:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1261:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1262:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1269:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1275:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 43


1280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1291:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1297:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1319:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1322:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1329:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1330:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1331:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1332:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1333:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1334:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1335:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 44


1337:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1338:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1339:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1340:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1341:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1342:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1343:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1344:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1345:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1350:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1358:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1372:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1378:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1387:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1392:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1393:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 45


1394:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1402:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1432:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1439:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1446:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 46


1451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1464:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1480:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 47


1508:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1511:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1513:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1516:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1519:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
1521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1523:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1526:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1537:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1548:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1552:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1555:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1556:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1557:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1558:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1559:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1560:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1561:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1563:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1564:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 48


1565:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1566:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1567:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1569:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1570:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1571:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1572:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1573:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1574:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1575:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1576:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1577:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1578:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1579:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1580:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1582:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1583:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1606:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1610:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1612:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1620:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 49


1622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1624:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1625:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1626:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1627:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1628:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1630:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1635:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxX;
1637:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxY;
1638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1650:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maxX != 0xFFu)
1652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1655:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1662:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (maxY != 0xFFu)
1664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(maxY, offset, count, 
1670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1672:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(maxX, offset, count, 
1677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 50


1679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1692:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
1694:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
1695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1697:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1699:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1700:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1702:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1703:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1704:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1705:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1706:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1707:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1708:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1709:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1710:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1711:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1712:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1713:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1714:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1715:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1719:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
1720:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1732:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 51


1736:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1737:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1738:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1741:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1744:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1747:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1748:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1749:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1750:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1751:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
1752:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1753:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1754:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1755:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1756:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1757:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1758:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1760:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1762:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1766:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
1768:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1769:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1778:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1782:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
1783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1784:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1785:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1786:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
1787:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1788:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1789:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1790:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1791:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1792:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 52


1793:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1794:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1795:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1796:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1797:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1798:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1799:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1800:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1801:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1802:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1803:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1806:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1807:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1808:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1809:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1810:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1811:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1812:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1818:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1832:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1833:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1834:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1835:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1838:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1839:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 53


1850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1856:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
1861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
1863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
1865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
1868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
1870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1874:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1877:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1878:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1906:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 54


1907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1909:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1911:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
1929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
1936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1939:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1942:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1943:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1944:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) | \
1945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
1946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
1948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
1962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 55


 1087              		.loc 1 1963 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092              	.LVL136:
1964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1093              		.loc 1 1967 0
 1094 0000 00EB4100 		add	r0, r0, r1, lsl #1
 1095              	.LVL137:
1968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1096              		.loc 1 1968 0
 1097 0004 0844     		add	r0, r0, r1
 1098              	.LVL138:
1969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 2u;
1970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1099              		.loc 1 1972 0
 1100 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 1101              	.LVL139:
 1102 000a 7047     		bx	lr
 1103              		.cfi_endproc
 1104              	.LFE14:
 1105              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1106              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1107              		.align	2
 1108              		.global	CapSense_GetCentroidPos
 1109              		.thumb
 1110              		.thumb_func
 1111              		.type	CapSense_GetCentroidPos, %function
 1112              	CapSense_GetCentroidPos:
 1113              	.LFB13:
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1114              		.loc 1 1228 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              	.LVL140:
 1119 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1120              		.cfi_def_cfa_offset 24
 1121              		.cfi_offset 4, -24
 1122              		.cfi_offset 5, -20
 1123              		.cfi_offset 6, -16
 1124              		.cfi_offset 7, -12
 1125              		.cfi_offset 8, -8
 1126              		.cfi_offset 14, -4
 1127 0004 82B0     		sub	sp, sp, #8
 1128              		.cfi_def_cfa_offset 32
 1129 0006 0446     		mov	r4, r0
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 1130              		.loc 1 1235 0
 1131 0008 1B4B     		ldr	r3, .L94
 1132 000a 0344     		add	r3, r3, r0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 56


 1133 000c 1D7C     		ldrb	r5, [r3, #16]	@ zero_extendqisi2
 1134              	.LVL141:
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1135              		.loc 1 1248 0
 1136 000e 1B4A     		ldr	r2, .L94+4
 1137 0010 175C     		ldrb	r7, [r2, r0]	@ zero_extendqisi2
 1138              	.LVL142:
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1139              		.loc 1 1249 0
 1140 0012 0244     		add	r2, r2, r0
 1141              	.LVL143:
 1142 0014 1679     		ldrb	r6, [r2, #4]	@ zero_extendqisi2
 1143              	.LVL144:
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
 1144              		.loc 1 1267 0
 1145 0016 3846     		mov	r0, r7
 1146              	.LVL145:
 1147 0018 3146     		mov	r1, r6
 1148 001a 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1149              	.LVL146:
 1150 001c FFF7FEFF 		bl	CapSense_FindMaximum
 1151              	.LVL147:
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1152              		.loc 1 1270 0
 1153 0020 FF28     		cmp	r0, #255
 1154 0022 20D0     		beq	.L91
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1155              		.loc 1 1273 0
 1156 0024 DFF85080 		ldr	r8, .L94
 1157 0028 4444     		add	r4, r4, r8
 1158              	.LVL148:
 1159 002a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1160 002c 0093     		str	r3, [sp]
 1161 002e 3946     		mov	r1, r7
 1162 0030 3246     		mov	r2, r6
 1163 0032 4FF4C853 		mov	r3, #6400
 1164 0036 FFF7FEFF 		bl	CapSense_CalcCentroid
 1165              	.LVL149:
 1166 003a 0346     		mov	r3, r0
 1167              	.LVL150:
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1168              		.loc 1 1281 0
 1169 003c 6A1C     		adds	r2, r5, #1
 1170 003e D1B2     		uxtb	r1, r2
 1171              	.LVL151:
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 1172              		.loc 1 1283 0
 1173 0040 A844     		add	r8, r8, r5
 1174 0042 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 1175              	.LVL152:
 1176 0046 32B9     		cbnz	r2, .L92
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 1177              		.loc 1 1286 0
 1178 0048 0B4C     		ldr	r4, .L94
 1179              	.LVL153:
 1180 004a 2144     		add	r1, r1, r4
 1181              	.LVL154:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 57


 1182 004c 0B74     		strb	r3, [r1, #16]
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 1183              		.loc 1 1303 0
 1184 004e 0123     		movs	r3, #1
 1185 0050 88F81030 		strb	r3, [r8, #16]
 1186 0054 0DE0     		b	.L93
 1187              	.LVL155:
 1188              	.L92:
1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 1189              		.loc 1 1352 0
 1190 0056 084C     		ldr	r4, .L94
 1191 0058 0C44     		add	r4, r4, r1
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
 1192              		.loc 1 1351 0
 1193 005a 1846     		mov	r0, r3
 1194              	.LVL156:
 1195 005c 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1196              	.LVL157:
 1197 005e FFF7FEFF 		bl	CapSense_IIR4Filter
 1198              	.LVL158:
1353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1199              		.loc 1 1353 0
 1200 0062 2074     		strb	r0, [r4, #16]
 1201 0064 05E0     		b	.L93
 1202              	.LVL159:
 1203              	.L91:
1383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 1204              		.loc 1 1383 0
 1205 0066 044B     		ldr	r3, .L94
 1206 0068 1D44     		add	r5, r5, r3
 1207              	.LVL160:
 1208 006a 0023     		movs	r3, #0
 1209 006c 2B74     		strb	r3, [r5, #16]
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
 1210              		.loc 1 1377 0
 1211 006e 4FF6FF70 		movw	r0, #65535
 1212              	.LVL161:
 1213              	.L93:
1390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1214              		.loc 1 1390 0
 1215 0072 02B0     		add	sp, sp, #8
 1216              		@ sp needed
 1217 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1218              	.LVL162:
 1219              	.L95:
 1220              		.align	2
 1221              	.L94:
 1222 0078 00000000 		.word	.LANCHOR0
 1223 007c 00000000 		.word	.LANCHOR2
 1224              		.cfi_endproc
 1225              	.LFE13:
 1226              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1227              		.global	CapSense_posFiltersData
 1228              		.global	CapSense_posFiltersMask
 1229              		.global	CapSense_centroidMult
 1230              		.global	CapSense_numberOfSensors
 1231              		.global	CapSense_rawDataIndex
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 58


 1232              		.global	CapSense_debounceCounter
 1233              		.global	CapSense_debounce
 1234              		.global	CapSense_hysteresis
 1235              		.global	CapSense_noiseThreshold
 1236              		.global	CapSense_fingerThreshold
 1237              		.comm	CapSense_lowBaselineResetCnt,7,4
 1238              		.comm	CapSense_sensorOnMask,1,4
 1239              		.comm	CapSense_sensorSignal,7,4
 1240              		.comm	CapSense_sensorBaselineLow,7,4
 1241              		.comm	CapSense_sensorBaseline,14,4
 1242              		.section	.rodata
 1243              		.align	2
 1244              		.set	.LANCHOR2,. + 0
 1245              		.type	CapSense_rawDataIndex, %object
 1246              		.size	CapSense_rawDataIndex, 3
 1247              	CapSense_rawDataIndex:
 1248 0000 02       		.byte	2
 1249 0001 00       		.byte	0
 1250 0002 01       		.byte	1
 1251 0003 00       		.space	1
 1252              		.type	CapSense_numberOfSensors, %object
 1253              		.size	CapSense_numberOfSensors, 3
 1254              	CapSense_numberOfSensors:
 1255 0004 05       		.byte	5
 1256 0005 01       		.byte	1
 1257 0006 01       		.byte	1
 1258 0007 00       		.space	1
 1259              		.type	CapSense_posFiltersMask, %object
 1260              		.size	CapSense_posFiltersMask, 1
 1261              	CapSense_posFiltersMask:
 1262 0008 08       		.byte	8
 1263 0009 000000   		.space	3
 1264              		.type	CapSense_centroidMult, %object
 1265              		.size	CapSense_centroidMult, 2
 1266              	CapSense_centroidMult:
 1267 000c 0019     		.short	6400
 1268 000e 0000     		.data
 1269              		.align	2
 1270              		.set	.LANCHOR0,. + 0
 1271              		.type	CapSense_debounce, %object
 1272              		.size	CapSense_debounce, 3
 1273              	CapSense_debounce:
 1274 0000 01       		.byte	1
 1275 0001 01       		.byte	1
 1276 0002 01       		.byte	1
 1277 0003 00       		.space	1
 1278              		.type	CapSense_noiseThreshold, %object
 1279              		.size	CapSense_noiseThreshold, 3
 1280              	CapSense_noiseThreshold:
 1281 0004 14       		.byte	20
 1282 0005 14       		.byte	20
 1283 0006 14       		.byte	20
 1284 0007 00       		.space	1
 1285              		.type	CapSense_fingerThreshold, %object
 1286              		.size	CapSense_fingerThreshold, 3
 1287              	CapSense_fingerThreshold:
 1288 0008 64       		.byte	100
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 59


 1289 0009 64       		.byte	100
 1290 000a 64       		.byte	100
 1291 000b 00       		.space	1
 1292              		.type	CapSense_hysteresis, %object
 1293              		.size	CapSense_hysteresis, 3
 1294              	CapSense_hysteresis:
 1295 000c 00       		.byte	0
 1296 000d 0A       		.byte	10
 1297 000e 0A       		.byte	10
 1298 000f 00       		.space	1
 1299              		.type	CapSense_posFiltersData, %object
 1300              		.size	CapSense_posFiltersData, 3
 1301              	CapSense_posFiltersData:
 1302 0010 01       		.byte	1
 1303 0011 00       		.byte	0
 1304 0012 00       		.byte	0
 1305 0013 00       		.bss
 1306              		.align	2
 1307              		.set	.LANCHOR1,. + 0
 1308              		.type	CapSense_debounceCounter, %object
 1309              		.size	CapSense_debounceCounter, 3
 1310              	CapSense_debounceCounter:
 1311 0000 000000   		.space	3
 1312 0003 00       		.space	1
 1313              		.type	CapSense_centroid.5139, %object
 1314              		.size	CapSense_centroid.5139, 3
 1315              	CapSense_centroid.5139:
 1316 0004 000000   		.space	3
 1317 0007 00       		.text
 1318              	.Letext0:
 1319              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1320              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense.h"
 1321              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1322              		.section	.debug_info,"",%progbits
 1323              	.Ldebug_info0:
 1324 0000 20090000 		.4byte	0x920
 1325 0004 0400     		.2byte	0x4
 1326 0006 00000000 		.4byte	.Ldebug_abbrev0
 1327 000a 04       		.byte	0x4
 1328 000b 01       		.uleb128 0x1
 1329 000c 31000000 		.4byte	.LASF81
 1330 0010 01       		.byte	0x1
 1331 0011 7D030000 		.4byte	.LASF82
 1332 0015 AD000000 		.4byte	.LASF83
 1333 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1334 001d 00000000 		.4byte	0
 1335 0021 00000000 		.4byte	.Ldebug_line0
 1336 0025 02       		.uleb128 0x2
 1337 0026 01       		.byte	0x1
 1338 0027 06       		.byte	0x6
 1339 0028 A6010000 		.4byte	.LASF0
 1340 002c 02       		.uleb128 0x2
 1341 002d 01       		.byte	0x1
 1342 002e 08       		.byte	0x8
 1343 002f ED040000 		.4byte	.LASF1
 1344 0033 02       		.uleb128 0x2
 1345 0034 02       		.byte	0x2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 60


 1346 0035 05       		.byte	0x5
 1347 0036 2A050000 		.4byte	.LASF2
 1348 003a 02       		.uleb128 0x2
 1349 003b 02       		.byte	0x2
 1350 003c 07       		.byte	0x7
 1351 003d 16030000 		.4byte	.LASF3
 1352 0041 02       		.uleb128 0x2
 1353 0042 04       		.byte	0x4
 1354 0043 05       		.byte	0x5
 1355 0044 EE010000 		.4byte	.LASF4
 1356 0048 02       		.uleb128 0x2
 1357 0049 04       		.byte	0x4
 1358 004a 07       		.byte	0x7
 1359 004b BB020000 		.4byte	.LASF5
 1360 004f 02       		.uleb128 0x2
 1361 0050 08       		.byte	0x8
 1362 0051 05       		.byte	0x5
 1363 0052 98010000 		.4byte	.LASF6
 1364 0056 02       		.uleb128 0x2
 1365 0057 08       		.byte	0x8
 1366 0058 07       		.byte	0x7
 1367 0059 18010000 		.4byte	.LASF7
 1368 005d 03       		.uleb128 0x3
 1369 005e 04       		.byte	0x4
 1370 005f 05       		.byte	0x5
 1371 0060 696E7400 		.ascii	"int\000"
 1372 0064 02       		.uleb128 0x2
 1373 0065 04       		.byte	0x4
 1374 0066 07       		.byte	0x7
 1375 0067 A5020000 		.4byte	.LASF8
 1376 006b 04       		.uleb128 0x4
 1377 006c 2D020000 		.4byte	.LASF9
 1378 0070 02       		.byte	0x2
 1379 0071 B4       		.byte	0xb4
 1380 0072 2C000000 		.4byte	0x2c
 1381 0076 04       		.uleb128 0x4
 1382 0077 06000000 		.4byte	.LASF10
 1383 007b 02       		.byte	0x2
 1384 007c B5       		.byte	0xb5
 1385 007d 3A000000 		.4byte	0x3a
 1386 0081 04       		.uleb128 0x4
 1387 0082 50020000 		.4byte	.LASF11
 1388 0086 02       		.byte	0x2
 1389 0087 B6       		.byte	0xb6
 1390 0088 48000000 		.4byte	0x48
 1391 008c 04       		.uleb128 0x4
 1392 008d D5050000 		.4byte	.LASF12
 1393 0091 02       		.byte	0x2
 1394 0092 B8       		.byte	0xb8
 1395 0093 33000000 		.4byte	0x33
 1396 0097 04       		.uleb128 0x4
 1397 0098 E2010000 		.4byte	.LASF13
 1398 009c 02       		.byte	0x2
 1399 009d B9       		.byte	0xb9
 1400 009e 41000000 		.4byte	0x41
 1401 00a2 02       		.uleb128 0x2
 1402 00a3 04       		.byte	0x4
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 61


 1403 00a4 04       		.byte	0x4
 1404 00a5 CA040000 		.4byte	.LASF14
 1405 00a9 02       		.uleb128 0x2
 1406 00aa 08       		.byte	0x8
 1407 00ab 04       		.byte	0x4
 1408 00ac 33020000 		.4byte	.LASF15
 1409 00b0 02       		.uleb128 0x2
 1410 00b1 01       		.byte	0x1
 1411 00b2 08       		.byte	0x8
 1412 00b3 A9050000 		.4byte	.LASF16
 1413 00b7 02       		.uleb128 0x2
 1414 00b8 04       		.byte	0x4
 1415 00b9 07       		.byte	0x7
 1416 00ba 0F040000 		.4byte	.LASF17
 1417 00be 05       		.uleb128 0x5
 1418 00bf 4A050000 		.4byte	.LASF18
 1419 00c3 01       		.byte	0x1
 1420 00c4 89       		.byte	0x89
 1421 00c5 00000000 		.4byte	.LFB0
 1422 00c9 44000000 		.4byte	.LFE0-.LFB0
 1423 00cd 01       		.uleb128 0x1
 1424 00ce 9C       		.byte	0x9c
 1425 00cf EF000000 		.4byte	0xef
 1426 00d3 06       		.uleb128 0x6
 1427 00d4 29030000 		.4byte	.LASF20
 1428 00d8 01       		.byte	0x1
 1429 00d9 89       		.byte	0x89
 1430 00da 6B000000 		.4byte	0x6b
 1431 00de 01       		.uleb128 0x1
 1432 00df 50       		.byte	0x50
 1433 00e0 07       		.uleb128 0x7
 1434 00e1 34050000 		.4byte	.LASF22
 1435 00e5 01       		.byte	0x1
 1436 00e6 8D       		.byte	0x8d
 1437 00e7 6B000000 		.4byte	0x6b
 1438 00eb 02       		.uleb128 0x2
 1439 00ec 70       		.byte	0x70
 1440 00ed 00       		.sleb128 0
 1441 00ee 00       		.byte	0
 1442 00ef 05       		.uleb128 0x5
 1443 00f0 3D040000 		.4byte	.LASF19
 1444 00f4 01       		.byte	0x1
 1445 00f5 D5       		.byte	0xd5
 1446 00f6 00000000 		.4byte	.LFB1
 1447 00fa 18000000 		.4byte	.LFE1-.LFB1
 1448 00fe 01       		.uleb128 0x1
 1449 00ff 9C       		.byte	0x9c
 1450 0100 41010000 		.4byte	0x141
 1451 0104 08       		.uleb128 0x8
 1452 0105 29030000 		.4byte	.LASF20
 1453 0109 01       		.byte	0x1
 1454 010a D5       		.byte	0xd5
 1455 010b 6B000000 		.4byte	0x6b
 1456 010f 00000000 		.4byte	.LLST0
 1457 0113 09       		.uleb128 0x9
 1458 0114 08000000 		.4byte	.LVL3
 1459 0118 F3080000 		.4byte	0x8f3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 62


 1460 011c 27010000 		.4byte	0x127
 1461 0120 0A       		.uleb128 0xa
 1462 0121 01       		.uleb128 0x1
 1463 0122 50       		.byte	0x50
 1464 0123 02       		.uleb128 0x2
 1465 0124 74       		.byte	0x74
 1466 0125 00       		.sleb128 0
 1467 0126 00       		.byte	0
 1468 0127 0B       		.uleb128 0xb
 1469 0128 0C000000 		.4byte	.LVL4
 1470 012c 04090000 		.4byte	0x904
 1471 0130 0C       		.uleb128 0xc
 1472 0131 16000000 		.4byte	.LVL5
 1473 0135 BE000000 		.4byte	0xbe
 1474 0139 0A       		.uleb128 0xa
 1475 013a 01       		.uleb128 0x1
 1476 013b 50       		.byte	0x50
 1477 013c 02       		.uleb128 0x2
 1478 013d 74       		.byte	0x74
 1479 013e 00       		.sleb128 0
 1480 013f 00       		.byte	0
 1481 0140 00       		.byte	0
 1482 0141 0D       		.uleb128 0xd
 1483 0142 FB040000 		.4byte	.LASF21
 1484 0146 01       		.byte	0x1
 1485 0147 0901     		.2byte	0x109
 1486 0149 00000000 		.4byte	.LFB2
 1487 014d 16000000 		.4byte	.LFE2-.LFB2
 1488 0151 01       		.uleb128 0x1
 1489 0152 9C       		.byte	0x9c
 1490 0153 76010000 		.4byte	0x176
 1491 0157 0E       		.uleb128 0xe
 1492 0158 6900     		.ascii	"i\000"
 1493 015a 01       		.byte	0x1
 1494 015b 0C01     		.2byte	0x10c
 1495 015d 6B000000 		.4byte	0x6b
 1496 0161 21000000 		.4byte	.LLST1
 1497 0165 0C       		.uleb128 0xc
 1498 0166 0C000000 		.4byte	.LVL8
 1499 016a EF000000 		.4byte	0xef
 1500 016e 0A       		.uleb128 0xa
 1501 016f 01       		.uleb128 0x1
 1502 0170 50       		.byte	0x50
 1503 0171 02       		.uleb128 0x2
 1504 0172 74       		.byte	0x74
 1505 0173 00       		.sleb128 0
 1506 0174 00       		.byte	0
 1507 0175 00       		.byte	0
 1508 0176 0D       		.uleb128 0xd
 1509 0177 54010000 		.4byte	.LASF23
 1510 017b 01       		.byte	0x1
 1511 017c 2A01     		.2byte	0x12a
 1512 017e 00000000 		.4byte	.LFB3
 1513 0182 48000000 		.4byte	.LFE3-.LFB3
 1514 0186 01       		.uleb128 0x1
 1515 0187 9C       		.byte	0x9c
 1516 0188 DB010000 		.4byte	0x1db
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 63


 1517 018c 0E       		.uleb128 0xe
 1518 018d 6900     		.ascii	"i\000"
 1519 018f 01       		.byte	0x1
 1520 0190 2D01     		.2byte	0x12d
 1521 0192 6B000000 		.4byte	0x6b
 1522 0196 58000000 		.4byte	.LLST2
 1523 019a 0F       		.uleb128 0xf
 1524 019b 706F7300 		.ascii	"pos\000"
 1525 019f 01       		.byte	0x1
 1526 01a0 2E01     		.2byte	0x12e
 1527 01a2 6B000000 		.4byte	0x6b
 1528 01a6 01       		.uleb128 0x1
 1529 01a7 53       		.byte	0x53
 1530 01a8 10       		.uleb128 0x10
 1531 01a9 7C040000 		.4byte	.LASF24
 1532 01ad 01       		.byte	0x1
 1533 01ae 2F01     		.2byte	0x12f
 1534 01b0 6B000000 		.4byte	0x6b
 1535 01b4 83000000 		.4byte	.LLST3
 1536 01b8 0B       		.uleb128 0xb
 1537 01b9 06000000 		.4byte	.LVL11
 1538 01bd 0F090000 		.4byte	0x90f
 1539 01c1 0B       		.uleb128 0xb
 1540 01c2 0A000000 		.4byte	.LVL12
 1541 01c6 04090000 		.4byte	0x904
 1542 01ca 0C       		.uleb128 0xc
 1543 01cb 34000000 		.4byte	.LVL15
 1544 01cf BE000000 		.4byte	0xbe
 1545 01d3 0A       		.uleb128 0xa
 1546 01d4 01       		.uleb128 0x1
 1547 01d5 50       		.byte	0x50
 1548 01d6 02       		.uleb128 0x2
 1549 01d7 74       		.byte	0x74
 1550 01d8 00       		.sleb128 0
 1551 01d9 00       		.byte	0
 1552 01da 00       		.byte	0
 1553 01db 0D       		.uleb128 0xd
 1554 01dc 5F030000 		.4byte	.LASF25
 1555 01e0 01       		.byte	0x1
 1556 01e1 6D01     		.2byte	0x16d
 1557 01e3 00000000 		.4byte	.LFB4
 1558 01e7 D0000000 		.4byte	.LFE4-.LFB4
 1559 01eb 01       		.uleb128 0x1
 1560 01ec 9C       		.byte	0x9c
 1561 01ed 76020000 		.4byte	0x276
 1562 01f1 11       		.uleb128 0x11
 1563 01f2 29030000 		.4byte	.LASF20
 1564 01f6 01       		.byte	0x1
 1565 01f7 6D01     		.2byte	0x16d
 1566 01f9 6B000000 		.4byte	0x6b
 1567 01fd BA000000 		.4byte	.LLST4
 1568 0201 10       		.uleb128 0x10
 1569 0202 A6030000 		.4byte	.LASF26
 1570 0206 01       		.byte	0x1
 1571 0207 7001     		.2byte	0x170
 1572 0209 81000000 		.4byte	0x81
 1573 020d DB000000 		.4byte	.LLST5
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 64


 1574 0211 10       		.uleb128 0x10
 1575 0212 39060000 		.4byte	.LASF27
 1576 0216 01       		.byte	0x1
 1577 0217 7101     		.2byte	0x171
 1578 0219 76000000 		.4byte	0x76
 1579 021d 13010000 		.4byte	.LLST6
 1580 0221 10       		.uleb128 0x10
 1581 0222 0D000000 		.4byte	.LASF28
 1582 0226 01       		.byte	0x1
 1583 0227 7201     		.2byte	0x172
 1584 0229 76000000 		.4byte	0x76
 1585 022d 31010000 		.4byte	.LLST7
 1586 0231 10       		.uleb128 0x10
 1587 0232 34050000 		.4byte	.LASF22
 1588 0236 01       		.byte	0x1
 1589 0237 7301     		.2byte	0x173
 1590 0239 6B000000 		.4byte	0x6b
 1591 023d 55010000 		.4byte	.LLST8
 1592 0241 10       		.uleb128 0x10
 1593 0242 1B050000 		.4byte	.LASF29
 1594 0246 01       		.byte	0x1
 1595 0247 7401     		.2byte	0x174
 1596 0249 6B000000 		.4byte	0x6b
 1597 024d A4010000 		.4byte	.LLST9
 1598 0251 09       		.uleb128 0x9
 1599 0252 1A000000 		.4byte	.LVL24
 1600 0256 16090000 		.4byte	0x916
 1601 025a 65020000 		.4byte	0x265
 1602 025e 0A       		.uleb128 0xa
 1603 025f 01       		.uleb128 0x1
 1604 0260 50       		.byte	0x50
 1605 0261 02       		.uleb128 0x2
 1606 0262 74       		.byte	0x74
 1607 0263 00       		.sleb128 0
 1608 0264 00       		.byte	0
 1609 0265 0C       		.uleb128 0xc
 1610 0266 4E000000 		.4byte	.LVL29
 1611 026a BE000000 		.4byte	0xbe
 1612 026e 0A       		.uleb128 0xa
 1613 026f 01       		.uleb128 0x1
 1614 0270 50       		.byte	0x50
 1615 0271 02       		.uleb128 0x2
 1616 0272 74       		.byte	0x74
 1617 0273 00       		.sleb128 0
 1618 0274 00       		.byte	0
 1619 0275 00       		.byte	0
 1620 0276 0D       		.uleb128 0xd
 1621 0277 78010000 		.4byte	.LASF30
 1622 027b 01       		.byte	0x1
 1623 027c 1A02     		.2byte	0x21a
 1624 027e 00000000 		.4byte	.LFB5
 1625 0282 30000000 		.4byte	.LFE5-.LFB5
 1626 0286 01       		.uleb128 0x1
 1627 0287 9C       		.byte	0x9c
 1628 0288 C9020000 		.4byte	0x2c9
 1629 028c 0E       		.uleb128 0xe
 1630 028d 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 65


 1631 028f 01       		.byte	0x1
 1632 0290 1D02     		.2byte	0x21d
 1633 0292 6B000000 		.4byte	0x6b
 1634 0296 D9010000 		.4byte	.LLST10
 1635 029a 0F       		.uleb128 0xf
 1636 029b 706F7300 		.ascii	"pos\000"
 1637 029f 01       		.byte	0x1
 1638 02a0 1E02     		.2byte	0x21e
 1639 02a2 6B000000 		.4byte	0x6b
 1640 02a6 01       		.uleb128 0x1
 1641 02a7 53       		.byte	0x53
 1642 02a8 10       		.uleb128 0x10
 1643 02a9 7C040000 		.4byte	.LASF24
 1644 02ad 01       		.byte	0x1
 1645 02ae 1F02     		.2byte	0x21f
 1646 02b0 6B000000 		.4byte	0x6b
 1647 02b4 10020000 		.4byte	.LLST11
 1648 02b8 0C       		.uleb128 0xc
 1649 02b9 20000000 		.4byte	.LVL41
 1650 02bd DB010000 		.4byte	0x1db
 1651 02c1 0A       		.uleb128 0xa
 1652 02c2 01       		.uleb128 0x1
 1653 02c3 50       		.byte	0x50
 1654 02c4 02       		.uleb128 0x2
 1655 02c5 74       		.byte	0x74
 1656 02c6 00       		.sleb128 0
 1657 02c7 00       		.byte	0
 1658 02c8 00       		.byte	0
 1659 02c9 12       		.uleb128 0x12
 1660 02ca 5F040000 		.4byte	.LASF36
 1661 02ce 01       		.byte	0x1
 1662 02cf 5402     		.2byte	0x254
 1663 02d1 6B000000 		.4byte	0x6b
 1664 02d5 00000000 		.4byte	.LFB6
 1665 02d9 A0000000 		.4byte	.LFE6-.LFB6
 1666 02dd 01       		.uleb128 0x1
 1667 02de 9C       		.byte	0x9c
 1668 02df 60030000 		.4byte	0x360
 1669 02e3 11       		.uleb128 0x11
 1670 02e4 29030000 		.4byte	.LASF20
 1671 02e8 01       		.byte	0x1
 1672 02e9 5402     		.2byte	0x254
 1673 02eb 6B000000 		.4byte	0x6b
 1674 02ef 47020000 		.4byte	.LLST12
 1675 02f3 10       		.uleb128 0x10
 1676 02f4 C7050000 		.4byte	.LASF31
 1677 02f8 01       		.byte	0x1
 1678 02f9 5702     		.2byte	0x257
 1679 02fb 6B000000 		.4byte	0x6b
 1680 02ff 81020000 		.4byte	.LLST13
 1681 0303 0F       		.uleb128 0xf
 1682 0304 706F7300 		.ascii	"pos\000"
 1683 0308 01       		.byte	0x1
 1684 0309 5902     		.2byte	0x259
 1685 030b 6B000000 		.4byte	0x6b
 1686 030f 01       		.uleb128 0x1
 1687 0310 51       		.byte	0x51
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 66


 1688 0311 13       		.uleb128 0x13
 1689 0312 3B050000 		.4byte	.LASF32
 1690 0316 01       		.byte	0x1
 1691 0317 5A02     		.2byte	0x25a
 1692 0319 6B000000 		.4byte	0x6b
 1693 031d 01       		.uleb128 0x1
 1694 031e 52       		.byte	0x52
 1695 031f 10       		.uleb128 0x10
 1696 0320 34050000 		.4byte	.LASF22
 1697 0324 01       		.byte	0x1
 1698 0325 5C02     		.2byte	0x25c
 1699 0327 6B000000 		.4byte	0x6b
 1700 032b B6020000 		.4byte	.LLST14
 1701 032f 10       		.uleb128 0x10
 1702 0330 00010000 		.4byte	.LASF33
 1703 0334 01       		.byte	0x1
 1704 0335 5D02     		.2byte	0x25d
 1705 0337 6B000000 		.4byte	0x6b
 1706 033b D6020000 		.4byte	.LLST15
 1707 033f 10       		.uleb128 0x10
 1708 0340 57020000 		.4byte	.LASF34
 1709 0344 01       		.byte	0x1
 1710 0345 5E02     		.2byte	0x25e
 1711 0347 6B000000 		.4byte	0x6b
 1712 034b 8A030000 		.4byte	.LLST16
 1713 034f 10       		.uleb128 0x10
 1714 0350 06040000 		.4byte	.LASF35
 1715 0354 01       		.byte	0x1
 1716 0355 5F02     		.2byte	0x25f
 1717 0357 6B000000 		.4byte	0x6b
 1718 035b 32040000 		.4byte	.LLST17
 1719 035f 00       		.byte	0
 1720 0360 12       		.uleb128 0x12
 1721 0361 D0040000 		.4byte	.LASF37
 1722 0365 01       		.byte	0x1
 1723 0366 A402     		.2byte	0x2a4
 1724 0368 6B000000 		.4byte	0x6b
 1725 036c 00000000 		.4byte	.LFB7
 1726 0370 2C000000 		.4byte	.LFE7-.LFB7
 1727 0374 01       		.uleb128 0x1
 1728 0375 9C       		.byte	0x9c
 1729 0376 CB030000 		.4byte	0x3cb
 1730 037a 11       		.uleb128 0x11
 1731 037b 34050000 		.4byte	.LASF22
 1732 037f 01       		.byte	0x1
 1733 0380 A402     		.2byte	0x2a4
 1734 0382 6B000000 		.4byte	0x6b
 1735 0386 B4040000 		.4byte	.LLST18
 1736 038a 10       		.uleb128 0x10
 1737 038b C9010000 		.4byte	.LASF38
 1738 038f 01       		.byte	0x1
 1739 0390 A702     		.2byte	0x2a7
 1740 0392 6B000000 		.4byte	0x6b
 1741 0396 D5040000 		.4byte	.LLST19
 1742 039a 10       		.uleb128 0x10
 1743 039b D2010000 		.4byte	.LASF39
 1744 039f 01       		.byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 67


 1745 03a0 A802     		.2byte	0x2a8
 1746 03a2 6B000000 		.4byte	0x6b
 1747 03a6 1B050000 		.4byte	.LLST20
 1748 03aa 10       		.uleb128 0x10
 1749 03ab E8010000 		.4byte	.LASF40
 1750 03af 01       		.byte	0x1
 1751 03b0 A902     		.2byte	0x2a9
 1752 03b2 6B000000 		.4byte	0x6b
 1753 03b6 2E050000 		.4byte	.LLST21
 1754 03ba 0C       		.uleb128 0xc
 1755 03bb 18000000 		.4byte	.LVL72
 1756 03bf C9020000 		.4byte	0x2c9
 1757 03c3 0A       		.uleb128 0xa
 1758 03c4 01       		.uleb128 0x1
 1759 03c5 50       		.byte	0x50
 1760 03c6 02       		.uleb128 0x2
 1761 03c7 74       		.byte	0x74
 1762 03c8 00       		.sleb128 0
 1763 03c9 00       		.byte	0
 1764 03ca 00       		.byte	0
 1765 03cb 12       		.uleb128 0x12
 1766 03cc 01020000 		.4byte	.LASF41
 1767 03d0 01       		.byte	0x1
 1768 03d1 D002     		.2byte	0x2d0
 1769 03d3 6B000000 		.4byte	0x6b
 1770 03d7 00000000 		.4byte	.LFB8
 1771 03db 20000000 		.4byte	.LFE8-.LFB8
 1772 03df 01       		.uleb128 0x1
 1773 03e0 9C       		.byte	0x9c
 1774 03e1 14040000 		.4byte	0x414
 1775 03e5 0E       		.uleb128 0xe
 1776 03e6 6900     		.ascii	"i\000"
 1777 03e8 01       		.byte	0x1
 1778 03e9 D302     		.2byte	0x2d3
 1779 03eb 6B000000 		.4byte	0x6b
 1780 03ef 42050000 		.4byte	.LLST22
 1781 03f3 10       		.uleb128 0x10
 1782 03f4 E8010000 		.4byte	.LASF40
 1783 03f8 01       		.byte	0x1
 1784 03f9 D402     		.2byte	0x2d4
 1785 03fb 6B000000 		.4byte	0x6b
 1786 03ff 79050000 		.4byte	.LLST23
 1787 0403 0C       		.uleb128 0xc
 1788 0404 10000000 		.4byte	.LVL78
 1789 0408 60030000 		.4byte	0x360
 1790 040c 0A       		.uleb128 0xa
 1791 040d 01       		.uleb128 0x1
 1792 040e 50       		.byte	0x50
 1793 040f 02       		.uleb128 0x2
 1794 0410 74       		.byte	0x74
 1795 0411 00       		.sleb128 0
 1796 0412 00       		.byte	0
 1797 0413 00       		.byte	0
 1798 0414 0D       		.uleb128 0xd
 1799 0415 18040000 		.4byte	.LASF42
 1800 0419 01       		.byte	0x1
 1801 041a FE02     		.2byte	0x2fe
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 68


 1802 041c 00000000 		.4byte	.LFB9
 1803 0420 38000000 		.4byte	.LFE9-.LFB9
 1804 0424 01       		.uleb128 0x1
 1805 0425 9C       		.byte	0x9c
 1806 0426 79040000 		.4byte	0x479
 1807 042a 11       		.uleb128 0x11
 1808 042b 34050000 		.4byte	.LASF22
 1809 042f 01       		.byte	0x1
 1810 0430 FE02     		.2byte	0x2fe
 1811 0432 6B000000 		.4byte	0x6b
 1812 0436 8D050000 		.4byte	.LLST24
 1813 043a 0F       		.uleb128 0xf
 1814 043b 706F7300 		.ascii	"pos\000"
 1815 043f 01       		.byte	0x1
 1816 0440 0103     		.2byte	0x301
 1817 0442 6B000000 		.4byte	0x6b
 1818 0446 01       		.uleb128 0x1
 1819 0447 52       		.byte	0x52
 1820 0448 10       		.uleb128 0x10
 1821 0449 7C040000 		.4byte	.LASF24
 1822 044d 01       		.byte	0x1
 1823 044e 0203     		.2byte	0x302
 1824 0450 6B000000 		.4byte	0x6b
 1825 0454 AE050000 		.4byte	.LLST25
 1826 0458 10       		.uleb128 0x10
 1827 0459 C9010000 		.4byte	.LASF38
 1828 045d 01       		.byte	0x1
 1829 045e 0303     		.2byte	0x303
 1830 0460 6B000000 		.4byte	0x6b
 1831 0464 E5050000 		.4byte	.LLST26
 1832 0468 10       		.uleb128 0x10
 1833 0469 D2010000 		.4byte	.LASF39
 1834 046d 01       		.byte	0x1
 1835 046e 0403     		.2byte	0x304
 1836 0470 6B000000 		.4byte	0x6b
 1837 0474 2B060000 		.4byte	.LLST27
 1838 0478 00       		.byte	0
 1839 0479 0D       		.uleb128 0xd
 1840 047a B2010000 		.4byte	.LASF43
 1841 047e 01       		.byte	0x1
 1842 047f 3003     		.2byte	0x330
 1843 0481 00000000 		.4byte	.LFB10
 1844 0485 38000000 		.4byte	.LFE10-.LFB10
 1845 0489 01       		.uleb128 0x1
 1846 048a 9C       		.byte	0x9c
 1847 048b DE040000 		.4byte	0x4de
 1848 048f 11       		.uleb128 0x11
 1849 0490 34050000 		.4byte	.LASF22
 1850 0494 01       		.byte	0x1
 1851 0495 3003     		.2byte	0x330
 1852 0497 6B000000 		.4byte	0x6b
 1853 049b 3E060000 		.4byte	.LLST28
 1854 049f 0F       		.uleb128 0xf
 1855 04a0 706F7300 		.ascii	"pos\000"
 1856 04a4 01       		.byte	0x1
 1857 04a5 3303     		.2byte	0x333
 1858 04a7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 69


 1859 04ab 01       		.uleb128 0x1
 1860 04ac 52       		.byte	0x52
 1861 04ad 10       		.uleb128 0x10
 1862 04ae 7C040000 		.4byte	.LASF24
 1863 04b2 01       		.byte	0x1
 1864 04b3 3403     		.2byte	0x334
 1865 04b5 6B000000 		.4byte	0x6b
 1866 04b9 5F060000 		.4byte	.LLST29
 1867 04bd 10       		.uleb128 0x10
 1868 04be C9010000 		.4byte	.LASF38
 1869 04c2 01       		.byte	0x1
 1870 04c3 3503     		.2byte	0x335
 1871 04c5 6B000000 		.4byte	0x6b
 1872 04c9 96060000 		.4byte	.LLST30
 1873 04cd 10       		.uleb128 0x10
 1874 04ce D2010000 		.4byte	.LASF39
 1875 04d2 01       		.byte	0x1
 1876 04d3 3603     		.2byte	0x336
 1877 04d5 6B000000 		.4byte	0x6b
 1878 04d9 DC060000 		.4byte	.LLST31
 1879 04dd 00       		.byte	0
 1880 04de 12       		.uleb128 0x12
 1881 04df 4A030000 		.4byte	.LASF44
 1882 04e3 01       		.byte	0x1
 1883 04e4 6203     		.2byte	0x362
 1884 04e6 6B000000 		.4byte	0x6b
 1885 04ea 00000000 		.4byte	.LFB11
 1886 04ee 2C000000 		.4byte	.LFE11-.LFB11
 1887 04f2 01       		.uleb128 0x1
 1888 04f3 9C       		.byte	0x9c
 1889 04f4 63050000 		.4byte	0x563
 1890 04f8 11       		.uleb128 0x11
 1891 04f9 C0050000 		.4byte	.LASF45
 1892 04fd 01       		.byte	0x1
 1893 04fe 6203     		.2byte	0x362
 1894 0500 6B000000 		.4byte	0x6b
 1895 0504 EF060000 		.4byte	.LLST32
 1896 0508 14       		.uleb128 0x14
 1897 0509 00000000 		.4byte	.LASF46
 1898 050d 01       		.byte	0x1
 1899 050e 6203     		.2byte	0x362
 1900 0510 6B000000 		.4byte	0x6b
 1901 0514 01       		.uleb128 0x1
 1902 0515 51       		.byte	0x51
 1903 0516 14       		.uleb128 0x14
 1904 0517 00010000 		.4byte	.LASF33
 1905 051b 01       		.byte	0x1
 1906 051c 6203     		.2byte	0x362
 1907 051e 6B000000 		.4byte	0x6b
 1908 0522 01       		.uleb128 0x1
 1909 0523 52       		.byte	0x52
 1910 0524 0E       		.uleb128 0xe
 1911 0525 6900     		.ascii	"i\000"
 1912 0527 01       		.byte	0x1
 1913 0528 6603     		.2byte	0x366
 1914 052a 6B000000 		.4byte	0x6b
 1915 052e 10070000 		.4byte	.LLST33
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 70


 1916 0532 10       		.uleb128 0x10
 1917 0533 42050000 		.4byte	.LASF47
 1918 0537 01       		.byte	0x1
 1919 0538 7003     		.2byte	0x370
 1920 053a 6B000000 		.4byte	0x6b
 1921 053e 47070000 		.4byte	.LLST34
 1922 0542 10       		.uleb128 0x10
 1923 0543 78020000 		.4byte	.LASF48
 1924 0547 01       		.byte	0x1
 1925 0548 7103     		.2byte	0x371
 1926 054a 6B000000 		.4byte	0x6b
 1927 054e 5C070000 		.4byte	.LLST35
 1928 0552 10       		.uleb128 0x10
 1929 0553 6A020000 		.4byte	.LASF49
 1930 0557 01       		.byte	0x1
 1931 0558 7203     		.2byte	0x372
 1932 055a 63050000 		.4byte	0x563
 1933 055e 86070000 		.4byte	.LLST36
 1934 0562 00       		.byte	0
 1935 0563 15       		.uleb128 0x15
 1936 0564 04       		.byte	0x4
 1937 0565 6B000000 		.4byte	0x6b
 1938 0569 12       		.uleb128 0x12
 1939 056a EE050000 		.4byte	.LASF50
 1940 056e 01       		.byte	0x1
 1941 056f FE03     		.2byte	0x3fe
 1942 0571 6B000000 		.4byte	0x6b
 1943 0575 00000000 		.4byte	.LFB12
 1944 0579 B8000000 		.4byte	.LFE12-.LFB12
 1945 057d 01       		.uleb128 0x1
 1946 057e 9C       		.byte	0x9c
 1947 057f 44060000 		.4byte	0x644
 1948 0583 11       		.uleb128 0x11
 1949 0584 42050000 		.4byte	.LASF47
 1950 0588 01       		.byte	0x1
 1951 0589 FE03     		.2byte	0x3fe
 1952 058b 6B000000 		.4byte	0x6b
 1953 058f 99070000 		.4byte	.LLST37
 1954 0593 11       		.uleb128 0x11
 1955 0594 C0050000 		.4byte	.LASF45
 1956 0598 01       		.byte	0x1
 1957 0599 FE03     		.2byte	0x3fe
 1958 059b 6B000000 		.4byte	0x6b
 1959 059f BA070000 		.4byte	.LLST38
 1960 05a3 11       		.uleb128 0x11
 1961 05a4 00000000 		.4byte	.LASF46
 1962 05a8 01       		.byte	0x1
 1963 05a9 FF03     		.2byte	0x3ff
 1964 05ab 6B000000 		.4byte	0x6b
 1965 05af DB070000 		.4byte	.LLST39
 1966 05b3 14       		.uleb128 0x14
 1967 05b4 5C050000 		.4byte	.LASF51
 1968 05b8 01       		.byte	0x1
 1969 05b9 FF03     		.2byte	0x3ff
 1970 05bb 76000000 		.4byte	0x76
 1971 05bf 01       		.uleb128 0x1
 1972 05c0 53       		.byte	0x53
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 71


 1973 05c1 11       		.uleb128 0x11
 1974 05c2 1B050000 		.4byte	.LASF29
 1975 05c6 01       		.byte	0x1
 1976 05c7 FF03     		.2byte	0x3ff
 1977 05c9 6B000000 		.4byte	0x6b
 1978 05cd 15080000 		.4byte	.LLST40
 1979 05d1 10       		.uleb128 0x10
 1980 05d2 10010000 		.4byte	.LASF52
 1981 05d6 01       		.byte	0x1
 1982 05d7 0304     		.2byte	0x403
 1983 05d9 6B000000 		.4byte	0x6b
 1984 05dd 35080000 		.4byte	.LLST41
 1985 05e1 10       		.uleb128 0x10
 1986 05e2 62020000 		.4byte	.LASF53
 1987 05e6 01       		.byte	0x1
 1988 05e7 0404     		.2byte	0x404
 1989 05e9 6B000000 		.4byte	0x6b
 1990 05ed 6B080000 		.4byte	.LLST42
 1991 05f1 13       		.uleb128 0x13
 1992 05f2 AE050000 		.4byte	.LASF54
 1993 05f6 01       		.byte	0x1
 1994 05f7 0C04     		.2byte	0x40c
 1995 05f9 44060000 		.4byte	0x644
 1996 05fd 05       		.uleb128 0x5
 1997 05fe 03       		.byte	0x3
 1998 05ff 04000000 		.4byte	CapSense_centroid.5139
 1999 0603 10       		.uleb128 0x10
 2000 0604 B2020000 		.4byte	.LASF55
 2001 0608 01       		.byte	0x1
 2002 0609 0E04     		.2byte	0x40e
 2003 060b 6B000000 		.4byte	0x6b
 2004 060f 95080000 		.4byte	.LLST43
 2005 0613 10       		.uleb128 0x10
 2006 0614 F7010000 		.4byte	.LASF56
 2007 0618 01       		.byte	0x1
 2008 0619 0F04     		.2byte	0x40f
 2009 061b 81000000 		.4byte	0x81
 2010 061f D4080000 		.4byte	.LLST44
 2011 0623 10       		.uleb128 0x10
 2012 0624 21020000 		.4byte	.LASF57
 2013 0628 01       		.byte	0x1
 2014 0629 1004     		.2byte	0x410
 2015 062b 97000000 		.4byte	0x97
 2016 062f 07090000 		.4byte	.LLST45
 2017 0633 10       		.uleb128 0x10
 2018 0634 6A020000 		.4byte	.LASF49
 2019 0638 01       		.byte	0x1
 2020 0639 1104     		.2byte	0x411
 2021 063b 63050000 		.4byte	0x563
 2022 063f 4E090000 		.4byte	.LLST46
 2023 0643 00       		.byte	0
 2024 0644 16       		.uleb128 0x16
 2025 0645 6B000000 		.4byte	0x6b
 2026 0649 54060000 		.4byte	0x654
 2027 064d 17       		.uleb128 0x17
 2028 064e B7000000 		.4byte	0xb7
 2029 0652 02       		.byte	0x2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 72


 2030 0653 00       		.byte	0
 2031 0654 12       		.uleb128 0x12
 2032 0655 7D020000 		.4byte	.LASF58
 2033 0659 01       		.byte	0x1
 2034 065a A907     		.2byte	0x7a9
 2035 065c 76000000 		.4byte	0x76
 2036 0660 00000000 		.4byte	.LFB14
 2037 0664 0C000000 		.4byte	.LFE14-.LFB14
 2038 0668 01       		.uleb128 0x1
 2039 0669 9C       		.byte	0x9c
 2040 066a 9B060000 		.4byte	0x69b
 2041 066e 18       		.uleb128 0x18
 2042 066f 783100   		.ascii	"x1\000"
 2043 0672 01       		.byte	0x1
 2044 0673 A907     		.2byte	0x7a9
 2045 0675 76000000 		.4byte	0x76
 2046 0679 77090000 		.4byte	.LLST47
 2047 067d 19       		.uleb128 0x19
 2048 067e 783200   		.ascii	"x2\000"
 2049 0681 01       		.byte	0x1
 2050 0682 A907     		.2byte	0x7a9
 2051 0684 76000000 		.4byte	0x76
 2052 0688 01       		.uleb128 0x1
 2053 0689 51       		.byte	0x51
 2054 068a 0E       		.uleb128 0xe
 2055 068b 746D7000 		.ascii	"tmp\000"
 2056 068f 01       		.byte	0x1
 2057 0690 AC07     		.2byte	0x7ac
 2058 0692 81000000 		.4byte	0x81
 2059 0696 98090000 		.4byte	.LLST48
 2060 069a 00       		.byte	0
 2061 069b 12       		.uleb128 0x12
 2062 069c 91050000 		.4byte	.LASF59
 2063 06a0 01       		.byte	0x1
 2064 06a1 CB04     		.2byte	0x4cb
 2065 06a3 76000000 		.4byte	0x76
 2066 06a7 00000000 		.4byte	.LFB13
 2067 06ab 80000000 		.4byte	.LFE13-.LFB13
 2068 06af 01       		.uleb128 0x1
 2069 06b0 9C       		.byte	0x9c
 2070 06b1 77070000 		.4byte	0x777
 2071 06b5 11       		.uleb128 0x11
 2072 06b6 34050000 		.4byte	.LASF22
 2073 06ba 01       		.byte	0x1
 2074 06bb CB04     		.2byte	0x4cb
 2075 06bd 6B000000 		.4byte	0x6b
 2076 06c1 AF090000 		.4byte	.LLST49
 2077 06c5 10       		.uleb128 0x10
 2078 06c6 FD030000 		.4byte	.LASF60
 2079 06ca 01       		.byte	0x1
 2080 06cb D204     		.2byte	0x4d2
 2081 06cd 6B000000 		.4byte	0x6b
 2082 06d1 D0090000 		.4byte	.LLST50
 2083 06d5 10       		.uleb128 0x10
 2084 06d6 45010000 		.4byte	.LASF61
 2085 06da 01       		.byte	0x1
 2086 06db D304     		.2byte	0x4d3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 73


 2087 06dd 6B000000 		.4byte	0x6b
 2088 06e1 190A0000 		.4byte	.LLST51
 2089 06e5 1A       		.uleb128 0x1a
 2090 06e6 2E040000 		.4byte	.LASF62
 2091 06ea 01       		.byte	0x1
 2092 06eb D404     		.2byte	0x4d4
 2093 06ed 6B000000 		.4byte	0x6b
 2094 06f1 08       		.byte	0x8
 2095 06f2 10       		.uleb128 0x10
 2096 06f3 42050000 		.4byte	.LASF47
 2097 06f7 01       		.byte	0x1
 2098 06f8 DE04     		.2byte	0x4de
 2099 06fa 6B000000 		.4byte	0x6b
 2100 06fe 4B0A0000 		.4byte	.LLST52
 2101 0702 10       		.uleb128 0x10
 2102 0703 B2020000 		.4byte	.LASF55
 2103 0707 01       		.byte	0x1
 2104 0708 DF04     		.2byte	0x4df
 2105 070a 76000000 		.4byte	0x76
 2106 070e 690A0000 		.4byte	.LLST53
 2107 0712 10       		.uleb128 0x10
 2108 0713 C0050000 		.4byte	.LASF45
 2109 0717 01       		.byte	0x1
 2110 0718 E004     		.2byte	0x4e0
 2111 071a 6B000000 		.4byte	0x6b
 2112 071e AA0A0000 		.4byte	.LLST54
 2113 0722 10       		.uleb128 0x10
 2114 0723 00000000 		.4byte	.LASF46
 2115 0727 01       		.byte	0x1
 2116 0728 E104     		.2byte	0x4e1
 2117 072a 6B000000 		.4byte	0x6b
 2118 072e 020B0000 		.4byte	.LLST55
 2119 0732 09       		.uleb128 0x9
 2120 0733 20000000 		.4byte	.LVL147
 2121 0737 DE040000 		.4byte	0x4de
 2122 073b 4C070000 		.4byte	0x74c
 2123 073f 0A       		.uleb128 0xa
 2124 0740 01       		.uleb128 0x1
 2125 0741 51       		.byte	0x51
 2126 0742 02       		.uleb128 0x2
 2127 0743 76       		.byte	0x76
 2128 0744 00       		.sleb128 0
 2129 0745 0A       		.uleb128 0xa
 2130 0746 01       		.uleb128 0x1
 2131 0747 50       		.byte	0x50
 2132 0748 02       		.uleb128 0x2
 2133 0749 77       		.byte	0x77
 2134 074a 00       		.sleb128 0
 2135 074b 00       		.byte	0
 2136 074c 09       		.uleb128 0x9
 2137 074d 3A000000 		.4byte	.LVL149
 2138 0751 69050000 		.4byte	0x569
 2139 0755 6D070000 		.4byte	0x76d
 2140 0759 0A       		.uleb128 0xa
 2141 075a 01       		.uleb128 0x1
 2142 075b 53       		.byte	0x53
 2143 075c 03       		.uleb128 0x3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 74


 2144 075d 0A       		.byte	0xa
 2145 075e 0019     		.2byte	0x1900
 2146 0760 0A       		.uleb128 0xa
 2147 0761 01       		.uleb128 0x1
 2148 0762 52       		.byte	0x52
 2149 0763 02       		.uleb128 0x2
 2150 0764 76       		.byte	0x76
 2151 0765 00       		.sleb128 0
 2152 0766 0A       		.uleb128 0xa
 2153 0767 01       		.uleb128 0x1
 2154 0768 51       		.byte	0x51
 2155 0769 02       		.uleb128 0x2
 2156 076a 77       		.byte	0x77
 2157 076b 00       		.sleb128 0
 2158 076c 00       		.byte	0
 2159 076d 0B       		.uleb128 0xb
 2160 076e 62000000 		.4byte	.LVL158
 2161 0772 54060000 		.4byte	0x654
 2162 0776 00       		.byte	0
 2163 0777 16       		.uleb128 0x16
 2164 0778 76000000 		.4byte	0x76
 2165 077c 87070000 		.4byte	0x787
 2166 0780 17       		.uleb128 0x17
 2167 0781 B7000000 		.4byte	0xb7
 2168 0785 06       		.byte	0x6
 2169 0786 00       		.byte	0
 2170 0787 1B       		.uleb128 0x1b
 2171 0788 DB050000 		.4byte	.LASF63
 2172 078c 03       		.byte	0x3
 2173 078d BF02     		.2byte	0x2bf
 2174 078f 77070000 		.4byte	0x777
 2175 0793 16       		.uleb128 0x16
 2176 0794 6B000000 		.4byte	0x6b
 2177 0798 A3070000 		.4byte	0x7a3
 2178 079c 17       		.uleb128 0x17
 2179 079d B7000000 		.4byte	0xb7
 2180 07a1 00       		.byte	0
 2181 07a2 00       		.byte	0
 2182 07a3 1B       		.uleb128 0x1b
 2183 07a4 30030000 		.4byte	.LASF64
 2184 07a8 04       		.byte	0x4
 2185 07a9 0501     		.2byte	0x105
 2186 07ab 93070000 		.4byte	0x793
 2187 07af 16       		.uleb128 0x16
 2188 07b0 6B000000 		.4byte	0x6b
 2189 07b4 BF070000 		.4byte	0x7bf
 2190 07b8 17       		.uleb128 0x17
 2191 07b9 B7000000 		.4byte	0xb7
 2192 07bd 06       		.byte	0x6
 2193 07be 00       		.byte	0
 2194 07bf 1B       		.uleb128 0x1b
 2195 07c0 3A020000 		.4byte	.LASF65
 2196 07c4 04       		.byte	0x4
 2197 07c5 0601     		.2byte	0x106
 2198 07c7 CB070000 		.4byte	0x7cb
 2199 07cb 1C       		.uleb128 0x1c
 2200 07cc AF070000 		.4byte	0x7af
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 75


 2201 07d0 1D       		.uleb128 0x1d
 2202 07d1 79050000 		.4byte	.LASF66
 2203 07d5 01       		.byte	0x1
 2204 07d6 29       		.byte	0x29
 2205 07d7 77070000 		.4byte	0x777
 2206 07db 05       		.uleb128 0x5
 2207 07dc 03       		.byte	0x3
 2208 07dd 00000000 		.4byte	CapSense_sensorBaseline
 2209 07e1 1D       		.uleb128 0x1d
 2210 07e2 CD020000 		.4byte	.LASF67
 2211 07e6 01       		.byte	0x1
 2212 07e7 2A       		.byte	0x2a
 2213 07e8 AF070000 		.4byte	0x7af
 2214 07ec 05       		.uleb128 0x5
 2215 07ed 03       		.byte	0x3
 2216 07ee 00000000 		.4byte	CapSense_sensorBaselineLow
 2217 07f2 1D       		.uleb128 0x1d
 2218 07f3 2F010000 		.4byte	.LASF68
 2219 07f7 01       		.byte	0x1
 2220 07f8 2B       		.byte	0x2b
 2221 07f9 AF070000 		.4byte	0x7af
 2222 07fd 05       		.uleb128 0x5
 2223 07fe 03       		.byte	0x3
 2224 07ff 00000000 		.4byte	CapSense_sensorSignal
 2225 0803 1D       		.uleb128 0x1d
 2226 0804 EA000000 		.4byte	.LASF69
 2227 0808 01       		.byte	0x1
 2228 0809 2C       		.byte	0x2c
 2229 080a 93070000 		.4byte	0x793
 2230 080e 05       		.uleb128 0x5
 2231 080f 03       		.byte	0x3
 2232 0810 00000000 		.4byte	CapSense_sensorOnMask
 2233 0814 1D       		.uleb128 0x1d
 2234 0815 E0030000 		.4byte	.LASF70
 2235 0819 01       		.byte	0x1
 2236 081a 2E       		.byte	0x2e
 2237 081b AF070000 		.4byte	0x7af
 2238 081f 05       		.uleb128 0x5
 2239 0820 03       		.byte	0x3
 2240 0821 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2241 0825 1D       		.uleb128 0x1d
 2242 0826 9B040000 		.4byte	.LASF71
 2243 082a 01       		.byte	0x1
 2244 082b 30       		.byte	0x30
 2245 082c 44060000 		.4byte	0x644
 2246 0830 05       		.uleb128 0x5
 2247 0831 03       		.byte	0x3
 2248 0832 00000000 		.4byte	CapSense_fingerThreshold
 2249 0836 1D       		.uleb128 0x1d
 2250 0837 83040000 		.4byte	.LASF72
 2251 083b 01       		.byte	0x1
 2252 083c 34       		.byte	0x34
 2253 083d 44060000 		.4byte	0x644
 2254 0841 05       		.uleb128 0x5
 2255 0842 03       		.byte	0x3
 2256 0843 00000000 		.4byte	CapSense_noiseThreshold
 2257 0847 1D       		.uleb128 0x1d
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 76


 2258 0848 1D000000 		.4byte	.LASF73
 2259 084c 01       		.byte	0x1
 2260 084d 38       		.byte	0x38
 2261 084e 44060000 		.4byte	0x644
 2262 0852 05       		.uleb128 0x5
 2263 0853 03       		.byte	0x3
 2264 0854 00000000 		.4byte	CapSense_hysteresis
 2265 0858 1D       		.uleb128 0x1d
 2266 0859 67050000 		.4byte	.LASF74
 2267 085d 01       		.byte	0x1
 2268 085e 3C       		.byte	0x3c
 2269 085f 44060000 		.4byte	0x644
 2270 0863 05       		.uleb128 0x5
 2271 0864 03       		.byte	0x3
 2272 0865 00000000 		.4byte	CapSense_debounce
 2273 0869 1D       		.uleb128 0x1d
 2274 086a 20060000 		.4byte	.LASF75
 2275 086e 01       		.byte	0x1
 2276 086f 40       		.byte	0x40
 2277 0870 44060000 		.4byte	0x644
 2278 0874 05       		.uleb128 0x5
 2279 0875 03       		.byte	0x3
 2280 0876 00000000 		.4byte	CapSense_debounceCounter
 2281 087a 1D       		.uleb128 0x1d
 2282 087b 00030000 		.4byte	.LASF76
 2283 087f 01       		.byte	0x1
 2284 0880 44       		.byte	0x44
 2285 0881 8B080000 		.4byte	0x88b
 2286 0885 05       		.uleb128 0x5
 2287 0886 03       		.byte	0x3
 2288 0887 00000000 		.4byte	CapSense_rawDataIndex
 2289 088b 1C       		.uleb128 0x1c
 2290 088c 44060000 		.4byte	0x644
 2291 0890 1D       		.uleb128 0x1d
 2292 0891 51060000 		.4byte	.LASF77
 2293 0895 01       		.byte	0x1
 2294 0896 4B       		.byte	0x4b
 2295 0897 A1080000 		.4byte	0x8a1
 2296 089b 05       		.uleb128 0x5
 2297 089c 03       		.byte	0x3
 2298 089d 00000000 		.4byte	CapSense_numberOfSensors
 2299 08a1 1C       		.uleb128 0x1c
 2300 08a2 44060000 		.4byte	0x644
 2301 08a6 16       		.uleb128 0x16
 2302 08a7 76000000 		.4byte	0x76
 2303 08ab B6080000 		.4byte	0x8b6
 2304 08af 17       		.uleb128 0x17
 2305 08b0 B7000000 		.4byte	0xb7
 2306 08b4 00       		.byte	0
 2307 08b5 00       		.byte	0
 2308 08b6 1D       		.uleb128 0x1d
 2309 08b7 B4040000 		.4byte	.LASF78
 2310 08bb 01       		.byte	0x1
 2311 08bc 52       		.byte	0x52
 2312 08bd C7080000 		.4byte	0x8c7
 2313 08c1 05       		.uleb128 0x5
 2314 08c2 03       		.byte	0x3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 77


 2315 08c3 00000000 		.4byte	CapSense_centroidMult
 2316 08c7 1C       		.uleb128 0x1c
 2317 08c8 A6080000 		.4byte	0x8a6
 2318 08cc 1D       		.uleb128 0x1d
 2319 08cd E8020000 		.4byte	.LASF79
 2320 08d1 01       		.byte	0x1
 2321 08d2 56       		.byte	0x56
 2322 08d3 DD080000 		.4byte	0x8dd
 2323 08d7 05       		.uleb128 0x5
 2324 08d8 03       		.byte	0x3
 2325 08d9 00000000 		.4byte	CapSense_posFiltersMask
 2326 08dd 1C       		.uleb128 0x1c
 2327 08de 93070000 		.4byte	0x793
 2328 08e2 1D       		.uleb128 0x1d
 2329 08e3 C8030000 		.4byte	.LASF80
 2330 08e7 01       		.byte	0x1
 2331 08e8 5A       		.byte	0x5a
 2332 08e9 44060000 		.4byte	0x644
 2333 08ed 05       		.uleb128 0x5
 2334 08ee 03       		.byte	0x3
 2335 08ef 00000000 		.4byte	CapSense_posFiltersData
 2336 08f3 1E       		.uleb128 0x1e
 2337 08f4 91020000 		.4byte	.LASF84
 2338 08f8 03       		.byte	0x3
 2339 08f9 9A       		.byte	0x9a
 2340 08fa 04090000 		.4byte	0x904
 2341 08fe 1F       		.uleb128 0x1f
 2342 08ff 6B000000 		.4byte	0x6b
 2343 0903 00       		.byte	0
 2344 0904 20       		.uleb128 0x20
 2345 0905 41060000 		.4byte	.LASF85
 2346 0909 03       		.byte	0x3
 2347 090a 99       		.byte	0x99
 2348 090b 6B000000 		.4byte	0x6b
 2349 090f 21       		.uleb128 0x21
 2350 0910 04060000 		.4byte	.LASF86
 2351 0914 03       		.byte	0x3
 2352 0915 9B       		.byte	0x9b
 2353 0916 22       		.uleb128 0x22
 2354 0917 AB030000 		.4byte	.LASF87
 2355 091b 04       		.byte	0x4
 2356 091c C2       		.byte	0xc2
 2357 091d 1F       		.uleb128 0x1f
 2358 091e 6B000000 		.4byte	0x6b
 2359 0922 00       		.byte	0
 2360 0923 00       		.byte	0
 2361              		.section	.debug_abbrev,"",%progbits
 2362              	.Ldebug_abbrev0:
 2363 0000 01       		.uleb128 0x1
 2364 0001 11       		.uleb128 0x11
 2365 0002 01       		.byte	0x1
 2366 0003 25       		.uleb128 0x25
 2367 0004 0E       		.uleb128 0xe
 2368 0005 13       		.uleb128 0x13
 2369 0006 0B       		.uleb128 0xb
 2370 0007 03       		.uleb128 0x3
 2371 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 78


 2372 0009 1B       		.uleb128 0x1b
 2373 000a 0E       		.uleb128 0xe
 2374 000b 55       		.uleb128 0x55
 2375 000c 17       		.uleb128 0x17
 2376 000d 11       		.uleb128 0x11
 2377 000e 01       		.uleb128 0x1
 2378 000f 10       		.uleb128 0x10
 2379 0010 17       		.uleb128 0x17
 2380 0011 00       		.byte	0
 2381 0012 00       		.byte	0
 2382 0013 02       		.uleb128 0x2
 2383 0014 24       		.uleb128 0x24
 2384 0015 00       		.byte	0
 2385 0016 0B       		.uleb128 0xb
 2386 0017 0B       		.uleb128 0xb
 2387 0018 3E       		.uleb128 0x3e
 2388 0019 0B       		.uleb128 0xb
 2389 001a 03       		.uleb128 0x3
 2390 001b 0E       		.uleb128 0xe
 2391 001c 00       		.byte	0
 2392 001d 00       		.byte	0
 2393 001e 03       		.uleb128 0x3
 2394 001f 24       		.uleb128 0x24
 2395 0020 00       		.byte	0
 2396 0021 0B       		.uleb128 0xb
 2397 0022 0B       		.uleb128 0xb
 2398 0023 3E       		.uleb128 0x3e
 2399 0024 0B       		.uleb128 0xb
 2400 0025 03       		.uleb128 0x3
 2401 0026 08       		.uleb128 0x8
 2402 0027 00       		.byte	0
 2403 0028 00       		.byte	0
 2404 0029 04       		.uleb128 0x4
 2405 002a 16       		.uleb128 0x16
 2406 002b 00       		.byte	0
 2407 002c 03       		.uleb128 0x3
 2408 002d 0E       		.uleb128 0xe
 2409 002e 3A       		.uleb128 0x3a
 2410 002f 0B       		.uleb128 0xb
 2411 0030 3B       		.uleb128 0x3b
 2412 0031 0B       		.uleb128 0xb
 2413 0032 49       		.uleb128 0x49
 2414 0033 13       		.uleb128 0x13
 2415 0034 00       		.byte	0
 2416 0035 00       		.byte	0
 2417 0036 05       		.uleb128 0x5
 2418 0037 2E       		.uleb128 0x2e
 2419 0038 01       		.byte	0x1
 2420 0039 3F       		.uleb128 0x3f
 2421 003a 19       		.uleb128 0x19
 2422 003b 03       		.uleb128 0x3
 2423 003c 0E       		.uleb128 0xe
 2424 003d 3A       		.uleb128 0x3a
 2425 003e 0B       		.uleb128 0xb
 2426 003f 3B       		.uleb128 0x3b
 2427 0040 0B       		.uleb128 0xb
 2428 0041 27       		.uleb128 0x27
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 79


 2429 0042 19       		.uleb128 0x19
 2430 0043 11       		.uleb128 0x11
 2431 0044 01       		.uleb128 0x1
 2432 0045 12       		.uleb128 0x12
 2433 0046 06       		.uleb128 0x6
 2434 0047 40       		.uleb128 0x40
 2435 0048 18       		.uleb128 0x18
 2436 0049 9742     		.uleb128 0x2117
 2437 004b 19       		.uleb128 0x19
 2438 004c 01       		.uleb128 0x1
 2439 004d 13       		.uleb128 0x13
 2440 004e 00       		.byte	0
 2441 004f 00       		.byte	0
 2442 0050 06       		.uleb128 0x6
 2443 0051 05       		.uleb128 0x5
 2444 0052 00       		.byte	0
 2445 0053 03       		.uleb128 0x3
 2446 0054 0E       		.uleb128 0xe
 2447 0055 3A       		.uleb128 0x3a
 2448 0056 0B       		.uleb128 0xb
 2449 0057 3B       		.uleb128 0x3b
 2450 0058 0B       		.uleb128 0xb
 2451 0059 49       		.uleb128 0x49
 2452 005a 13       		.uleb128 0x13
 2453 005b 02       		.uleb128 0x2
 2454 005c 18       		.uleb128 0x18
 2455 005d 00       		.byte	0
 2456 005e 00       		.byte	0
 2457 005f 07       		.uleb128 0x7
 2458 0060 34       		.uleb128 0x34
 2459 0061 00       		.byte	0
 2460 0062 03       		.uleb128 0x3
 2461 0063 0E       		.uleb128 0xe
 2462 0064 3A       		.uleb128 0x3a
 2463 0065 0B       		.uleb128 0xb
 2464 0066 3B       		.uleb128 0x3b
 2465 0067 0B       		.uleb128 0xb
 2466 0068 49       		.uleb128 0x49
 2467 0069 13       		.uleb128 0x13
 2468 006a 02       		.uleb128 0x2
 2469 006b 18       		.uleb128 0x18
 2470 006c 00       		.byte	0
 2471 006d 00       		.byte	0
 2472 006e 08       		.uleb128 0x8
 2473 006f 05       		.uleb128 0x5
 2474 0070 00       		.byte	0
 2475 0071 03       		.uleb128 0x3
 2476 0072 0E       		.uleb128 0xe
 2477 0073 3A       		.uleb128 0x3a
 2478 0074 0B       		.uleb128 0xb
 2479 0075 3B       		.uleb128 0x3b
 2480 0076 0B       		.uleb128 0xb
 2481 0077 49       		.uleb128 0x49
 2482 0078 13       		.uleb128 0x13
 2483 0079 02       		.uleb128 0x2
 2484 007a 17       		.uleb128 0x17
 2485 007b 00       		.byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 80


 2486 007c 00       		.byte	0
 2487 007d 09       		.uleb128 0x9
 2488 007e 898201   		.uleb128 0x4109
 2489 0081 01       		.byte	0x1
 2490 0082 11       		.uleb128 0x11
 2491 0083 01       		.uleb128 0x1
 2492 0084 31       		.uleb128 0x31
 2493 0085 13       		.uleb128 0x13
 2494 0086 01       		.uleb128 0x1
 2495 0087 13       		.uleb128 0x13
 2496 0088 00       		.byte	0
 2497 0089 00       		.byte	0
 2498 008a 0A       		.uleb128 0xa
 2499 008b 8A8201   		.uleb128 0x410a
 2500 008e 00       		.byte	0
 2501 008f 02       		.uleb128 0x2
 2502 0090 18       		.uleb128 0x18
 2503 0091 9142     		.uleb128 0x2111
 2504 0093 18       		.uleb128 0x18
 2505 0094 00       		.byte	0
 2506 0095 00       		.byte	0
 2507 0096 0B       		.uleb128 0xb
 2508 0097 898201   		.uleb128 0x4109
 2509 009a 00       		.byte	0
 2510 009b 11       		.uleb128 0x11
 2511 009c 01       		.uleb128 0x1
 2512 009d 31       		.uleb128 0x31
 2513 009e 13       		.uleb128 0x13
 2514 009f 00       		.byte	0
 2515 00a0 00       		.byte	0
 2516 00a1 0C       		.uleb128 0xc
 2517 00a2 898201   		.uleb128 0x4109
 2518 00a5 01       		.byte	0x1
 2519 00a6 11       		.uleb128 0x11
 2520 00a7 01       		.uleb128 0x1
 2521 00a8 31       		.uleb128 0x31
 2522 00a9 13       		.uleb128 0x13
 2523 00aa 00       		.byte	0
 2524 00ab 00       		.byte	0
 2525 00ac 0D       		.uleb128 0xd
 2526 00ad 2E       		.uleb128 0x2e
 2527 00ae 01       		.byte	0x1
 2528 00af 3F       		.uleb128 0x3f
 2529 00b0 19       		.uleb128 0x19
 2530 00b1 03       		.uleb128 0x3
 2531 00b2 0E       		.uleb128 0xe
 2532 00b3 3A       		.uleb128 0x3a
 2533 00b4 0B       		.uleb128 0xb
 2534 00b5 3B       		.uleb128 0x3b
 2535 00b6 05       		.uleb128 0x5
 2536 00b7 27       		.uleb128 0x27
 2537 00b8 19       		.uleb128 0x19
 2538 00b9 11       		.uleb128 0x11
 2539 00ba 01       		.uleb128 0x1
 2540 00bb 12       		.uleb128 0x12
 2541 00bc 06       		.uleb128 0x6
 2542 00bd 40       		.uleb128 0x40
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 81


 2543 00be 18       		.uleb128 0x18
 2544 00bf 9742     		.uleb128 0x2117
 2545 00c1 19       		.uleb128 0x19
 2546 00c2 01       		.uleb128 0x1
 2547 00c3 13       		.uleb128 0x13
 2548 00c4 00       		.byte	0
 2549 00c5 00       		.byte	0
 2550 00c6 0E       		.uleb128 0xe
 2551 00c7 34       		.uleb128 0x34
 2552 00c8 00       		.byte	0
 2553 00c9 03       		.uleb128 0x3
 2554 00ca 08       		.uleb128 0x8
 2555 00cb 3A       		.uleb128 0x3a
 2556 00cc 0B       		.uleb128 0xb
 2557 00cd 3B       		.uleb128 0x3b
 2558 00ce 05       		.uleb128 0x5
 2559 00cf 49       		.uleb128 0x49
 2560 00d0 13       		.uleb128 0x13
 2561 00d1 02       		.uleb128 0x2
 2562 00d2 17       		.uleb128 0x17
 2563 00d3 00       		.byte	0
 2564 00d4 00       		.byte	0
 2565 00d5 0F       		.uleb128 0xf
 2566 00d6 34       		.uleb128 0x34
 2567 00d7 00       		.byte	0
 2568 00d8 03       		.uleb128 0x3
 2569 00d9 08       		.uleb128 0x8
 2570 00da 3A       		.uleb128 0x3a
 2571 00db 0B       		.uleb128 0xb
 2572 00dc 3B       		.uleb128 0x3b
 2573 00dd 05       		.uleb128 0x5
 2574 00de 49       		.uleb128 0x49
 2575 00df 13       		.uleb128 0x13
 2576 00e0 02       		.uleb128 0x2
 2577 00e1 18       		.uleb128 0x18
 2578 00e2 00       		.byte	0
 2579 00e3 00       		.byte	0
 2580 00e4 10       		.uleb128 0x10
 2581 00e5 34       		.uleb128 0x34
 2582 00e6 00       		.byte	0
 2583 00e7 03       		.uleb128 0x3
 2584 00e8 0E       		.uleb128 0xe
 2585 00e9 3A       		.uleb128 0x3a
 2586 00ea 0B       		.uleb128 0xb
 2587 00eb 3B       		.uleb128 0x3b
 2588 00ec 05       		.uleb128 0x5
 2589 00ed 49       		.uleb128 0x49
 2590 00ee 13       		.uleb128 0x13
 2591 00ef 02       		.uleb128 0x2
 2592 00f0 17       		.uleb128 0x17
 2593 00f1 00       		.byte	0
 2594 00f2 00       		.byte	0
 2595 00f3 11       		.uleb128 0x11
 2596 00f4 05       		.uleb128 0x5
 2597 00f5 00       		.byte	0
 2598 00f6 03       		.uleb128 0x3
 2599 00f7 0E       		.uleb128 0xe
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 82


 2600 00f8 3A       		.uleb128 0x3a
 2601 00f9 0B       		.uleb128 0xb
 2602 00fa 3B       		.uleb128 0x3b
 2603 00fb 05       		.uleb128 0x5
 2604 00fc 49       		.uleb128 0x49
 2605 00fd 13       		.uleb128 0x13
 2606 00fe 02       		.uleb128 0x2
 2607 00ff 17       		.uleb128 0x17
 2608 0100 00       		.byte	0
 2609 0101 00       		.byte	0
 2610 0102 12       		.uleb128 0x12
 2611 0103 2E       		.uleb128 0x2e
 2612 0104 01       		.byte	0x1
 2613 0105 3F       		.uleb128 0x3f
 2614 0106 19       		.uleb128 0x19
 2615 0107 03       		.uleb128 0x3
 2616 0108 0E       		.uleb128 0xe
 2617 0109 3A       		.uleb128 0x3a
 2618 010a 0B       		.uleb128 0xb
 2619 010b 3B       		.uleb128 0x3b
 2620 010c 05       		.uleb128 0x5
 2621 010d 27       		.uleb128 0x27
 2622 010e 19       		.uleb128 0x19
 2623 010f 49       		.uleb128 0x49
 2624 0110 13       		.uleb128 0x13
 2625 0111 11       		.uleb128 0x11
 2626 0112 01       		.uleb128 0x1
 2627 0113 12       		.uleb128 0x12
 2628 0114 06       		.uleb128 0x6
 2629 0115 40       		.uleb128 0x40
 2630 0116 18       		.uleb128 0x18
 2631 0117 9742     		.uleb128 0x2117
 2632 0119 19       		.uleb128 0x19
 2633 011a 01       		.uleb128 0x1
 2634 011b 13       		.uleb128 0x13
 2635 011c 00       		.byte	0
 2636 011d 00       		.byte	0
 2637 011e 13       		.uleb128 0x13
 2638 011f 34       		.uleb128 0x34
 2639 0120 00       		.byte	0
 2640 0121 03       		.uleb128 0x3
 2641 0122 0E       		.uleb128 0xe
 2642 0123 3A       		.uleb128 0x3a
 2643 0124 0B       		.uleb128 0xb
 2644 0125 3B       		.uleb128 0x3b
 2645 0126 05       		.uleb128 0x5
 2646 0127 49       		.uleb128 0x49
 2647 0128 13       		.uleb128 0x13
 2648 0129 02       		.uleb128 0x2
 2649 012a 18       		.uleb128 0x18
 2650 012b 00       		.byte	0
 2651 012c 00       		.byte	0
 2652 012d 14       		.uleb128 0x14
 2653 012e 05       		.uleb128 0x5
 2654 012f 00       		.byte	0
 2655 0130 03       		.uleb128 0x3
 2656 0131 0E       		.uleb128 0xe
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 83


 2657 0132 3A       		.uleb128 0x3a
 2658 0133 0B       		.uleb128 0xb
 2659 0134 3B       		.uleb128 0x3b
 2660 0135 05       		.uleb128 0x5
 2661 0136 49       		.uleb128 0x49
 2662 0137 13       		.uleb128 0x13
 2663 0138 02       		.uleb128 0x2
 2664 0139 18       		.uleb128 0x18
 2665 013a 00       		.byte	0
 2666 013b 00       		.byte	0
 2667 013c 15       		.uleb128 0x15
 2668 013d 0F       		.uleb128 0xf
 2669 013e 00       		.byte	0
 2670 013f 0B       		.uleb128 0xb
 2671 0140 0B       		.uleb128 0xb
 2672 0141 49       		.uleb128 0x49
 2673 0142 13       		.uleb128 0x13
 2674 0143 00       		.byte	0
 2675 0144 00       		.byte	0
 2676 0145 16       		.uleb128 0x16
 2677 0146 01       		.uleb128 0x1
 2678 0147 01       		.byte	0x1
 2679 0148 49       		.uleb128 0x49
 2680 0149 13       		.uleb128 0x13
 2681 014a 01       		.uleb128 0x1
 2682 014b 13       		.uleb128 0x13
 2683 014c 00       		.byte	0
 2684 014d 00       		.byte	0
 2685 014e 17       		.uleb128 0x17
 2686 014f 21       		.uleb128 0x21
 2687 0150 00       		.byte	0
 2688 0151 49       		.uleb128 0x49
 2689 0152 13       		.uleb128 0x13
 2690 0153 2F       		.uleb128 0x2f
 2691 0154 0B       		.uleb128 0xb
 2692 0155 00       		.byte	0
 2693 0156 00       		.byte	0
 2694 0157 18       		.uleb128 0x18
 2695 0158 05       		.uleb128 0x5
 2696 0159 00       		.byte	0
 2697 015a 03       		.uleb128 0x3
 2698 015b 08       		.uleb128 0x8
 2699 015c 3A       		.uleb128 0x3a
 2700 015d 0B       		.uleb128 0xb
 2701 015e 3B       		.uleb128 0x3b
 2702 015f 05       		.uleb128 0x5
 2703 0160 49       		.uleb128 0x49
 2704 0161 13       		.uleb128 0x13
 2705 0162 02       		.uleb128 0x2
 2706 0163 17       		.uleb128 0x17
 2707 0164 00       		.byte	0
 2708 0165 00       		.byte	0
 2709 0166 19       		.uleb128 0x19
 2710 0167 05       		.uleb128 0x5
 2711 0168 00       		.byte	0
 2712 0169 03       		.uleb128 0x3
 2713 016a 08       		.uleb128 0x8
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 84


 2714 016b 3A       		.uleb128 0x3a
 2715 016c 0B       		.uleb128 0xb
 2716 016d 3B       		.uleb128 0x3b
 2717 016e 05       		.uleb128 0x5
 2718 016f 49       		.uleb128 0x49
 2719 0170 13       		.uleb128 0x13
 2720 0171 02       		.uleb128 0x2
 2721 0172 18       		.uleb128 0x18
 2722 0173 00       		.byte	0
 2723 0174 00       		.byte	0
 2724 0175 1A       		.uleb128 0x1a
 2725 0176 34       		.uleb128 0x34
 2726 0177 00       		.byte	0
 2727 0178 03       		.uleb128 0x3
 2728 0179 0E       		.uleb128 0xe
 2729 017a 3A       		.uleb128 0x3a
 2730 017b 0B       		.uleb128 0xb
 2731 017c 3B       		.uleb128 0x3b
 2732 017d 05       		.uleb128 0x5
 2733 017e 49       		.uleb128 0x49
 2734 017f 13       		.uleb128 0x13
 2735 0180 1C       		.uleb128 0x1c
 2736 0181 0B       		.uleb128 0xb
 2737 0182 00       		.byte	0
 2738 0183 00       		.byte	0
 2739 0184 1B       		.uleb128 0x1b
 2740 0185 34       		.uleb128 0x34
 2741 0186 00       		.byte	0
 2742 0187 03       		.uleb128 0x3
 2743 0188 0E       		.uleb128 0xe
 2744 0189 3A       		.uleb128 0x3a
 2745 018a 0B       		.uleb128 0xb
 2746 018b 3B       		.uleb128 0x3b
 2747 018c 05       		.uleb128 0x5
 2748 018d 49       		.uleb128 0x49
 2749 018e 13       		.uleb128 0x13
 2750 018f 3F       		.uleb128 0x3f
 2751 0190 19       		.uleb128 0x19
 2752 0191 3C       		.uleb128 0x3c
 2753 0192 19       		.uleb128 0x19
 2754 0193 00       		.byte	0
 2755 0194 00       		.byte	0
 2756 0195 1C       		.uleb128 0x1c
 2757 0196 26       		.uleb128 0x26
 2758 0197 00       		.byte	0
 2759 0198 49       		.uleb128 0x49
 2760 0199 13       		.uleb128 0x13
 2761 019a 00       		.byte	0
 2762 019b 00       		.byte	0
 2763 019c 1D       		.uleb128 0x1d
 2764 019d 34       		.uleb128 0x34
 2765 019e 00       		.byte	0
 2766 019f 03       		.uleb128 0x3
 2767 01a0 0E       		.uleb128 0xe
 2768 01a1 3A       		.uleb128 0x3a
 2769 01a2 0B       		.uleb128 0xb
 2770 01a3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 85


 2771 01a4 0B       		.uleb128 0xb
 2772 01a5 49       		.uleb128 0x49
 2773 01a6 13       		.uleb128 0x13
 2774 01a7 3F       		.uleb128 0x3f
 2775 01a8 19       		.uleb128 0x19
 2776 01a9 02       		.uleb128 0x2
 2777 01aa 18       		.uleb128 0x18
 2778 01ab 00       		.byte	0
 2779 01ac 00       		.byte	0
 2780 01ad 1E       		.uleb128 0x1e
 2781 01ae 2E       		.uleb128 0x2e
 2782 01af 01       		.byte	0x1
 2783 01b0 3F       		.uleb128 0x3f
 2784 01b1 19       		.uleb128 0x19
 2785 01b2 03       		.uleb128 0x3
 2786 01b3 0E       		.uleb128 0xe
 2787 01b4 3A       		.uleb128 0x3a
 2788 01b5 0B       		.uleb128 0xb
 2789 01b6 3B       		.uleb128 0x3b
 2790 01b7 0B       		.uleb128 0xb
 2791 01b8 27       		.uleb128 0x27
 2792 01b9 19       		.uleb128 0x19
 2793 01ba 3C       		.uleb128 0x3c
 2794 01bb 19       		.uleb128 0x19
 2795 01bc 01       		.uleb128 0x1
 2796 01bd 13       		.uleb128 0x13
 2797 01be 00       		.byte	0
 2798 01bf 00       		.byte	0
 2799 01c0 1F       		.uleb128 0x1f
 2800 01c1 05       		.uleb128 0x5
 2801 01c2 00       		.byte	0
 2802 01c3 49       		.uleb128 0x49
 2803 01c4 13       		.uleb128 0x13
 2804 01c5 00       		.byte	0
 2805 01c6 00       		.byte	0
 2806 01c7 20       		.uleb128 0x20
 2807 01c8 2E       		.uleb128 0x2e
 2808 01c9 00       		.byte	0
 2809 01ca 3F       		.uleb128 0x3f
 2810 01cb 19       		.uleb128 0x19
 2811 01cc 03       		.uleb128 0x3
 2812 01cd 0E       		.uleb128 0xe
 2813 01ce 3A       		.uleb128 0x3a
 2814 01cf 0B       		.uleb128 0xb
 2815 01d0 3B       		.uleb128 0x3b
 2816 01d1 0B       		.uleb128 0xb
 2817 01d2 27       		.uleb128 0x27
 2818 01d3 19       		.uleb128 0x19
 2819 01d4 49       		.uleb128 0x49
 2820 01d5 13       		.uleb128 0x13
 2821 01d6 3C       		.uleb128 0x3c
 2822 01d7 19       		.uleb128 0x19
 2823 01d8 00       		.byte	0
 2824 01d9 00       		.byte	0
 2825 01da 21       		.uleb128 0x21
 2826 01db 2E       		.uleb128 0x2e
 2827 01dc 00       		.byte	0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 86


 2828 01dd 3F       		.uleb128 0x3f
 2829 01de 19       		.uleb128 0x19
 2830 01df 03       		.uleb128 0x3
 2831 01e0 0E       		.uleb128 0xe
 2832 01e1 3A       		.uleb128 0x3a
 2833 01e2 0B       		.uleb128 0xb
 2834 01e3 3B       		.uleb128 0x3b
 2835 01e4 0B       		.uleb128 0xb
 2836 01e5 27       		.uleb128 0x27
 2837 01e6 19       		.uleb128 0x19
 2838 01e7 3C       		.uleb128 0x3c
 2839 01e8 19       		.uleb128 0x19
 2840 01e9 00       		.byte	0
 2841 01ea 00       		.byte	0
 2842 01eb 22       		.uleb128 0x22
 2843 01ec 2E       		.uleb128 0x2e
 2844 01ed 01       		.byte	0x1
 2845 01ee 3F       		.uleb128 0x3f
 2846 01ef 19       		.uleb128 0x19
 2847 01f0 03       		.uleb128 0x3
 2848 01f1 0E       		.uleb128 0xe
 2849 01f2 3A       		.uleb128 0x3a
 2850 01f3 0B       		.uleb128 0xb
 2851 01f4 3B       		.uleb128 0x3b
 2852 01f5 0B       		.uleb128 0xb
 2853 01f6 27       		.uleb128 0x27
 2854 01f7 19       		.uleb128 0x19
 2855 01f8 3C       		.uleb128 0x3c
 2856 01f9 19       		.uleb128 0x19
 2857 01fa 00       		.byte	0
 2858 01fb 00       		.byte	0
 2859 01fc 00       		.byte	0
 2860              		.section	.debug_loc,"",%progbits
 2861              	.Ldebug_loc0:
 2862              	.LLST0:
 2863 0000 00000000 		.4byte	.LVL2
 2864 0004 07000000 		.4byte	.LVL3-1
 2865 0008 0100     		.2byte	0x1
 2866 000a 50       		.byte	0x50
 2867 000b 07000000 		.4byte	.LVL3-1
 2868 000f 18000000 		.4byte	.LFE1
 2869 0013 0400     		.2byte	0x4
 2870 0015 F3       		.byte	0xf3
 2871 0016 01       		.uleb128 0x1
 2872 0017 50       		.byte	0x50
 2873 0018 9F       		.byte	0x9f
 2874 0019 00000000 		.4byte	0
 2875 001d 00000000 		.4byte	0
 2876              	.LLST1:
 2877 0021 02000000 		.4byte	.LVL6
 2878 0025 06000000 		.4byte	.LVL7
 2879 0029 0200     		.2byte	0x2
 2880 002b 30       		.byte	0x30
 2881 002c 9F       		.byte	0x9f
 2882 002d 06000000 		.4byte	.LVL7
 2883 0031 0E000000 		.4byte	.LVL9
 2884 0035 0100     		.2byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 87


 2885 0037 54       		.byte	0x54
 2886 0038 0E000000 		.4byte	.LVL9
 2887 003c 10000000 		.4byte	.LVL10
 2888 0040 0300     		.2byte	0x3
 2889 0042 74       		.byte	0x74
 2890 0043 7F       		.sleb128 -1
 2891 0044 9F       		.byte	0x9f
 2892 0045 10000000 		.4byte	.LVL10
 2893 0049 16000000 		.4byte	.LFE2
 2894 004d 0100     		.2byte	0x1
 2895 004f 54       		.byte	0x54
 2896 0050 00000000 		.4byte	0
 2897 0054 00000000 		.4byte	0
 2898              	.LLST2:
 2899 0058 18000000 		.4byte	.LVL13
 2900 005c 36000000 		.4byte	.LVL16
 2901 0060 0100     		.2byte	0x1
 2902 0062 54       		.byte	0x54
 2903 0063 36000000 		.4byte	.LVL16
 2904 0067 38000000 		.4byte	.LVL17
 2905 006b 0300     		.2byte	0x3
 2906 006d 74       		.byte	0x74
 2907 006e 7F       		.sleb128 -1
 2908 006f 9F       		.byte	0x9f
 2909 0070 38000000 		.4byte	.LVL17
 2910 0074 3E000000 		.4byte	.LVL18
 2911 0078 0100     		.2byte	0x1
 2912 007a 54       		.byte	0x54
 2913 007b 00000000 		.4byte	0
 2914 007f 00000000 		.4byte	0
 2915              	.LLST3:
 2916 0083 22000000 		.4byte	.LVL14
 2917 0087 33000000 		.4byte	.LVL15-1
 2918 008b 0100     		.2byte	0x1
 2919 008d 52       		.byte	0x52
 2920 008e 33000000 		.4byte	.LVL15-1
 2921 0092 36000000 		.4byte	.LVL16
 2922 0096 0800     		.2byte	0x8
 2923 0098 76       		.byte	0x76
 2924 0099 00       		.sleb128 0
 2925 009a 74       		.byte	0x74
 2926 009b 00       		.sleb128 0
 2927 009c 37       		.byte	0x37
 2928 009d 1A       		.byte	0x1a
 2929 009e 24       		.byte	0x24
 2930 009f 9F       		.byte	0x9f
 2931 00a0 36000000 		.4byte	.LVL16
 2932 00a4 38000000 		.4byte	.LVL17
 2933 00a8 0800     		.2byte	0x8
 2934 00aa 76       		.byte	0x76
 2935 00ab 00       		.sleb128 0
 2936 00ac 74       		.byte	0x74
 2937 00ad 7F       		.sleb128 -1
 2938 00ae 37       		.byte	0x37
 2939 00af 1A       		.byte	0x1a
 2940 00b0 24       		.byte	0x24
 2941 00b1 9F       		.byte	0x9f
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 88


 2942 00b2 00000000 		.4byte	0
 2943 00b6 00000000 		.4byte	0
 2944              	.LLST4:
 2945 00ba 00000000 		.4byte	.LVL19
 2946 00be 19000000 		.4byte	.LVL24-1
 2947 00c2 0100     		.2byte	0x1
 2948 00c4 50       		.byte	0x50
 2949 00c5 19000000 		.4byte	.LVL24-1
 2950 00c9 D0000000 		.4byte	.LFE4
 2951 00cd 0400     		.2byte	0x4
 2952 00cf F3       		.byte	0xf3
 2953 00d0 01       		.uleb128 0x1
 2954 00d1 50       		.byte	0x50
 2955 00d2 9F       		.byte	0x9f
 2956 00d3 00000000 		.4byte	0
 2957 00d7 00000000 		.4byte	0
 2958              	.LLST5:
 2959 00db 6C000000 		.4byte	.LVL30
 2960 00df 74000000 		.4byte	.LVL31
 2961 00e3 0500     		.2byte	0x5
 2962 00e5 73       		.byte	0x73
 2963 00e6 00       		.sleb128 0
 2964 00e7 38       		.byte	0x38
 2965 00e8 24       		.byte	0x24
 2966 00e9 9F       		.byte	0x9f
 2967 00ea 74000000 		.4byte	.LVL31
 2968 00ee 76000000 		.4byte	.LVL32
 2969 00f2 0100     		.2byte	0x1
 2970 00f4 51       		.byte	0x51
 2971 00f5 76000000 		.4byte	.LVL32
 2972 00f9 78000000 		.4byte	.LVL33
 2973 00fd 0100     		.2byte	0x1
 2974 00ff 56       		.byte	0x56
 2975 0100 78000000 		.4byte	.LVL33
 2976 0104 88000000 		.4byte	.LVL34
 2977 0108 0100     		.2byte	0x1
 2978 010a 53       		.byte	0x53
 2979 010b 00000000 		.4byte	0
 2980 010f 00000000 		.4byte	0
 2981              	.LLST6:
 2982 0113 28000000 		.4byte	.LVL25
 2983 0117 2E000000 		.4byte	.LVL26
 2984 011b 0100     		.2byte	0x1
 2985 011d 55       		.byte	0x55
 2986 011e 32000000 		.4byte	.LVL27
 2987 0122 B4000000 		.4byte	.LVL37
 2988 0126 0100     		.2byte	0x1
 2989 0128 55       		.byte	0x55
 2990 0129 00000000 		.4byte	0
 2991 012d 00000000 		.4byte	0
 2992              	.LLST7:
 2993 0131 16000000 		.4byte	.LVL23
 2994 0135 19000000 		.4byte	.LVL24-1
 2995 0139 0700     		.2byte	0x7
 2996 013b 70       		.byte	0x70
 2997 013c 00       		.sleb128 0
 2998 013d 31       		.byte	0x31
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 89


 2999 013e 24       		.byte	0x24
 3000 013f 73       		.byte	0x73
 3001 0140 00       		.sleb128 0
 3002 0141 22       		.byte	0x22
 3003 0142 19000000 		.4byte	.LVL24-1
 3004 0146 76000000 		.4byte	.LVL32
 3005 014a 0100     		.2byte	0x1
 3006 014c 56       		.byte	0x56
 3007 014d 00000000 		.4byte	0
 3008 0151 00000000 		.4byte	0
 3009              	.LLST8:
 3010 0155 0A000000 		.4byte	.LVL20
 3011 0159 19000000 		.4byte	.LVL24-1
 3012 015d 0200     		.2byte	0x2
 3013 015f 70       		.byte	0x70
 3014 0160 00       		.sleb128 0
 3015 0161 19000000 		.4byte	.LVL24-1
 3016 0165 28000000 		.4byte	.LVL25
 3017 0169 0200     		.2byte	0x2
 3018 016b 74       		.byte	0x74
 3019 016c 00       		.sleb128 0
 3020 016d 28000000 		.4byte	.LVL25
 3021 0171 2E000000 		.4byte	.LVL26
 3022 0175 0200     		.2byte	0x2
 3023 0177 31       		.byte	0x31
 3024 0178 9F       		.byte	0x9f
 3025 0179 2E000000 		.4byte	.LVL26
 3026 017d 32000000 		.4byte	.LVL27
 3027 0181 0200     		.2byte	0x2
 3028 0183 74       		.byte	0x74
 3029 0184 00       		.sleb128 0
 3030 0185 32000000 		.4byte	.LVL27
 3031 0189 36000000 		.4byte	.LVL28
 3032 018d 0200     		.2byte	0x2
 3033 018f 30       		.byte	0x30
 3034 0190 9F       		.byte	0x9f
 3035 0191 36000000 		.4byte	.LVL28
 3036 0195 B4000000 		.4byte	.LVL37
 3037 0199 0100     		.2byte	0x1
 3038 019b 58       		.byte	0x58
 3039 019c 00000000 		.4byte	0
 3040 01a0 00000000 		.4byte	0
 3041              	.LLST9:
 3042 01a4 10000000 		.4byte	.LVL21
 3043 01a8 12000000 		.4byte	.LVL22
 3044 01ac 0200     		.2byte	0x2
 3045 01ae 73       		.byte	0x73
 3046 01af 04       		.sleb128 4
 3047 01b0 12000000 		.4byte	.LVL22
 3048 01b4 19000000 		.4byte	.LVL24-1
 3049 01b8 0C00     		.2byte	0xc
 3050 01ba 70       		.byte	0x70
 3051 01bb 00       		.sleb128 0
 3052 01bc 94       		.byte	0x94
 3053 01bd 01       		.byte	0x1
 3054 01be 08       		.byte	0x8
 3055 01bf FF       		.byte	0xff
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 90


 3056 01c0 1A       		.byte	0x1a
 3057 01c1 72       		.byte	0x72
 3058 01c2 00       		.sleb128 0
 3059 01c3 22       		.byte	0x22
 3060 01c4 23       		.byte	0x23
 3061 01c5 04       		.uleb128 0x4
 3062 01c6 19000000 		.4byte	.LVL24-1
 3063 01ca B4000000 		.4byte	.LVL37
 3064 01ce 0100     		.2byte	0x1
 3065 01d0 57       		.byte	0x57
 3066 01d1 00000000 		.4byte	0
 3067 01d5 00000000 		.4byte	0
 3068              	.LLST10:
 3069 01d9 02000000 		.4byte	.LVL38
 3070 01dd 0A000000 		.4byte	.LVL39
 3071 01e1 0200     		.2byte	0x2
 3072 01e3 30       		.byte	0x30
 3073 01e4 9F       		.byte	0x9f
 3074 01e5 0A000000 		.4byte	.LVL39
 3075 01e9 22000000 		.4byte	.LVL42
 3076 01ed 0100     		.2byte	0x1
 3077 01ef 54       		.byte	0x54
 3078 01f0 22000000 		.4byte	.LVL42
 3079 01f4 24000000 		.4byte	.LVL43
 3080 01f8 0300     		.2byte	0x3
 3081 01fa 74       		.byte	0x74
 3082 01fb 7F       		.sleb128 -1
 3083 01fc 9F       		.byte	0x9f
 3084 01fd 24000000 		.4byte	.LVL43
 3085 0201 2A000000 		.4byte	.LVL44
 3086 0205 0100     		.2byte	0x1
 3087 0207 54       		.byte	0x54
 3088 0208 00000000 		.4byte	0
 3089 020c 00000000 		.4byte	0
 3090              	.LLST11:
 3091 0210 14000000 		.4byte	.LVL40
 3092 0214 1F000000 		.4byte	.LVL41-1
 3093 0218 0100     		.2byte	0x1
 3094 021a 52       		.byte	0x52
 3095 021b 1F000000 		.4byte	.LVL41-1
 3096 021f 22000000 		.4byte	.LVL42
 3097 0223 0800     		.2byte	0x8
 3098 0225 76       		.byte	0x76
 3099 0226 00       		.sleb128 0
 3100 0227 74       		.byte	0x74
 3101 0228 00       		.sleb128 0
 3102 0229 37       		.byte	0x37
 3103 022a 1A       		.byte	0x1a
 3104 022b 24       		.byte	0x24
 3105 022c 9F       		.byte	0x9f
 3106 022d 22000000 		.4byte	.LVL42
 3107 0231 24000000 		.4byte	.LVL43
 3108 0235 0800     		.2byte	0x8
 3109 0237 76       		.byte	0x76
 3110 0238 00       		.sleb128 0
 3111 0239 74       		.byte	0x74
 3112 023a 7F       		.sleb128 -1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 91


 3113 023b 37       		.byte	0x37
 3114 023c 1A       		.byte	0x1a
 3115 023d 24       		.byte	0x24
 3116 023e 9F       		.byte	0x9f
 3117 023f 00000000 		.4byte	0
 3118 0243 00000000 		.4byte	0
 3119              	.LLST12:
 3120 0247 00000000 		.4byte	.LVL45
 3121 024b 3C000000 		.4byte	.LVL58
 3122 024f 0100     		.2byte	0x1
 3123 0251 50       		.byte	0x50
 3124 0252 3C000000 		.4byte	.LVL58
 3125 0256 50000000 		.4byte	.LVL60
 3126 025a 0400     		.2byte	0x4
 3127 025c F3       		.byte	0xf3
 3128 025d 01       		.uleb128 0x1
 3129 025e 50       		.byte	0x50
 3130 025f 9F       		.byte	0x9f
 3131 0260 50000000 		.4byte	.LVL60
 3132 0264 58000000 		.4byte	.LVL61
 3133 0268 0100     		.2byte	0x1
 3134 026a 50       		.byte	0x50
 3135 026b 58000000 		.4byte	.LVL61
 3136 026f A0000000 		.4byte	.LFE6
 3137 0273 0400     		.2byte	0x4
 3138 0275 F3       		.byte	0xf3
 3139 0276 01       		.uleb128 0x1
 3140 0277 50       		.byte	0x50
 3141 0278 9F       		.byte	0x9f
 3142 0279 00000000 		.4byte	0
 3143 027d 00000000 		.4byte	0
 3144              	.LLST13:
 3145 0281 1E000000 		.4byte	.LVL52
 3146 0285 28000000 		.4byte	.LVL55
 3147 0289 0200     		.2byte	0x2
 3148 028b 32       		.byte	0x32
 3149 028c 9F       		.byte	0x9f
 3150 028d 2C000000 		.4byte	.LVL57
 3151 0291 64000000 		.4byte	.LVL63
 3152 0295 0100     		.2byte	0x1
 3153 0297 53       		.byte	0x53
 3154 0298 64000000 		.4byte	.LVL63
 3155 029c 76000000 		.4byte	.LVL64
 3156 02a0 0100     		.2byte	0x1
 3157 02a2 50       		.byte	0x50
 3158 02a3 76000000 		.4byte	.LVL64
 3159 02a7 7A000000 		.4byte	.LVL65
 3160 02ab 0100     		.2byte	0x1
 3161 02ad 53       		.byte	0x53
 3162 02ae 00000000 		.4byte	0
 3163 02b2 00000000 		.4byte	0
 3164              	.LLST14:
 3165 02b6 12000000 		.4byte	.LVL48
 3166 02ba 3C000000 		.4byte	.LVL58
 3167 02be 0200     		.2byte	0x2
 3168 02c0 70       		.byte	0x70
 3169 02c1 00       		.sleb128 0
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 92


 3170 02c2 50000000 		.4byte	.LVL60
 3171 02c6 58000000 		.4byte	.LVL61
 3172 02ca 0200     		.2byte	0x2
 3173 02cc 70       		.byte	0x70
 3174 02cd 00       		.sleb128 0
 3175 02ce 00000000 		.4byte	0
 3176 02d2 00000000 		.4byte	0
 3177              	.LLST15:
 3178 02d6 18000000 		.4byte	.LVL49
 3179 02da 1A000000 		.4byte	.LVL50
 3180 02de 0200     		.2byte	0x2
 3181 02e0 75       		.byte	0x75
 3182 02e1 08       		.sleb128 8
 3183 02e2 1A000000 		.4byte	.LVL50
 3184 02e6 20000000 		.4byte	.LVL53
 3185 02ea 0700     		.2byte	0x7
 3186 02ec 74       		.byte	0x74
 3187 02ed 00       		.sleb128 0
 3188 02ee 73       		.byte	0x73
 3189 02ef 00       		.sleb128 0
 3190 02f0 22       		.byte	0x22
 3191 02f1 23       		.byte	0x23
 3192 02f2 08       		.uleb128 0x8
 3193 02f3 20000000 		.4byte	.LVL53
 3194 02f7 22000000 		.4byte	.LVL54
 3195 02fb 0800     		.2byte	0x8
 3196 02fd 73       		.byte	0x73
 3197 02fe 00       		.sleb128 0
 3198 02ff 03       		.byte	0x3
 3199 0300 08000000 		.4byte	.LANCHOR0+8
 3200 0304 22       		.byte	0x22
 3201 0305 22000000 		.4byte	.LVL54
 3202 0309 28000000 		.4byte	.LVL55
 3203 030d 0D00     		.2byte	0xd
 3204 030f 70       		.byte	0x70
 3205 0310 00       		.sleb128 0
 3206 0311 94       		.byte	0x94
 3207 0312 01       		.byte	0x1
 3208 0313 08       		.byte	0x8
 3209 0314 FF       		.byte	0xff
 3210 0315 1A       		.byte	0x1a
 3211 0316 03       		.byte	0x3
 3212 0317 08000000 		.4byte	.LANCHOR0+8
 3213 031b 22       		.byte	0x22
 3214 031c 28000000 		.4byte	.LVL55
 3215 0320 2A000000 		.4byte	.LVL56
 3216 0324 0700     		.2byte	0x7
 3217 0326 74       		.byte	0x74
 3218 0327 00       		.sleb128 0
 3219 0328 73       		.byte	0x73
 3220 0329 00       		.sleb128 0
 3221 032a 22       		.byte	0x22
 3222 032b 23       		.byte	0x23
 3223 032c 08       		.uleb128 0x8
 3224 032d 2A000000 		.4byte	.LVL56
 3225 0331 2C000000 		.4byte	.LVL57
 3226 0335 0700     		.2byte	0x7
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 93


 3227 0337 74       		.byte	0x74
 3228 0338 00       		.sleb128 0
 3229 0339 73       		.byte	0x73
 3230 033a 00       		.sleb128 0
 3231 033b 22       		.byte	0x22
 3232 033c 23       		.byte	0x23
 3233 033d 09       		.uleb128 0x9
 3234 033e 2C000000 		.4byte	.LVL57
 3235 0342 3C000000 		.4byte	.LVL58
 3236 0346 0D00     		.2byte	0xd
 3237 0348 70       		.byte	0x70
 3238 0349 00       		.sleb128 0
 3239 034a 94       		.byte	0x94
 3240 034b 01       		.byte	0x1
 3241 034c 08       		.byte	0x8
 3242 034d FF       		.byte	0xff
 3243 034e 1A       		.byte	0x1a
 3244 034f 03       		.byte	0x3
 3245 0350 08000000 		.4byte	.LANCHOR0+8
 3246 0354 22       		.byte	0x22
 3247 0355 3C000000 		.4byte	.LVL58
 3248 0359 50000000 		.4byte	.LVL60
 3249 035d 0100     		.2byte	0x1
 3250 035f 56       		.byte	0x56
 3251 0360 50000000 		.4byte	.LVL60
 3252 0364 58000000 		.4byte	.LVL61
 3253 0368 0D00     		.2byte	0xd
 3254 036a 70       		.byte	0x70
 3255 036b 00       		.sleb128 0
 3256 036c 94       		.byte	0x94
 3257 036d 01       		.byte	0x1
 3258 036e 08       		.byte	0x8
 3259 036f FF       		.byte	0xff
 3260 0370 1A       		.byte	0x1a
 3261 0371 03       		.byte	0x3
 3262 0372 08000000 		.4byte	.LANCHOR0+8
 3263 0376 22       		.byte	0x22
 3264 0377 58000000 		.4byte	.LVL61
 3265 037b 8A000000 		.4byte	.LVL66
 3266 037f 0100     		.2byte	0x1
 3267 0381 56       		.byte	0x56
 3268 0382 00000000 		.4byte	0
 3269 0386 00000000 		.4byte	0
 3270              	.LLST16:
 3271 038a 1A000000 		.4byte	.LVL50
 3272 038e 20000000 		.4byte	.LVL53
 3273 0392 0700     		.2byte	0x7
 3274 0394 74       		.byte	0x74
 3275 0395 00       		.sleb128 0
 3276 0396 73       		.byte	0x73
 3277 0397 00       		.sleb128 0
 3278 0398 22       		.byte	0x22
 3279 0399 23       		.byte	0x23
 3280 039a 0C       		.uleb128 0xc
 3281 039b 20000000 		.4byte	.LVL53
 3282 039f 22000000 		.4byte	.LVL54
 3283 03a3 0800     		.2byte	0x8
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 94


 3284 03a5 73       		.byte	0x73
 3285 03a6 00       		.sleb128 0
 3286 03a7 03       		.byte	0x3
 3287 03a8 0C000000 		.4byte	.LANCHOR0+12
 3288 03ac 22       		.byte	0x22
 3289 03ad 22000000 		.4byte	.LVL54
 3290 03b1 28000000 		.4byte	.LVL55
 3291 03b5 0D00     		.2byte	0xd
 3292 03b7 70       		.byte	0x70
 3293 03b8 00       		.sleb128 0
 3294 03b9 94       		.byte	0x94
 3295 03ba 01       		.byte	0x1
 3296 03bb 08       		.byte	0x8
 3297 03bc FF       		.byte	0xff
 3298 03bd 1A       		.byte	0x1a
 3299 03be 03       		.byte	0x3
 3300 03bf 0C000000 		.4byte	.LANCHOR0+12
 3301 03c3 22       		.byte	0x22
 3302 03c4 28000000 		.4byte	.LVL55
 3303 03c8 2A000000 		.4byte	.LVL56
 3304 03cc 0700     		.2byte	0x7
 3305 03ce 74       		.byte	0x74
 3306 03cf 00       		.sleb128 0
 3307 03d0 73       		.byte	0x73
 3308 03d1 00       		.sleb128 0
 3309 03d2 22       		.byte	0x22
 3310 03d3 23       		.byte	0x23
 3311 03d4 0C       		.uleb128 0xc
 3312 03d5 2A000000 		.4byte	.LVL56
 3313 03d9 2C000000 		.4byte	.LVL57
 3314 03dd 0700     		.2byte	0x7
 3315 03df 74       		.byte	0x74
 3316 03e0 00       		.sleb128 0
 3317 03e1 73       		.byte	0x73
 3318 03e2 00       		.sleb128 0
 3319 03e3 22       		.byte	0x22
 3320 03e4 23       		.byte	0x23
 3321 03e5 0D       		.uleb128 0xd
 3322 03e6 2C000000 		.4byte	.LVL57
 3323 03ea 3C000000 		.4byte	.LVL58
 3324 03ee 0D00     		.2byte	0xd
 3325 03f0 70       		.byte	0x70
 3326 03f1 00       		.sleb128 0
 3327 03f2 94       		.byte	0x94
 3328 03f3 01       		.byte	0x1
 3329 03f4 08       		.byte	0x8
 3330 03f5 FF       		.byte	0xff
 3331 03f6 1A       		.byte	0x1a
 3332 03f7 03       		.byte	0x3
 3333 03f8 0C000000 		.4byte	.LANCHOR0+12
 3334 03fc 22       		.byte	0x22
 3335 03fd 3C000000 		.4byte	.LVL58
 3336 0401 3E000000 		.4byte	.LVL59
 3337 0405 0100     		.2byte	0x1
 3338 0407 55       		.byte	0x55
 3339 0408 50000000 		.4byte	.LVL60
 3340 040c 58000000 		.4byte	.LVL61
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 95


 3341 0410 0D00     		.2byte	0xd
 3342 0412 70       		.byte	0x70
 3343 0413 00       		.sleb128 0
 3344 0414 94       		.byte	0x94
 3345 0415 01       		.byte	0x1
 3346 0416 08       		.byte	0x8
 3347 0417 FF       		.byte	0xff
 3348 0418 1A       		.byte	0x1a
 3349 0419 03       		.byte	0x3
 3350 041a 0C000000 		.4byte	.LANCHOR0+12
 3351 041e 22       		.byte	0x22
 3352 041f 58000000 		.4byte	.LVL61
 3353 0423 5A000000 		.4byte	.LVL62
 3354 0427 0100     		.2byte	0x1
 3355 0429 55       		.byte	0x55
 3356 042a 00000000 		.4byte	0
 3357 042e 00000000 		.4byte	0
 3358              	.LLST17:
 3359 0432 1C000000 		.4byte	.LVL51
 3360 0436 20000000 		.4byte	.LVL53
 3361 043a 0500     		.2byte	0x5
 3362 043c 74       		.byte	0x74
 3363 043d 00       		.sleb128 0
 3364 043e 73       		.byte	0x73
 3365 043f 00       		.sleb128 0
 3366 0440 22       		.byte	0x22
 3367 0441 20000000 		.4byte	.LVL53
 3368 0445 22000000 		.4byte	.LVL54
 3369 0449 0800     		.2byte	0x8
 3370 044b 73       		.byte	0x73
 3371 044c 00       		.sleb128 0
 3372 044d 03       		.byte	0x3
 3373 044e 00000000 		.4byte	.LANCHOR0
 3374 0452 22       		.byte	0x22
 3375 0453 22000000 		.4byte	.LVL54
 3376 0457 28000000 		.4byte	.LVL55
 3377 045b 0D00     		.2byte	0xd
 3378 045d 70       		.byte	0x70
 3379 045e 00       		.sleb128 0
 3380 045f 94       		.byte	0x94
 3381 0460 01       		.byte	0x1
 3382 0461 08       		.byte	0x8
 3383 0462 FF       		.byte	0xff
 3384 0463 1A       		.byte	0x1a
 3385 0464 03       		.byte	0x3
 3386 0465 00000000 		.4byte	.LANCHOR0
 3387 0469 22       		.byte	0x22
 3388 046a 28000000 		.4byte	.LVL55
 3389 046e 2A000000 		.4byte	.LVL56
 3390 0472 0500     		.2byte	0x5
 3391 0474 74       		.byte	0x74
 3392 0475 00       		.sleb128 0
 3393 0476 73       		.byte	0x73
 3394 0477 00       		.sleb128 0
 3395 0478 22       		.byte	0x22
 3396 0479 2A000000 		.4byte	.LVL56
 3397 047d 2C000000 		.4byte	.LVL57
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 96


 3398 0481 0700     		.2byte	0x7
 3399 0483 74       		.byte	0x74
 3400 0484 00       		.sleb128 0
 3401 0485 73       		.byte	0x73
 3402 0486 00       		.sleb128 0
 3403 0487 22       		.byte	0x22
 3404 0488 23       		.byte	0x23
 3405 0489 01       		.uleb128 0x1
 3406 048a 2C000000 		.4byte	.LVL57
 3407 048e 3C000000 		.4byte	.LVL58
 3408 0492 0D00     		.2byte	0xd
 3409 0494 70       		.byte	0x70
 3410 0495 00       		.sleb128 0
 3411 0496 94       		.byte	0x94
 3412 0497 01       		.byte	0x1
 3413 0498 08       		.byte	0x8
 3414 0499 FF       		.byte	0xff
 3415 049a 1A       		.byte	0x1a
 3416 049b 03       		.byte	0x3
 3417 049c 00000000 		.4byte	.LANCHOR0
 3418 04a0 22       		.byte	0x22
 3419 04a1 3C000000 		.4byte	.LVL58
 3420 04a5 8A000000 		.4byte	.LVL66
 3421 04a9 0100     		.2byte	0x1
 3422 04ab 57       		.byte	0x57
 3423 04ac 00000000 		.4byte	0
 3424 04b0 00000000 		.4byte	0
 3425              	.LLST18:
 3426 04b4 00000000 		.4byte	.LVL67
 3427 04b8 08000000 		.4byte	.LVL69
 3428 04bc 0100     		.2byte	0x1
 3429 04be 50       		.byte	0x50
 3430 04bf 08000000 		.4byte	.LVL69
 3431 04c3 2C000000 		.4byte	.LFE7
 3432 04c7 0400     		.2byte	0x4
 3433 04c9 F3       		.byte	0xf3
 3434 04ca 01       		.uleb128 0x1
 3435 04cb 50       		.byte	0x50
 3436 04cc 9F       		.byte	0x9f
 3437 04cd 00000000 		.4byte	0
 3438 04d1 00000000 		.4byte	0
 3439              	.LLST19:
 3440 04d5 06000000 		.4byte	.LVL68
 3441 04d9 08000000 		.4byte	.LVL69
 3442 04dd 0500     		.2byte	0x5
 3443 04df 73       		.byte	0x73
 3444 04e0 00       		.sleb128 0
 3445 04e1 70       		.byte	0x70
 3446 04e2 00       		.sleb128 0
 3447 04e3 22       		.byte	0x22
 3448 04e4 08000000 		.4byte	.LVL69
 3449 04e8 12000000 		.4byte	.LVL71
 3450 04ec 0200     		.2byte	0x2
 3451 04ee 70       		.byte	0x70
 3452 04ef 00       		.sleb128 0
 3453 04f0 12000000 		.4byte	.LVL71
 3454 04f4 1E000000 		.4byte	.LVL73
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 97


 3455 04f8 0100     		.2byte	0x1
 3456 04fa 54       		.byte	0x54
 3457 04fb 1E000000 		.4byte	.LVL73
 3458 04ff 20000000 		.4byte	.LVL74
 3459 0503 0300     		.2byte	0x3
 3460 0505 74       		.byte	0x74
 3461 0506 7F       		.sleb128 -1
 3462 0507 9F       		.byte	0x9f
 3463 0508 20000000 		.4byte	.LVL74
 3464 050c 28000000 		.4byte	.LVL75
 3465 0510 0100     		.2byte	0x1
 3466 0512 54       		.byte	0x54
 3467 0513 00000000 		.4byte	0
 3468 0517 00000000 		.4byte	0
 3469              	.LLST20:
 3470 051b 0E000000 		.4byte	.LVL70
 3471 051f 28000000 		.4byte	.LVL75
 3472 0523 0100     		.2byte	0x1
 3473 0525 55       		.byte	0x55
 3474 0526 00000000 		.4byte	0
 3475 052a 00000000 		.4byte	0
 3476              	.LLST21:
 3477 052e 0E000000 		.4byte	.LVL70
 3478 0532 12000000 		.4byte	.LVL71
 3479 0536 0200     		.2byte	0x2
 3480 0538 30       		.byte	0x30
 3481 0539 9F       		.byte	0x9f
 3482 053a 00000000 		.4byte	0
 3483 053e 00000000 		.4byte	0
 3484              	.LLST22:
 3485 0542 02000000 		.4byte	.LVL76
 3486 0546 0A000000 		.4byte	.LVL77
 3487 054a 0200     		.2byte	0x2
 3488 054c 30       		.byte	0x30
 3489 054d 9F       		.byte	0x9f
 3490 054e 0A000000 		.4byte	.LVL77
 3491 0552 16000000 		.4byte	.LVL79
 3492 0556 0100     		.2byte	0x1
 3493 0558 54       		.byte	0x54
 3494 0559 16000000 		.4byte	.LVL79
 3495 055d 18000000 		.4byte	.LVL80
 3496 0561 0300     		.2byte	0x3
 3497 0563 74       		.byte	0x74
 3498 0564 7F       		.sleb128 -1
 3499 0565 9F       		.byte	0x9f
 3500 0566 18000000 		.4byte	.LVL80
 3501 056a 20000000 		.4byte	.LFE8
 3502 056e 0100     		.2byte	0x1
 3503 0570 54       		.byte	0x54
 3504 0571 00000000 		.4byte	0
 3505 0575 00000000 		.4byte	0
 3506              	.LLST23:
 3507 0579 02000000 		.4byte	.LVL76
 3508 057d 0A000000 		.4byte	.LVL77
 3509 0581 0200     		.2byte	0x2
 3510 0583 30       		.byte	0x30
 3511 0584 9F       		.byte	0x9f
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 98


 3512 0585 00000000 		.4byte	0
 3513 0589 00000000 		.4byte	0
 3514              	.LLST24:
 3515 058d 00000000 		.4byte	.LVL81
 3516 0591 08000000 		.4byte	.LVL83
 3517 0595 0100     		.2byte	0x1
 3518 0597 50       		.byte	0x50
 3519 0598 08000000 		.4byte	.LVL83
 3520 059c 38000000 		.4byte	.LFE9
 3521 05a0 0400     		.2byte	0x4
 3522 05a2 F3       		.byte	0xf3
 3523 05a3 01       		.uleb128 0x1
 3524 05a4 50       		.byte	0x50
 3525 05a5 9F       		.byte	0x9f
 3526 05a6 00000000 		.4byte	0
 3527 05aa 00000000 		.4byte	0
 3528              	.LLST25:
 3529 05ae 1C000000 		.4byte	.LVL87
 3530 05b2 20000000 		.4byte	.LVL88
 3531 05b6 0100     		.2byte	0x1
 3532 05b8 50       		.byte	0x50
 3533 05b9 20000000 		.4byte	.LVL88
 3534 05bd 24000000 		.4byte	.LVL89
 3535 05c1 0800     		.2byte	0x8
 3536 05c3 75       		.byte	0x75
 3537 05c4 00       		.sleb128 0
 3538 05c5 73       		.byte	0x73
 3539 05c6 00       		.sleb128 0
 3540 05c7 37       		.byte	0x37
 3541 05c8 1A       		.byte	0x1a
 3542 05c9 24       		.byte	0x24
 3543 05ca 9F       		.byte	0x9f
 3544 05cb 24000000 		.4byte	.LVL89
 3545 05cf 26000000 		.4byte	.LVL90
 3546 05d3 0800     		.2byte	0x8
 3547 05d5 75       		.byte	0x75
 3548 05d6 00       		.sleb128 0
 3549 05d7 73       		.byte	0x73
 3550 05d8 7F       		.sleb128 -1
 3551 05d9 37       		.byte	0x37
 3552 05da 1A       		.byte	0x1a
 3553 05db 24       		.byte	0x24
 3554 05dc 9F       		.byte	0x9f
 3555 05dd 00000000 		.4byte	0
 3556 05e1 00000000 		.4byte	0
 3557              	.LLST26:
 3558 05e5 06000000 		.4byte	.LVL82
 3559 05e9 08000000 		.4byte	.LVL83
 3560 05ed 0500     		.2byte	0x5
 3561 05ef 72       		.byte	0x72
 3562 05f0 00       		.sleb128 0
 3563 05f1 70       		.byte	0x70
 3564 05f2 00       		.sleb128 0
 3565 05f3 22       		.byte	0x22
 3566 05f4 08000000 		.4byte	.LVL83
 3567 05f8 12000000 		.4byte	.LVL85
 3568 05fc 0200     		.2byte	0x2
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 99


 3569 05fe 70       		.byte	0x70
 3570 05ff 00       		.sleb128 0
 3571 0600 12000000 		.4byte	.LVL85
 3572 0604 24000000 		.4byte	.LVL89
 3573 0608 0100     		.2byte	0x1
 3574 060a 53       		.byte	0x53
 3575 060b 24000000 		.4byte	.LVL89
 3576 060f 26000000 		.4byte	.LVL90
 3577 0613 0300     		.2byte	0x3
 3578 0615 73       		.byte	0x73
 3579 0616 7F       		.sleb128 -1
 3580 0617 9F       		.byte	0x9f
 3581 0618 26000000 		.4byte	.LVL90
 3582 061c 38000000 		.4byte	.LFE9
 3583 0620 0100     		.2byte	0x1
 3584 0622 53       		.byte	0x53
 3585 0623 00000000 		.4byte	0
 3586 0627 00000000 		.4byte	0
 3587              	.LLST27:
 3588 062b 0E000000 		.4byte	.LVL84
 3589 062f 2C000000 		.4byte	.LVL91
 3590 0633 0100     		.2byte	0x1
 3591 0635 56       		.byte	0x56
 3592 0636 00000000 		.4byte	0
 3593 063a 00000000 		.4byte	0
 3594              	.LLST28:
 3595 063e 00000000 		.4byte	.LVL92
 3596 0642 08000000 		.4byte	.LVL94
 3597 0646 0100     		.2byte	0x1
 3598 0648 50       		.byte	0x50
 3599 0649 08000000 		.4byte	.LVL94
 3600 064d 38000000 		.4byte	.LFE10
 3601 0651 0400     		.2byte	0x4
 3602 0653 F3       		.byte	0xf3
 3603 0654 01       		.uleb128 0x1
 3604 0655 50       		.byte	0x50
 3605 0656 9F       		.byte	0x9f
 3606 0657 00000000 		.4byte	0
 3607 065b 00000000 		.4byte	0
 3608              	.LLST29:
 3609 065f 1C000000 		.4byte	.LVL98
 3610 0663 22000000 		.4byte	.LVL99
 3611 0667 0100     		.2byte	0x1
 3612 0669 50       		.byte	0x50
 3613 066a 22000000 		.4byte	.LVL99
 3614 066e 26000000 		.4byte	.LVL100
 3615 0672 0800     		.2byte	0x8
 3616 0674 75       		.byte	0x75
 3617 0675 00       		.sleb128 0
 3618 0676 73       		.byte	0x73
 3619 0677 00       		.sleb128 0
 3620 0678 37       		.byte	0x37
 3621 0679 1A       		.byte	0x1a
 3622 067a 24       		.byte	0x24
 3623 067b 9F       		.byte	0x9f
 3624 067c 26000000 		.4byte	.LVL100
 3625 0680 28000000 		.4byte	.LVL101
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 100


 3626 0684 0800     		.2byte	0x8
 3627 0686 75       		.byte	0x75
 3628 0687 00       		.sleb128 0
 3629 0688 73       		.byte	0x73
 3630 0689 7F       		.sleb128 -1
 3631 068a 37       		.byte	0x37
 3632 068b 1A       		.byte	0x1a
 3633 068c 24       		.byte	0x24
 3634 068d 9F       		.byte	0x9f
 3635 068e 00000000 		.4byte	0
 3636 0692 00000000 		.4byte	0
 3637              	.LLST30:
 3638 0696 06000000 		.4byte	.LVL93
 3639 069a 08000000 		.4byte	.LVL94
 3640 069e 0500     		.2byte	0x5
 3641 06a0 72       		.byte	0x72
 3642 06a1 00       		.sleb128 0
 3643 06a2 70       		.byte	0x70
 3644 06a3 00       		.sleb128 0
 3645 06a4 22       		.byte	0x22
 3646 06a5 08000000 		.4byte	.LVL94
 3647 06a9 12000000 		.4byte	.LVL96
 3648 06ad 0200     		.2byte	0x2
 3649 06af 70       		.byte	0x70
 3650 06b0 00       		.sleb128 0
 3651 06b1 12000000 		.4byte	.LVL96
 3652 06b5 26000000 		.4byte	.LVL100
 3653 06b9 0100     		.2byte	0x1
 3654 06bb 53       		.byte	0x53
 3655 06bc 26000000 		.4byte	.LVL100
 3656 06c0 28000000 		.4byte	.LVL101
 3657 06c4 0300     		.2byte	0x3
 3658 06c6 73       		.byte	0x73
 3659 06c7 7F       		.sleb128 -1
 3660 06c8 9F       		.byte	0x9f
 3661 06c9 28000000 		.4byte	.LVL101
 3662 06cd 38000000 		.4byte	.LFE10
 3663 06d1 0100     		.2byte	0x1
 3664 06d3 53       		.byte	0x53
 3665 06d4 00000000 		.4byte	0
 3666 06d8 00000000 		.4byte	0
 3667              	.LLST31:
 3668 06dc 0E000000 		.4byte	.LVL95
 3669 06e0 2E000000 		.4byte	.LVL102
 3670 06e4 0100     		.2byte	0x1
 3671 06e6 56       		.byte	0x56
 3672 06e7 00000000 		.4byte	0
 3673 06eb 00000000 		.4byte	0
 3674              	.LLST32:
 3675 06ef 00000000 		.4byte	.LVL103
 3676 06f3 0A000000 		.4byte	.LVL106
 3677 06f7 0100     		.2byte	0x1
 3678 06f9 50       		.byte	0x50
 3679 06fa 0A000000 		.4byte	.LVL106
 3680 06fe 2C000000 		.4byte	.LFE11
 3681 0702 0400     		.2byte	0x4
 3682 0704 F3       		.byte	0xf3
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 101


 3683 0705 01       		.uleb128 0x1
 3684 0706 50       		.byte	0x50
 3685 0707 9F       		.byte	0x9f
 3686 0708 00000000 		.4byte	0
 3687 070c 00000000 		.4byte	0
 3688              	.LLST33:
 3689 0710 06000000 		.4byte	.LVL105
 3690 0714 0E000000 		.4byte	.LVL107
 3691 0718 0200     		.2byte	0x2
 3692 071a 30       		.byte	0x30
 3693 071b 9F       		.byte	0x9f
 3694 071c 0E000000 		.4byte	.LVL107
 3695 0720 1E000000 		.4byte	.LVL110
 3696 0724 0100     		.2byte	0x1
 3697 0726 53       		.byte	0x53
 3698 0727 1E000000 		.4byte	.LVL110
 3699 072b 20000000 		.4byte	.LVL111
 3700 072f 0300     		.2byte	0x3
 3701 0731 73       		.byte	0x73
 3702 0732 7F       		.sleb128 -1
 3703 0733 9F       		.byte	0x9f
 3704 0734 20000000 		.4byte	.LVL111
 3705 0738 2C000000 		.4byte	.LFE11
 3706 073c 0100     		.2byte	0x1
 3707 073e 53       		.byte	0x53
 3708 073f 00000000 		.4byte	0
 3709 0743 00000000 		.4byte	0
 3710              	.LLST34:
 3711 0747 02000000 		.4byte	.LVL104
 3712 074b 0E000000 		.4byte	.LVL107
 3713 074f 0300     		.2byte	0x3
 3714 0751 09       		.byte	0x9
 3715 0752 FF       		.byte	0xff
 3716 0753 9F       		.byte	0x9f
 3717 0754 00000000 		.4byte	0
 3718 0758 00000000 		.4byte	0
 3719              	.LLST35:
 3720 075c 02000000 		.4byte	.LVL104
 3721 0760 0E000000 		.4byte	.LVL107
 3722 0764 0200     		.2byte	0x2
 3723 0766 30       		.byte	0x30
 3724 0767 9F       		.byte	0x9f
 3725 0768 0E000000 		.4byte	.LVL107
 3726 076c 1A000000 		.4byte	.LVL108
 3727 0770 0100     		.2byte	0x1
 3728 0772 56       		.byte	0x56
 3729 0773 1C000000 		.4byte	.LVL109
 3730 0777 26000000 		.4byte	.LVL112
 3731 077b 0100     		.2byte	0x1
 3732 077d 56       		.byte	0x56
 3733 077e 00000000 		.4byte	0
 3734 0782 00000000 		.4byte	0
 3735              	.LLST36:
 3736 0786 06000000 		.4byte	.LVL105
 3737 078a 26000000 		.4byte	.LVL112
 3738 078e 0100     		.2byte	0x1
 3739 0790 55       		.byte	0x55
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 102


 3740 0791 00000000 		.4byte	0
 3741 0795 00000000 		.4byte	0
 3742              	.LLST37:
 3743 0799 00000000 		.4byte	.LVL113
 3744 079d 1E000000 		.4byte	.LVL119
 3745 07a1 0100     		.2byte	0x1
 3746 07a3 50       		.byte	0x50
 3747 07a4 1E000000 		.4byte	.LVL119
 3748 07a8 B8000000 		.4byte	.LFE12
 3749 07ac 0400     		.2byte	0x4
 3750 07ae F3       		.byte	0xf3
 3751 07af 01       		.uleb128 0x1
 3752 07b0 50       		.byte	0x50
 3753 07b1 9F       		.byte	0x9f
 3754 07b2 00000000 		.4byte	0
 3755 07b6 00000000 		.4byte	0
 3756              	.LLST38:
 3757 07ba 00000000 		.4byte	.LVL113
 3758 07be 0A000000 		.4byte	.LVL115
 3759 07c2 0100     		.2byte	0x1
 3760 07c4 51       		.byte	0x51
 3761 07c5 0A000000 		.4byte	.LVL115
 3762 07c9 B8000000 		.4byte	.LFE12
 3763 07cd 0400     		.2byte	0x4
 3764 07cf F3       		.byte	0xf3
 3765 07d0 01       		.uleb128 0x1
 3766 07d1 51       		.byte	0x51
 3767 07d2 9F       		.byte	0x9f
 3768 07d3 00000000 		.4byte	0
 3769 07d7 00000000 		.4byte	0
 3770              	.LLST39:
 3771 07db 00000000 		.4byte	.LVL113
 3772 07df 2A000000 		.4byte	.LVL122
 3773 07e3 0100     		.2byte	0x1
 3774 07e5 52       		.byte	0x52
 3775 07e6 2A000000 		.4byte	.LVL122
 3776 07ea 34000000 		.4byte	.LVL124
 3777 07ee 0400     		.2byte	0x4
 3778 07f0 F3       		.byte	0xf3
 3779 07f1 01       		.uleb128 0x1
 3780 07f2 52       		.byte	0x52
 3781 07f3 9F       		.byte	0x9f
 3782 07f4 34000000 		.4byte	.LVL124
 3783 07f8 36000000 		.4byte	.LVL125
 3784 07fc 0100     		.2byte	0x1
 3785 07fe 52       		.byte	0x52
 3786 07ff 36000000 		.4byte	.LVL125
 3787 0803 B8000000 		.4byte	.LFE12
 3788 0807 0400     		.2byte	0x4
 3789 0809 F3       		.byte	0xf3
 3790 080a 01       		.uleb128 0x1
 3791 080b 52       		.byte	0x52
 3792 080c 9F       		.byte	0x9f
 3793 080d 00000000 		.4byte	0
 3794 0811 00000000 		.4byte	0
 3795              	.LLST40:
 3796 0815 00000000 		.4byte	.LVL113
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 103


 3797 0819 AE000000 		.4byte	.LVL135
 3798 081d 0200     		.2byte	0x2
 3799 081f 91       		.byte	0x91
 3800 0820 00       		.sleb128 0
 3801 0821 AE000000 		.4byte	.LVL135
 3802 0825 B8000000 		.4byte	.LFE12
 3803 0829 0200     		.2byte	0x2
 3804 082b 7D       		.byte	0x7d
 3805 082c 00       		.sleb128 0
 3806 082d 00000000 		.4byte	0
 3807 0831 00000000 		.4byte	0
 3808              	.LLST41:
 3809 0835 06000000 		.4byte	.LVL114
 3810 0839 16000000 		.4byte	.LVL116
 3811 083d 0200     		.2byte	0x2
 3812 083f 30       		.byte	0x30
 3813 0840 9F       		.byte	0x9f
 3814 0841 16000000 		.4byte	.LVL116
 3815 0845 18000000 		.4byte	.LVL117
 3816 0849 0100     		.2byte	0x1
 3817 084b 5C       		.byte	0x5c
 3818 084c 18000000 		.4byte	.LVL117
 3819 0850 1C000000 		.4byte	.LVL118
 3820 0854 0200     		.2byte	0x2
 3821 0856 30       		.byte	0x30
 3822 0857 9F       		.byte	0x9f
 3823 0858 1C000000 		.4byte	.LVL118
 3824 085c B8000000 		.4byte	.LFE12
 3825 0860 0100     		.2byte	0x1
 3826 0862 5C       		.byte	0x5c
 3827 0863 00000000 		.4byte	0
 3828 0867 00000000 		.4byte	0
 3829              	.LLST42:
 3830 086b 06000000 		.4byte	.LVL114
 3831 086f 20000000 		.4byte	.LVL120
 3832 0873 0200     		.2byte	0x2
 3833 0875 30       		.byte	0x30
 3834 0876 9F       		.byte	0x9f
 3835 0877 20000000 		.4byte	.LVL120
 3836 087b 24000000 		.4byte	.LVL121
 3837 087f 0100     		.2byte	0x1
 3838 0881 50       		.byte	0x50
 3839 0882 24000000 		.4byte	.LVL121
 3840 0886 AE000000 		.4byte	.LVL135
 3841 088a 0100     		.2byte	0x1
 3842 088c 57       		.byte	0x57
 3843 088d 00000000 		.4byte	0
 3844 0891 00000000 		.4byte	0
 3845              	.LLST43:
 3846 0895 A8000000 		.4byte	.LVL133
 3847 0899 AC000000 		.4byte	.LVL134
 3848 089d 0900     		.2byte	0x9
 3849 089f 70       		.byte	0x70
 3850 08a0 00       		.sleb128 0
 3851 08a1 09       		.byte	0x9
 3852 08a2 EC       		.byte	0xec
 3853 08a3 24       		.byte	0x24
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 104


 3854 08a4 09       		.byte	0x9
 3855 08a5 FC       		.byte	0xfc
 3856 08a6 25       		.byte	0x25
 3857 08a7 9F       		.byte	0x9f
 3858 08a8 AC000000 		.4byte	.LVL134
 3859 08ac AE000000 		.4byte	.LVL135
 3860 08b0 1A00     		.2byte	0x1a
 3861 08b2 74       		.byte	0x74
 3862 08b3 00       		.sleb128 0
 3863 08b4 38       		.byte	0x38
 3864 08b5 24       		.byte	0x24
 3865 08b6 75       		.byte	0x75
 3866 08b7 00       		.sleb128 0
 3867 08b8 38       		.byte	0x38
 3868 08b9 24       		.byte	0x24
 3869 08ba 72       		.byte	0x72
 3870 08bb 00       		.sleb128 0
 3871 08bc 1B       		.byte	0x1b
 3872 08bd 22       		.byte	0x22
 3873 08be 73       		.byte	0x73
 3874 08bf 00       		.sleb128 0
 3875 08c0 1E       		.byte	0x1e
 3876 08c1 23       		.byte	0x23
 3877 08c2 80FE01   		.uleb128 0x7f00
 3878 08c5 09       		.byte	0x9
 3879 08c6 EC       		.byte	0xec
 3880 08c7 24       		.byte	0x24
 3881 08c8 09       		.byte	0x9
 3882 08c9 FC       		.byte	0xfc
 3883 08ca 25       		.byte	0x25
 3884 08cb 9F       		.byte	0x9f
 3885 08cc 00000000 		.4byte	0
 3886 08d0 00000000 		.4byte	0
 3887              	.LLST44:
 3888 08d4 90000000 		.4byte	.LVL129
 3889 08d8 AE000000 		.4byte	.LVL135
 3890 08dc 0100     		.2byte	0x1
 3891 08de 55       		.byte	0x55
 3892 08df AE000000 		.4byte	.LVL135
 3893 08e3 B8000000 		.4byte	.LFE12
 3894 08e7 1600     		.2byte	0x16
 3895 08e9 03       		.byte	0x3
 3896 08ea 06000000 		.4byte	CapSense_centroid.5139+2
 3897 08ee 94       		.byte	0x94
 3898 08ef 01       		.byte	0x1
 3899 08f0 08       		.byte	0x8
 3900 08f1 FF       		.byte	0xff
 3901 08f2 1A       		.byte	0x1a
 3902 08f3 03       		.byte	0x3
 3903 08f4 04000000 		.4byte	CapSense_centroid.5139
 3904 08f8 94       		.byte	0x94
 3905 08f9 01       		.byte	0x1
 3906 08fa 08       		.byte	0x8
 3907 08fb FF       		.byte	0xff
 3908 08fc 1A       		.byte	0x1a
 3909 08fd 1C       		.byte	0x1c
 3910 08fe 9F       		.byte	0x9f
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 105


 3911 08ff 00000000 		.4byte	0
 3912 0903 00000000 		.4byte	0
 3913              	.LLST45:
 3914 0907 94000000 		.4byte	.LVL130
 3915 090b 9E000000 		.4byte	.LVL131
 3916 090f 0100     		.2byte	0x1
 3917 0911 52       		.byte	0x52
 3918 0912 9E000000 		.4byte	.LVL131
 3919 0916 A8000000 		.4byte	.LVL133
 3920 091a 0100     		.2byte	0x1
 3921 091c 50       		.byte	0x50
 3922 091d A8000000 		.4byte	.LVL133
 3923 0921 AC000000 		.4byte	.LVL134
 3924 0925 0500     		.2byte	0x5
 3925 0927 70       		.byte	0x70
 3926 0928 80827E   		.sleb128 -32512
 3927 092b 9F       		.byte	0x9f
 3928 092c AC000000 		.4byte	.LVL134
 3929 0930 AE000000 		.4byte	.LVL135
 3930 0934 1000     		.2byte	0x10
 3931 0936 74       		.byte	0x74
 3932 0937 00       		.sleb128 0
 3933 0938 38       		.byte	0x38
 3934 0939 24       		.byte	0x24
 3935 093a 75       		.byte	0x75
 3936 093b 00       		.sleb128 0
 3937 093c 38       		.byte	0x38
 3938 093d 24       		.byte	0x24
 3939 093e 72       		.byte	0x72
 3940 093f 00       		.sleb128 0
 3941 0940 1B       		.byte	0x1b
 3942 0941 22       		.byte	0x22
 3943 0942 73       		.byte	0x73
 3944 0943 00       		.sleb128 0
 3945 0944 1E       		.byte	0x1e
 3946 0945 9F       		.byte	0x9f
 3947 0946 00000000 		.4byte	0
 3948 094a 00000000 		.4byte	0
 3949              	.LLST46:
 3950 094e 0A000000 		.4byte	.LVL115
 3951 0952 30000000 		.4byte	.LVL123
 3952 0956 0100     		.2byte	0x1
 3953 0958 51       		.byte	0x51
 3954 0959 34000000 		.4byte	.LVL124
 3955 095d 3E000000 		.4byte	.LVL126
 3956 0961 0100     		.2byte	0x1
 3957 0963 51       		.byte	0x51
 3958 0964 48000000 		.4byte	.LVL127
 3959 0968 52000000 		.4byte	.LVL128
 3960 096c 0100     		.2byte	0x1
 3961 096e 51       		.byte	0x51
 3962 096f 00000000 		.4byte	0
 3963 0973 00000000 		.4byte	0
 3964              	.LLST47:
 3965 0977 00000000 		.4byte	.LVL136
 3966 097b 04000000 		.4byte	.LVL137
 3967 097f 0100     		.2byte	0x1
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 106


 3968 0981 50       		.byte	0x50
 3969 0982 04000000 		.4byte	.LVL137
 3970 0986 0C000000 		.4byte	.LFE14
 3971 098a 0400     		.2byte	0x4
 3972 098c F3       		.byte	0xf3
 3973 098d 01       		.uleb128 0x1
 3974 098e 50       		.byte	0x50
 3975 098f 9F       		.byte	0x9f
 3976 0990 00000000 		.4byte	0
 3977 0994 00000000 		.4byte	0
 3978              	.LLST48:
 3979 0998 06000000 		.4byte	.LVL138
 3980 099c 0A000000 		.4byte	.LVL139
 3981 09a0 0500     		.2byte	0x5
 3982 09a2 70       		.byte	0x70
 3983 09a3 00       		.sleb128 0
 3984 09a4 32       		.byte	0x32
 3985 09a5 25       		.byte	0x25
 3986 09a6 9F       		.byte	0x9f
 3987 09a7 00000000 		.4byte	0
 3988 09ab 00000000 		.4byte	0
 3989              	.LLST49:
 3990 09af 00000000 		.4byte	.LVL140
 3991 09b3 18000000 		.4byte	.LVL145
 3992 09b7 0100     		.2byte	0x1
 3993 09b9 50       		.byte	0x50
 3994 09ba 18000000 		.4byte	.LVL145
 3995 09be 80000000 		.4byte	.LFE13
 3996 09c2 0400     		.2byte	0x4
 3997 09c4 F3       		.byte	0xf3
 3998 09c5 01       		.uleb128 0x1
 3999 09c6 50       		.byte	0x50
 4000 09c7 9F       		.byte	0x9f
 4001 09c8 00000000 		.4byte	0
 4002 09cc 00000000 		.4byte	0
 4003              	.LLST50:
 4004 09d0 40000000 		.4byte	.LVL151
 4005 09d4 46000000 		.4byte	.LVL152
 4006 09d8 0100     		.2byte	0x1
 4007 09da 52       		.byte	0x52
 4008 09db 46000000 		.4byte	.LVL152
 4009 09df 4C000000 		.4byte	.LVL154
 4010 09e3 0100     		.2byte	0x1
 4011 09e5 51       		.byte	0x51
 4012 09e6 4C000000 		.4byte	.LVL154
 4013 09ea 56000000 		.4byte	.LVL155
 4014 09ee 0900     		.2byte	0x9
 4015 09f0 71       		.byte	0x71
 4016 09f1 00       		.sleb128 0
 4017 09f2 03       		.byte	0x3
 4018 09f3 00000000 		.4byte	.LANCHOR0
 4019 09f7 1C       		.byte	0x1c
 4020 09f8 9F       		.byte	0x9f
 4021 09f9 56000000 		.4byte	.LVL155
 4022 09fd 5E000000 		.4byte	.LVL157
 4023 0a01 0100     		.2byte	0x1
 4024 0a03 51       		.byte	0x51
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 107


 4025 0a04 5E000000 		.4byte	.LVL157
 4026 0a08 66000000 		.4byte	.LVL159
 4027 0a0c 0300     		.2byte	0x3
 4028 0a0e 75       		.byte	0x75
 4029 0a0f 01       		.sleb128 1
 4030 0a10 9F       		.byte	0x9f
 4031 0a11 00000000 		.4byte	0
 4032 0a15 00000000 		.4byte	0
 4033              	.LLST51:
 4034 0a19 0E000000 		.4byte	.LVL141
 4035 0a1d 1F000000 		.4byte	.LVL147-1
 4036 0a21 0200     		.2byte	0x2
 4037 0a23 73       		.byte	0x73
 4038 0a24 10       		.sleb128 16
 4039 0a25 1F000000 		.4byte	.LVL147-1
 4040 0a29 6A000000 		.4byte	.LVL160
 4041 0a2d 0100     		.2byte	0x1
 4042 0a2f 55       		.byte	0x55
 4043 0a30 6A000000 		.4byte	.LVL160
 4044 0a34 72000000 		.4byte	.LVL161
 4045 0a38 0900     		.2byte	0x9
 4046 0a3a 75       		.byte	0x75
 4047 0a3b 00       		.sleb128 0
 4048 0a3c 03       		.byte	0x3
 4049 0a3d 00000000 		.4byte	.LANCHOR0
 4050 0a41 1C       		.byte	0x1c
 4051 0a42 9F       		.byte	0x9f
 4052 0a43 00000000 		.4byte	0
 4053 0a47 00000000 		.4byte	0
 4054              	.LLST52:
 4055 0a4b 20000000 		.4byte	.LVL147
 4056 0a4f 39000000 		.4byte	.LVL149-1
 4057 0a53 0100     		.2byte	0x1
 4058 0a55 50       		.byte	0x50
 4059 0a56 66000000 		.4byte	.LVL159
 4060 0a5a 72000000 		.4byte	.LVL161
 4061 0a5e 0100     		.2byte	0x1
 4062 0a60 50       		.byte	0x50
 4063 0a61 00000000 		.4byte	0
 4064 0a65 00000000 		.4byte	0
 4065              	.LLST53:
 4066 0a69 3C000000 		.4byte	.LVL150
 4067 0a6d 5C000000 		.4byte	.LVL156
 4068 0a71 0100     		.2byte	0x1
 4069 0a73 50       		.byte	0x50
 4070 0a74 5C000000 		.4byte	.LVL156
 4071 0a78 61000000 		.4byte	.LVL158-1
 4072 0a7c 0100     		.2byte	0x1
 4073 0a7e 53       		.byte	0x53
 4074 0a7f 62000000 		.4byte	.LVL158
 4075 0a83 66000000 		.4byte	.LVL159
 4076 0a87 0100     		.2byte	0x1
 4077 0a89 50       		.byte	0x50
 4078 0a8a 66000000 		.4byte	.LVL159
 4079 0a8e 72000000 		.4byte	.LVL161
 4080 0a92 0300     		.2byte	0x3
 4081 0a94 09       		.byte	0x9
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 108


 4082 0a95 FF       		.byte	0xff
 4083 0a96 9F       		.byte	0x9f
 4084 0a97 72000000 		.4byte	.LVL161
 4085 0a9b 80000000 		.4byte	.LFE13
 4086 0a9f 0100     		.2byte	0x1
 4087 0aa1 50       		.byte	0x50
 4088 0aa2 00000000 		.4byte	0
 4089 0aa6 00000000 		.4byte	0
 4090              	.LLST54:
 4091 0aaa 12000000 		.4byte	.LVL142
 4092 0aae 14000000 		.4byte	.LVL143
 4093 0ab2 0500     		.2byte	0x5
 4094 0ab4 72       		.byte	0x72
 4095 0ab5 00       		.sleb128 0
 4096 0ab6 70       		.byte	0x70
 4097 0ab7 00       		.sleb128 0
 4098 0ab8 22       		.byte	0x22
 4099 0ab9 14000000 		.4byte	.LVL143
 4100 0abd 1C000000 		.4byte	.LVL146
 4101 0ac1 0200     		.2byte	0x2
 4102 0ac3 72       		.byte	0x72
 4103 0ac4 00       		.sleb128 0
 4104 0ac5 1C000000 		.4byte	.LVL146
 4105 0ac9 2A000000 		.4byte	.LVL148
 4106 0acd 0800     		.2byte	0x8
 4107 0acf 74       		.byte	0x74
 4108 0ad0 00       		.sleb128 0
 4109 0ad1 03       		.byte	0x3
 4110 0ad2 00000000 		.4byte	.LANCHOR2
 4111 0ad6 22       		.byte	0x22
 4112 0ad7 2A000000 		.4byte	.LVL148
 4113 0adb 4A000000 		.4byte	.LVL153
 4114 0adf 0E00     		.2byte	0xe
 4115 0ae1 74       		.byte	0x74
 4116 0ae2 00       		.sleb128 0
 4117 0ae3 03       		.byte	0x3
 4118 0ae4 00000000 		.4byte	.LANCHOR0
 4119 0ae8 1C       		.byte	0x1c
 4120 0ae9 03       		.byte	0x3
 4121 0aea 00000000 		.4byte	.LANCHOR2
 4122 0aee 22       		.byte	0x22
 4123 0aef 4A000000 		.4byte	.LVL153
 4124 0af3 78000000 		.4byte	.LVL162
 4125 0af7 0100     		.2byte	0x1
 4126 0af9 57       		.byte	0x57
 4127 0afa 00000000 		.4byte	0
 4128 0afe 00000000 		.4byte	0
 4129              	.LLST55:
 4130 0b02 16000000 		.4byte	.LVL144
 4131 0b06 1C000000 		.4byte	.LVL146
 4132 0b0a 0200     		.2byte	0x2
 4133 0b0c 72       		.byte	0x72
 4134 0b0d 04       		.sleb128 4
 4135 0b0e 1C000000 		.4byte	.LVL146
 4136 0b12 2A000000 		.4byte	.LVL148
 4137 0b16 0800     		.2byte	0x8
 4138 0b18 74       		.byte	0x74
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 109


 4139 0b19 00       		.sleb128 0
 4140 0b1a 03       		.byte	0x3
 4141 0b1b 04000000 		.4byte	.LANCHOR2+4
 4142 0b1f 22       		.byte	0x22
 4143 0b20 2A000000 		.4byte	.LVL148
 4144 0b24 4A000000 		.4byte	.LVL153
 4145 0b28 0E00     		.2byte	0xe
 4146 0b2a 74       		.byte	0x74
 4147 0b2b 00       		.sleb128 0
 4148 0b2c 03       		.byte	0x3
 4149 0b2d 00000000 		.4byte	.LANCHOR2
 4150 0b31 22       		.byte	0x22
 4151 0b32 03       		.byte	0x3
 4152 0b33 FCFFFFFF 		.4byte	.LANCHOR0-4
 4153 0b37 1C       		.byte	0x1c
 4154 0b38 4A000000 		.4byte	.LVL153
 4155 0b3c 78000000 		.4byte	.LVL162
 4156 0b40 0100     		.2byte	0x1
 4157 0b42 56       		.byte	0x56
 4158 0b43 00000000 		.4byte	0
 4159 0b47 00000000 		.4byte	0
 4160              		.section	.debug_aranges,"",%progbits
 4161 0000 8C000000 		.4byte	0x8c
 4162 0004 0200     		.2byte	0x2
 4163 0006 00000000 		.4byte	.Ldebug_info0
 4164 000a 04       		.byte	0x4
 4165 000b 00       		.byte	0
 4166 000c 0000     		.2byte	0
 4167 000e 0000     		.2byte	0
 4168 0010 00000000 		.4byte	.LFB0
 4169 0014 44000000 		.4byte	.LFE0-.LFB0
 4170 0018 00000000 		.4byte	.LFB1
 4171 001c 18000000 		.4byte	.LFE1-.LFB1
 4172 0020 00000000 		.4byte	.LFB2
 4173 0024 16000000 		.4byte	.LFE2-.LFB2
 4174 0028 00000000 		.4byte	.LFB3
 4175 002c 48000000 		.4byte	.LFE3-.LFB3
 4176 0030 00000000 		.4byte	.LFB4
 4177 0034 D0000000 		.4byte	.LFE4-.LFB4
 4178 0038 00000000 		.4byte	.LFB5
 4179 003c 30000000 		.4byte	.LFE5-.LFB5
 4180 0040 00000000 		.4byte	.LFB6
 4181 0044 A0000000 		.4byte	.LFE6-.LFB6
 4182 0048 00000000 		.4byte	.LFB7
 4183 004c 2C000000 		.4byte	.LFE7-.LFB7
 4184 0050 00000000 		.4byte	.LFB8
 4185 0054 20000000 		.4byte	.LFE8-.LFB8
 4186 0058 00000000 		.4byte	.LFB9
 4187 005c 38000000 		.4byte	.LFE9-.LFB9
 4188 0060 00000000 		.4byte	.LFB10
 4189 0064 38000000 		.4byte	.LFE10-.LFB10
 4190 0068 00000000 		.4byte	.LFB11
 4191 006c 2C000000 		.4byte	.LFE11-.LFB11
 4192 0070 00000000 		.4byte	.LFB12
 4193 0074 B8000000 		.4byte	.LFE12-.LFB12
 4194 0078 00000000 		.4byte	.LFB14
 4195 007c 0C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 110


 4196 0080 00000000 		.4byte	.LFB13
 4197 0084 80000000 		.4byte	.LFE13-.LFB13
 4198 0088 00000000 		.4byte	0
 4199 008c 00000000 		.4byte	0
 4200              		.section	.debug_ranges,"",%progbits
 4201              	.Ldebug_ranges0:
 4202 0000 00000000 		.4byte	.LFB0
 4203 0004 44000000 		.4byte	.LFE0
 4204 0008 00000000 		.4byte	.LFB1
 4205 000c 18000000 		.4byte	.LFE1
 4206 0010 00000000 		.4byte	.LFB2
 4207 0014 16000000 		.4byte	.LFE2
 4208 0018 00000000 		.4byte	.LFB3
 4209 001c 48000000 		.4byte	.LFE3
 4210 0020 00000000 		.4byte	.LFB4
 4211 0024 D0000000 		.4byte	.LFE4
 4212 0028 00000000 		.4byte	.LFB5
 4213 002c 30000000 		.4byte	.LFE5
 4214 0030 00000000 		.4byte	.LFB6
 4215 0034 A0000000 		.4byte	.LFE6
 4216 0038 00000000 		.4byte	.LFB7
 4217 003c 2C000000 		.4byte	.LFE7
 4218 0040 00000000 		.4byte	.LFB8
 4219 0044 20000000 		.4byte	.LFE8
 4220 0048 00000000 		.4byte	.LFB9
 4221 004c 38000000 		.4byte	.LFE9
 4222 0050 00000000 		.4byte	.LFB10
 4223 0054 38000000 		.4byte	.LFE10
 4224 0058 00000000 		.4byte	.LFB11
 4225 005c 2C000000 		.4byte	.LFE11
 4226 0060 00000000 		.4byte	.LFB12
 4227 0064 B8000000 		.4byte	.LFE12
 4228 0068 00000000 		.4byte	.LFB14
 4229 006c 0C000000 		.4byte	.LFE14
 4230 0070 00000000 		.4byte	.LFB13
 4231 0074 80000000 		.4byte	.LFE13
 4232 0078 00000000 		.4byte	0
 4233 007c 00000000 		.4byte	0
 4234              		.section	.debug_line,"",%progbits
 4235              	.Ldebug_line0:
 4236 0000 C0020000 		.section	.debug_str,"MS",%progbits,1
 4236      02006D00 
 4236      00000201 
 4236      FB0E0D00 
 4236      01010101 
 4237              	.LASF46:
 4238 0000 636F756E 		.ascii	"count\000"
 4238      7400
 4239              	.LASF10:
 4240 0006 75696E74 		.ascii	"uint16\000"
 4240      313600
 4241              	.LASF28:
 4242 000d 66696C74 		.ascii	"filteredRawData\000"
 4242      65726564 
 4242      52617744 
 4242      61746100 
 4243              	.LASF73:
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 111


 4244 001d 43617053 		.ascii	"CapSense_hysteresis\000"
 4244      656E7365 
 4244      5F687973 
 4244      74657265 
 4244      73697300 
 4245              	.LASF81:
 4246 0031 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4246      4320342E 
 4246      382E3420 
 4246      32303134 
 4246      30353236 
 4247 0064 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 4247      20726576 
 4247      6973696F 
 4247      6E203231 
 4247      31333538 
 4248 0097 67202D66 		.ascii	"g -ffunction-sections\000"
 4248      66756E63 
 4248      74696F6E 
 4248      2D736563 
 4248      74696F6E 
 4249              	.LASF83:
 4250 00ad 433A5C72 		.ascii	"C:\\repositories\\embedded\\trunk\\CE4920Project1\\"
 4250      65706F73 
 4250      69746F72 
 4250      6965735C 
 4250      656D6265 
 4251 00db 44657369 		.ascii	"Design01.cydsn\000"
 4251      676E3031 
 4251      2E637964 
 4251      736E00
 4252              	.LASF69:
 4253 00ea 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4253      656E7365 
 4253      5F73656E 
 4253      736F724F 
 4253      6E4D6173 
 4254              	.LASF33:
 4255 0100 66696E67 		.ascii	"fingerThreshold\000"
 4255      65725468 
 4255      72657368 
 4255      6F6C6400 
 4256              	.LASF52:
 4257 0110 706F7350 		.ascii	"posPrev\000"
 4257      72657600 
 4258              	.LASF7:
 4259 0118 6C6F6E67 		.ascii	"long long unsigned int\000"
 4259      206C6F6E 
 4259      6720756E 
 4259      7369676E 
 4259      65642069 
 4260              	.LASF68:
 4261 012f 43617053 		.ascii	"CapSense_sensorSignal\000"
 4261      656E7365 
 4261      5F73656E 
 4261      736F7253 
 4261      69676E61 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 112


 4262              	.LASF61:
 4263 0145 66697273 		.ascii	"firstTimeIndex\000"
 4263      7454696D 
 4263      65496E64 
 4263      657800
 4264              	.LASF23:
 4265 0154 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4265      656E7365 
 4265      5F496E69 
 4265      7469616C 
 4265      697A6545 
 4266              	.LASF30:
 4267 0178 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4267      656E7365 
 4267      5F557064 
 4267      61746545 
 4267      6E61626C 
 4268              	.LASF6:
 4269 0198 6C6F6E67 		.ascii	"long long int\000"
 4269      206C6F6E 
 4269      6720696E 
 4269      7400
 4270              	.LASF0:
 4271 01a6 7369676E 		.ascii	"signed char\000"
 4271      65642063 
 4271      68617200 
 4272              	.LASF43:
 4273 01b2 43617053 		.ascii	"CapSense_DisableWidget\000"
 4273      656E7365 
 4273      5F446973 
 4273      61626C65 
 4273      57696467 
 4274              	.LASF38:
 4275 01c9 72617749 		.ascii	"rawIndex\000"
 4275      6E646578 
 4275      00
 4276              	.LASF39:
 4277 01d2 6E756D62 		.ascii	"numberOfSensors\000"
 4277      65724F66 
 4277      53656E73 
 4277      6F727300 
 4278              	.LASF13:
 4279 01e2 696E7433 		.ascii	"int32\000"
 4279      3200
 4280              	.LASF40:
 4281 01e8 73746174 		.ascii	"state\000"
 4281      6500
 4282              	.LASF4:
 4283 01ee 6C6F6E67 		.ascii	"long int\000"
 4283      20696E74 
 4283      00
 4284              	.LASF56:
 4285 01f7 6E756D65 		.ascii	"numerator\000"
 4285      7261746F 
 4285      7200
 4286              	.LASF41:
 4287 0201 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 113


 4287      656E7365 
 4287      5F436865 
 4287      636B4973 
 4287      416E7957 
 4288              	.LASF57:
 4289 0221 64656E6F 		.ascii	"denominator\000"
 4289      6D696E61 
 4289      746F7200 
 4290              	.LASF9:
 4291 022d 75696E74 		.ascii	"uint8\000"
 4291      3800
 4292              	.LASF15:
 4293 0233 646F7562 		.ascii	"double\000"
 4293      6C6500
 4294              	.LASF65:
 4295 023a 43617053 		.ascii	"CapSense_widgetNumber\000"
 4295      656E7365 
 4295      5F776964 
 4295      6765744E 
 4295      756D6265 
 4296              	.LASF11:
 4297 0250 75696E74 		.ascii	"uint32\000"
 4297      333200
 4298              	.LASF34:
 4299 0257 68797374 		.ascii	"hysteresis\000"
 4299      65726573 
 4299      697300
 4300              	.LASF53:
 4301 0262 706F734E 		.ascii	"posNext\000"
 4301      65787400 
 4302              	.LASF49:
 4303 026a 73746172 		.ascii	"startOfSlider\000"
 4303      744F6653 
 4303      6C696465 
 4303      7200
 4304              	.LASF48:
 4305 0278 74656D70 		.ascii	"temp\000"
 4305      00
 4306              	.LASF58:
 4307 027d 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4307      656E7365 
 4307      5F494952 
 4307      3446696C 
 4307      74657200 
 4308              	.LASF84:
 4309 0291 43617053 		.ascii	"CapSense_ScanSensor\000"
 4309      656E7365 
 4309      5F536361 
 4309      6E53656E 
 4309      736F7200 
 4310              	.LASF8:
 4311 02a5 756E7369 		.ascii	"unsigned int\000"
 4311      676E6564 
 4311      20696E74 
 4311      00
 4312              	.LASF55:
 4313 02b2 706F7369 		.ascii	"position\000"
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 114


 4313      74696F6E 
 4313      00
 4314              	.LASF5:
 4315 02bb 6C6F6E67 		.ascii	"long unsigned int\000"
 4315      20756E73 
 4315      69676E65 
 4315      6420696E 
 4315      7400
 4316              	.LASF67:
 4317 02cd 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4317      656E7365 
 4317      5F73656E 
 4317      736F7242 
 4317      6173656C 
 4318              	.LASF79:
 4319 02e8 43617053 		.ascii	"CapSense_posFiltersMask\000"
 4319      656E7365 
 4319      5F706F73 
 4319      46696C74 
 4319      6572734D 
 4320              	.LASF76:
 4321 0300 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4321      656E7365 
 4321      5F726177 
 4321      44617461 
 4321      496E6465 
 4322              	.LASF3:
 4323 0316 73686F72 		.ascii	"short unsigned int\000"
 4323      7420756E 
 4323      7369676E 
 4323      65642069 
 4323      6E7400
 4324              	.LASF20:
 4325 0329 73656E73 		.ascii	"sensor\000"
 4325      6F7200
 4326              	.LASF64:
 4327 0330 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4327      656E7365 
 4327      5F73656E 
 4327      736F7245 
 4327      6E61626C 
 4328              	.LASF44:
 4329 034a 43617053 		.ascii	"CapSense_FindMaximum\000"
 4329      656E7365 
 4329      5F46696E 
 4329      644D6178 
 4329      696D756D 
 4330              	.LASF25:
 4331 035f 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4331      656E7365 
 4331      5F557064 
 4331      61746553 
 4331      656E736F 
 4332              	.LASF82:
 4333 037d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 4333      6E657261 
 4333      7465645F 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 115


 4333      536F7572 
 4333      63655C50 
 4334              	.LASF26:
 4335 03a6 63616C63 		.ascii	"calc\000"
 4335      00
 4336              	.LASF87:
 4337 03ab 43617053 		.ascii	"CapSense_CalculateThresholds\000"
 4337      656E7365 
 4337      5F43616C 
 4337      63756C61 
 4337      74655468 
 4338              	.LASF80:
 4339 03c8 43617053 		.ascii	"CapSense_posFiltersData\000"
 4339      656E7365 
 4339      5F706F73 
 4339      46696C74 
 4339      65727344 
 4340              	.LASF70:
 4341 03e0 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4341      656E7365 
 4341      5F6C6F77 
 4341      42617365 
 4341      6C696E65 
 4342              	.LASF60:
 4343 03fd 706F7349 		.ascii	"posIndex\000"
 4343      6E646578 
 4343      00
 4344              	.LASF35:
 4345 0406 6465626F 		.ascii	"debounce\000"
 4345      756E6365 
 4345      00
 4346              	.LASF17:
 4347 040f 73697A65 		.ascii	"sizetype\000"
 4347      74797065 
 4347      00
 4348              	.LASF42:
 4349 0418 43617053 		.ascii	"CapSense_EnableWidget\000"
 4349      656E7365 
 4349      5F456E61 
 4349      626C6557 
 4349      69646765 
 4350              	.LASF62:
 4351 042e 706F7346 		.ascii	"posFiltersMask\000"
 4351      696C7465 
 4351      72734D61 
 4351      736B00
 4352              	.LASF19:
 4353 043d 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4353      656E7365 
 4353      5F496E69 
 4353      7469616C 
 4353      697A6553 
 4354              	.LASF36:
 4355 045f 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4355      656E7365 
 4355      5F436865 
 4355      636B4973 
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 116


 4355      53656E73 
 4356              	.LASF24:
 4357 047c 656E4D61 		.ascii	"enMask\000"
 4357      736B00
 4358              	.LASF72:
 4359 0483 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4359      656E7365 
 4359      5F6E6F69 
 4359      73655468 
 4359      72657368 
 4360              	.LASF71:
 4361 049b 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4361      656E7365 
 4361      5F66696E 
 4361      67657254 
 4361      68726573 
 4362              	.LASF78:
 4363 04b4 43617053 		.ascii	"CapSense_centroidMult\000"
 4363      656E7365 
 4363      5F63656E 
 4363      74726F69 
 4363      644D756C 
 4364              	.LASF14:
 4365 04ca 666C6F61 		.ascii	"float\000"
 4365      7400
 4366              	.LASF37:
 4367 04d0 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4367      656E7365 
 4367      5F436865 
 4367      636B4973 
 4367      57696467 
 4368              	.LASF1:
 4369 04ed 756E7369 		.ascii	"unsigned char\000"
 4369      676E6564 
 4369      20636861 
 4369      7200
 4370              	.LASF21:
 4371 04fb 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4371      656E7365 
 4371      5F496E69 
 4371      7469616C 
 4371      697A6541 
 4372              	.LASF29:
 4373 051b 6E6F6973 		.ascii	"noiseThreshold\000"
 4373      65546872 
 4373      6573686F 
 4373      6C6400
 4374              	.LASF2:
 4375 052a 73686F72 		.ascii	"short int\000"
 4375      7420696E 
 4375      7400
 4376              	.LASF22:
 4377 0534 77696467 		.ascii	"widget\000"
 4377      657400
 4378              	.LASF32:
 4379 053b 6F6E4D61 		.ascii	"onMask\000"
 4379      736B00
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 117


 4380              	.LASF47:
 4381 0542 6D617869 		.ascii	"maximum\000"
 4381      6D756D00 
 4382              	.LASF18:
 4383 054a 43617053 		.ascii	"CapSense_BaseInit\000"
 4383      656E7365 
 4383      5F426173 
 4383      65496E69 
 4383      7400
 4384              	.LASF51:
 4385 055c 7265736F 		.ascii	"resolution\000"
 4385      6C757469 
 4385      6F6E00
 4386              	.LASF74:
 4387 0567 43617053 		.ascii	"CapSense_debounce\000"
 4387      656E7365 
 4387      5F646562 
 4387      6F756E63 
 4387      6500
 4388              	.LASF66:
 4389 0579 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4389      656E7365 
 4389      5F73656E 
 4389      736F7242 
 4389      6173656C 
 4390              	.LASF59:
 4391 0591 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 4391      656E7365 
 4391      5F476574 
 4391      43656E74 
 4391      726F6964 
 4392              	.LASF16:
 4393 05a9 63686172 		.ascii	"char\000"
 4393      00
 4394              	.LASF54:
 4395 05ae 43617053 		.ascii	"CapSense_centroid\000"
 4395      656E7365 
 4395      5F63656E 
 4395      74726F69 
 4395      6400
 4396              	.LASF45:
 4397 05c0 6F666673 		.ascii	"offset\000"
 4397      657400
 4398              	.LASF31:
 4399 05c7 6465626F 		.ascii	"debounceIndex\000"
 4399      756E6365 
 4399      496E6465 
 4399      7800
 4400              	.LASF12:
 4401 05d5 696E7431 		.ascii	"int16\000"
 4401      3600
 4402              	.LASF63:
 4403 05db 43617053 		.ascii	"CapSense_sensorRaw\000"
 4403      656E7365 
 4403      5F73656E 
 4403      736F7252 
 4403      617700
ARM GAS  C:\Users\JohnP\AppData\Local\Temp\cc4GrDuO.s 			page 118


 4404              	.LASF50:
 4405 05ee 43617053 		.ascii	"CapSense_CalcCentroid\000"
 4405      656E7365 
 4405      5F43616C 
 4405      6343656E 
 4405      74726F69 
 4406              	.LASF86:
 4407 0604 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4407      656E7365 
 4407      5F536361 
 4407      6E456E61 
 4407      626C6564 
 4408              	.LASF75:
 4409 0620 43617053 		.ascii	"CapSense_debounceCounter\000"
 4409      656E7365 
 4409      5F646562 
 4409      6F756E63 
 4409      65436F75 
 4410              	.LASF27:
 4411 0639 74656D70 		.ascii	"tempRaw\000"
 4411      52617700 
 4412              	.LASF85:
 4413 0641 43617053 		.ascii	"CapSense_IsBusy\000"
 4413      656E7365 
 4413      5F497342 
 4413      75737900 
 4414              	.LASF77:
 4415 0651 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4415      656E7365 
 4415      5F6E756D 
 4415      6265724F 
 4415      6653656E 
 4416              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
